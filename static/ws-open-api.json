{
 "openapi": "3.1.1",
 "info": {
  "title": "WS-APIv3 Documentation",
  "description": "The Web Services API v3 (WS-APIv3) provides a more flexible and powerful way to perform storage management tasks than the Command Line Interface (CLI).\u003cbr\u003e Use WS-APIv3 to automate your management tasks for hosts, ports, volumes, and more.",
  "version": "v3 2.5.0 (2025-05-29 18:16:57 UTC)",
  "contact": {
   "name": "Hewlett Packard Enterprise",
   "email": "wsapi-dev@hpe.com"
  }
 },
 "paths": {
  "/api/v3/alerts": {
   "get": {
    "operationId": "AlertCOLLECTION",
    "tags": [
     "Activities"
    ],
    "summary": "Used to query collection of resources",
    "description": "Returns all the resources that user has access to",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Collection of resources",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/alerts.Alert"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   },
   "post": {
    "operationId": "custom_actions /api/v3/alerts",
    "tags": [
     "Activities"
    ],
    "summary": "Used to perform custom action",
    "description": "Executes custom action on a resource\u003cbr\u003e Multiple custom actions can be defined.  Parameters in the body are optional",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Content-Type",
      "in": "header",
      "description": "Acceptable format of the body. Must be set to following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "required": true,
      "schema": {
       "type": "string",
       "default": "application/json"
      }
     },
     {
      "name": "Content-Length",
      "in": "header",
      "description": "The length of the content in bytes.",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "required": true,
     "content": {
      "application/json": {
       "schema": {
        "oneOf": [
         {
          "$ref": "#/components/schemas/alerts_aggregate.Update_multiple_alerts"
         }
        ]
       }
      }
     }
    },
    "responses": {
     "201": {
      "description": "Resource has been successfully created, and the location of the new resource is returned in the Location header"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "alerts_aggregate"
   }
  },
  "/api/v3/alerts/custom": {
   "post": {
    "operationId": "custom_actions /api/v3/alerts/custom",
    "tags": [
     "Activities"
    ],
    "summary": "Custom actions for alerts",
    "description": "This allows the user to perform a number of custom actions on alerts.",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Content-Type",
      "in": "header",
      "description": "Acceptable format of the body. Must be set to following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "required": true,
      "schema": {
       "type": "string",
       "default": "application/json"
      }
     },
     {
      "name": "Content-Length",
      "in": "header",
      "description": "The length of the content in bytes.",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "required": true,
     "content": {
      "application/json": {
       "schema": {
        "oneOf": [
         {
          "$ref": "#/components/schemas/alerts_aggregate.Create_a_test_alert"
         }
        ]
       }
      }
     }
    },
    "responses": {
     "201": {
      "description": "Resource has been successfully created, and the location of the new resource is returned in the Location header"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "alerts_aggregate"
   }
  },
  "/api/v3/alerts/{uid}": {
   "delete": {
    "operationId": "delete /api/v3/alerts/{uid}",
    "tags": [
     "Activities"
    ],
    "summary": "Remove an Alert",
    "description": "Removes an Alert from the system",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "Resource has been successfully removed"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "alerts_aggregate"
   },
   "get": {
    "operationId": "AlertSINGLE",
    "tags": [
     "Activities"
    ],
    "summary": "Used to query a single resource",
    "description": "Returns a single resource based on a UID, if the user has access to it",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Single resource",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/alerts.Alert"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   },
   "patch": {
    "operationId": "patch /api/v3/alerts/{uid}",
    "tags": [
     "Activities"
    ],
    "summary": "Update an Alert",
    "description": "Updates an Alert on the system",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Content-Type",
      "in": "header",
      "description": "Acceptable format of the body. Must be set to following:\u003cbr\u003e\u003cbr\u003e - application/merge-patch+json",
      "required": true,
      "schema": {
       "type": "string",
       "default": "application/merge-patch+json"
      }
     },
     {
      "name": "Content-Length",
      "in": "header",
      "description": "The length of the content in bytes.",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "required": true,
     "content": {
      "application/merge-patch+json": {
       "schema": {
        "$ref": "#/components/schemas/alerts.UpdateAlert"
       }
      }
     }
    },
    "responses": {
     "200": {
      "description": "Resource has been successfully updated"
     },
     "201": {
      "description": "Resource has been successfully created, and the location of the new resource is returned in the Location header"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "alerts_aggregate"
   }
  },
  "/api/v3/applicationsets": {
   "get": {
    "operationId": "ApplicationSetCOLLECTION",
    "tags": [
     "Sets"
    ],
    "summary": "Used to query collection of resources",
    "description": "Returns all the resources that user has access to",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Collection of resources",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/applicationset.ApplicationSet"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   },
   "post": {
    "operationId": "post /api/v3/applicationsets",
    "tags": [
     "Sets"
    ],
    "summary": "Create a new virtual volume set.",
    "description": "Creates a new virtual volume set.",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Content-Type",
      "in": "header",
      "description": "Acceptable format of the body. Must be set to following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "required": true,
      "schema": {
       "type": "string",
       "default": "application/json"
      }
     },
     {
      "name": "Content-Length",
      "in": "header",
      "description": "The length of the content in bytes.",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "required": true,
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/applicationset.CreateApplicationSet"
       }
      }
     }
    },
    "responses": {
     "201": {
      "description": "Resource has been successfully created, and the location of the new resource is returned in the Location header"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "applicationset"
   }
  },
  "/api/v3/applicationsets/custom": {
   "post": {
    "operationId": "custom_actions /api/v3/applicationsets/custom",
    "tags": [
     "Sets"
    ],
    "summary": "Used to perform custom action for virtual volume set such as bulk delete.",
    "description": "Executes custom action for virtual volume set such as bulk delete.",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Content-Type",
      "in": "header",
      "description": "Acceptable format of the body. Must be set to following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "required": true,
      "schema": {
       "type": "string",
       "default": "application/json"
      }
     },
     {
      "name": "Content-Length",
      "in": "header",
      "description": "The length of the content in bytes.",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "required": true,
     "content": {
      "application/json": {
       "schema": {
        "oneOf": [
         {
          "$ref": "#/components/schemas/applicationset.Bulk_delete_application_sets"
         }
        ]
       }
      }
     }
    },
    "responses": {
     "201": {
      "description": "Resource has been successfully created, and the location of the new resource is returned in the Location header"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "applicationset"
   }
  },
  "/api/v3/applicationsets/{uid}": {
   "delete": {
    "operationId": "delete /api/v3/applicationsets/{uid}",
    "tags": [
     "Sets"
    ],
    "summary": "Remove a virtual volume set.",
    "description": "Removes a virtual volume set. Member volumes are not removed.",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "Resource has been successfully removed"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "applicationset"
   },
   "get": {
    "operationId": "ApplicationSetSINGLE",
    "tags": [
     "Sets"
    ],
    "summary": "Used to query a single resource",
    "description": "Returns a single resource based on a UID, if the user has access to it",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Single resource",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/applicationset.ApplicationSet"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   },
   "patch": {
    "operationId": "patch /api/v3/applicationsets/{uid}",
    "tags": [
     "Sets"
    ],
    "summary": "Update a virtual volume set.",
    "description": "Updates a virtual volume set.",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Content-Type",
      "in": "header",
      "description": "Acceptable format of the body. Must be set to following:\u003cbr\u003e\u003cbr\u003e - application/merge-patch+json",
      "required": true,
      "schema": {
       "type": "string",
       "default": "application/merge-patch+json"
      }
     },
     {
      "name": "Content-Length",
      "in": "header",
      "description": "The length of the content in bytes.",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "required": true,
     "content": {
      "application/merge-patch+json": {
       "schema": {
        "$ref": "#/components/schemas/applicationset.PatchApplicationSet"
       }
      }
     }
    },
    "responses": {
     "200": {
      "description": "Resource has been successfully updated"
     },
     "201": {
      "description": "Resource has been successfully created, and the location of the new resource is returned in the Location header"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "applicationset"
   },
   "post": {
    "operationId": "custom_actions /api/v3/applicationsets/{uid}",
    "tags": [
     "Sets"
    ],
    "summary": "Used to perform custom action on a virtual volume set.",
    "description": "Executes custom action on a virtual volume set.",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Content-Type",
      "in": "header",
      "description": "Acceptable format of the body. Must be set to following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "required": true,
      "schema": {
       "type": "string",
       "default": "application/json"
      }
     },
     {
      "name": "Content-Length",
      "in": "header",
      "description": "The length of the content in bytes.",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "required": true,
     "content": {
      "application/json": {
       "schema": {
        "oneOf": [
         {
          "$ref": "#/components/schemas/applicationset.Create_Application_set_snapshot"
         }
        ]
       }
      }
     }
    },
    "responses": {
     "201": {
      "description": "Resource has been successfully created, and the location of the new resource is returned in the Location header"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "applicationset"
   }
  },
  "/api/v3/certificates": {
   "get": {
    "operationId": "CertificateCOLLECTION",
    "tags": [
     "Security"
    ],
    "summary": "Used to query collection of resources",
    "description": "Returns all the resources that user has access to",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Collection of resources",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/certificates.Certificate"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   },
   "post": {
    "operationId": "post /api/v3/certificates",
    "tags": [
     "Security"
    ],
    "summary": "Create a new certificate for a service",
    "description": "Create a new self-signed certificate or certificate signing request for a service",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Content-Type",
      "in": "header",
      "description": "Acceptable format of the body. Must be set to following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "required": true,
      "schema": {
       "type": "string",
       "default": "application/json"
      }
     },
     {
      "name": "Content-Length",
      "in": "header",
      "description": "The length of the content in bytes.",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "required": true,
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/certificates.CreateCertificate"
       }
      }
     }
    },
    "responses": {
     "201": {
      "description": "Resource has been successfully created, and the location of the new resource is returned in the Location header"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "certificates"
   }
  },
  "/api/v3/certificates/{uid}": {
   "delete": {
    "operationId": "delete /api/v3/certificates/{uid}",
    "tags": [
     "Security"
    ],
    "summary": "Delete a server certificate",
    "description": "Delete a server certificate",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "Resource has been successfully removed"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "certificates"
   },
   "get": {
    "operationId": "CertificateSINGLE",
    "tags": [
     "Security"
    ],
    "summary": "Used to query a single resource",
    "description": "Returns a single resource based on a UID, if the user has access to it",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Single resource",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/certificates.Certificate"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   },
   "patch": {
    "operationId": "patch /api/v3/certificates/{uid}",
    "tags": [
     "Security"
    ],
    "summary": "Finish a Certificate Signing Request",
    "description": "Finish a pending Certificate Signing Request by supplying the signed certificate and its CA chain",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Content-Type",
      "in": "header",
      "description": "Acceptable format of the body. Must be set to following:\u003cbr\u003e\u003cbr\u003e - application/merge-patch+json",
      "required": true,
      "schema": {
       "type": "string",
       "default": "application/merge-patch+json"
      }
     },
     {
      "name": "Content-Length",
      "in": "header",
      "description": "The length of the content in bytes.",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "required": true,
     "content": {
      "application/merge-patch+json": {
       "schema": {
        "$ref": "#/components/schemas/certificates.FinishCsr"
       }
      }
     }
    },
    "responses": {
     "200": {
      "description": "Resource has been successfully updated"
     },
     "201": {
      "description": "Resource has been successfully created, and the location of the new resource is returned in the Location header"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "certificates"
   }
  },
  "/api/v3/checkpassword": {
   "post": {
    "operationId": "post /api/v3/checkpassword",
    "tags": [
     "Security"
    ],
    "summary": "Check the password of a user",
    "description": "Check the password of a user.  The password can be passed as a single string or a list of single characters",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Content-Type",
      "in": "header",
      "description": "Acceptable format of the body. Must be set to following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "required": true,
      "schema": {
       "type": "string",
       "default": "application/json"
      }
     },
     {
      "name": "Content-Length",
      "in": "header",
      "description": "The length of the content in bytes.",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "required": true,
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/users.CheckPasswordRequest"
       }
      }
     }
    },
    "responses": {
     "201": {
      "description": "Resource has been successfully created, and the location of the new resource is returned in the Location header"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "users"
   }
  },
  "/api/v3/cpgs": {
   "get": {
    "operationId": "CpgCOLLECTION",
    "tags": [
     "Block Services"
    ],
    "summary": "Used to query collection of resources",
    "description": "Returns all the resources that user has access to",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Collection of resources",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/cpg.Cpg"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   },
   "post": {
    "operationId": "post /api/v3/cpgs",
    "tags": [
     "Block Services"
    ],
    "summary": "Creates a new CPG",
    "description": "Creates a new common provisioning group (CPG)",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Content-Type",
      "in": "header",
      "description": "Acceptable format of the body. Must be set to following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "required": true,
      "schema": {
       "type": "string",
       "default": "application/json"
      }
     },
     {
      "name": "Content-Length",
      "in": "header",
      "description": "The length of the content in bytes.",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "required": true,
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/cpg.CreateCpg"
       }
      }
     }
    },
    "responses": {
     "201": {
      "description": "Resource has been successfully created, and the location of the new resource is returned in the Location header"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "cpg"
   }
  },
  "/api/v3/cpgs/custom": {
   "post": {
    "operationId": "custom_actions /api/v3/cpgs/custom",
    "tags": [
     "Block Services"
    ],
    "summary": "Used to perform custom action",
    "description": "Executes custom action on a resource\u003cbr\u003e Multiple custom actions can be defined.  Parameters in the body are optional",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Content-Type",
      "in": "header",
      "description": "Acceptable format of the body. Must be set to following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "required": true,
      "schema": {
       "type": "string",
       "default": "application/json"
      }
     },
     {
      "name": "Content-Length",
      "in": "header",
      "description": "The length of the content in bytes.",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "required": true,
     "content": {
      "application/json": {
       "schema": {
        "oneOf": [
         {
          "$ref": "#/components/schemas/cpg.Bulk_delete_cpgs"
         }
        ]
       }
      }
     }
    },
    "responses": {
     "201": {
      "description": "Resource has been successfully created, and the location of the new resource is returned in the Location header"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "cpg"
   }
  },
  "/api/v3/cpgs/{uid}": {
   "delete": {
    "operationId": "delete /api/v3/cpgs/{uid}",
    "tags": [
     "Block Services"
    ],
    "summary": "Remove a CPG",
    "description": "Remove a common provisioning group (CPG). The CPG must not have any volumes or belong to an AO configuration.",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "Resource has been successfully removed"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "cpg"
   },
   "get": {
    "operationId": "CpgSINGLE",
    "tags": [
     "Block Services"
    ],
    "summary": "Used to query a single resource",
    "description": "Returns a single resource based on a UID, if the user has access to it",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Single resource",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/cpg.Cpg"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   },
   "patch": {
    "operationId": "patch /api/v3/cpgs/{uid}",
    "tags": [
     "Block Services"
    ],
    "summary": "Updates CPG properties",
    "description": "Updates common provisioning group properties",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Content-Type",
      "in": "header",
      "description": "Acceptable format of the body. Must be set to following:\u003cbr\u003e\u003cbr\u003e - application/merge-patch+json",
      "required": true,
      "schema": {
       "type": "string",
       "default": "application/merge-patch+json"
      }
     },
     {
      "name": "Content-Length",
      "in": "header",
      "description": "The length of the content in bytes.",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "required": true,
     "content": {
      "application/merge-patch+json": {
       "schema": {
        "$ref": "#/components/schemas/cpg.PatchCpg"
       }
      }
     }
    },
    "responses": {
     "200": {
      "description": "Resource has been successfully updated"
     },
     "201": {
      "description": "Resource has been successfully created, and the location of the new resource is returned in the Location header"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "cpg"
   }
  },
  "/api/v3/credentials": {
   "delete": {
    "operationId": "delete /api/v3/credentials",
    "tags": [
     "Security"
    ],
    "summary": "Delete (logout) the session",
    "description": "Delete WS-APIv3 session and any underlying WS-APIv1 sessions.  This version gets the token to delete from the sessionToken cookie",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "Resource has been successfully removed"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "sessions"
   },
   "get": {
    "operationId": "UserSessionCOLLECTION",
    "tags": [
     "Security"
    ],
    "summary": "Used to query collection of resources",
    "description": "Returns all the resources that user has access to",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Collection of resources",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/sessions.UserSession"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   },
   "post": {
    "operationId": "post /api/v3/credentials",
    "tags": [
     "Security"
    ],
    "summary": "Create new session token for WS-APIv3",
    "description": "Create new session token for WS-APIv3 using credentials information.  The password can be passed as a single string or a list of single characters",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Content-Type",
      "in": "header",
      "description": "Acceptable format of the body. Must be set to following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "required": true,
      "schema": {
       "type": "string",
       "default": "application/json"
      }
     },
     {
      "name": "Content-Length",
      "in": "header",
      "description": "The length of the content in bytes.",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "required": true,
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/sessions.LoginRequest"
       }
      }
     }
    },
    "responses": {
     "201": {
      "description": "Resource has been successfully created, and the location of the new resource is returned in the Location header"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "sessions"
   }
  },
  "/api/v3/credentials/{sessionToken}": {
   "delete": {
    "operationId": "delete /api/v3/credentials/{sessionToken}",
    "tags": [
     "Security"
    ],
    "summary": "Delete (logout) the session",
    "description": "Delete WS-APIv3 session and any underlying WS-APIv1 sessions",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "sessionToken",
      "in": "path",
      "description": "Session token",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "Resource has been successfully removed"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "sessions"
   },
   "get": {
    "operationId": "get /api/v3/credentials/{sessionToken}",
    "tags": [
     "Security"
    ],
    "summary": "Retrieves information about the session.",
    "description": "Retrieves information about the session.",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "sessionToken",
      "in": "path",
      "description": "Session token",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Single resource",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/sessions.UserSession"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    },
    "packageName": "sessions"
   }
  },
  "/api/v3/disks": {
   "get": {
    "operationId": "PhysicalDiskCOLLECTION",
    "tags": [
     "Hardware"
    ],
    "summary": "Used to query collection of resources",
    "description": "Returns all the resources that user has access to",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Collection of resources",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/hw_disk.PhysicalDisk"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   }
  },
  "/api/v3/disks/{uid}": {
   "get": {
    "operationId": "PhysicalDiskSINGLE",
    "tags": [
     "Hardware"
    ],
    "summary": "Used to query a single resource",
    "description": "Returns a single resource based on a UID, if the user has access to it",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Single resource",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/hw_disk.PhysicalDisk"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   }
  },
  "/api/v3/domains": {
   "get": {
    "operationId": "SysDomainCOLLECTION",
    "tags": [
     "Block Services"
    ],
    "summary": "Used to query collection of resources",
    "description": "Returns all the resources that user has access to",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Collection of resources",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/domain.SysDomain"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   },
   "post": {
    "operationId": "post /api/v3/domains",
    "tags": [
     "Block Services"
    ],
    "summary": "Create a new domain",
    "description": "Used to create a new domain",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Content-Type",
      "in": "header",
      "description": "Acceptable format of the body. Must be set to following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "required": true,
      "schema": {
       "type": "string",
       "default": "application/json"
      }
     },
     {
      "name": "Content-Length",
      "in": "header",
      "description": "The length of the content in bytes.",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "required": true,
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/domain.CreateDomain"
       }
      }
     }
    },
    "responses": {
     "201": {
      "description": "Resource has been successfully created, and the location of the new resource is returned in the Location header"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "domain"
   }
  },
  "/api/v3/domains/custom": {
   "post": {
    "operationId": "custom_actions /api/v3/domains/custom",
    "tags": [
     "Block Services"
    ],
    "summary": "Custom actions on domains",
    "description": "Custom actions on domains, such as moving an object to a domain",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Content-Type",
      "in": "header",
      "description": "Acceptable format of the body. Must be set to following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "required": true,
      "schema": {
       "type": "string",
       "default": "application/json"
      }
     },
     {
      "name": "Content-Length",
      "in": "header",
      "description": "The length of the content in bytes.",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "required": true,
     "content": {
      "application/json": {
       "schema": {
        "oneOf": [
         {
          "$ref": "#/components/schemas/domain.Move_an_object_to_a_domain"
         }
        ]
       }
      }
     }
    },
    "responses": {
     "201": {
      "description": "Resource has been successfully created, and the location of the new resource is returned in the Location header"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "domain"
   }
  },
  "/api/v3/domains/{uid}": {
   "delete": {
    "operationId": "delete /api/v3/domains/{uid}",
    "tags": [
     "Block Services"
    ],
    "summary": "Delete a domain",
    "description": "Used to delete a single domain",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "Resource has been successfully removed"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "domain"
   },
   "get": {
    "operationId": "SysDomainSINGLE",
    "tags": [
     "Block Services"
    ],
    "summary": "Used to query a single resource",
    "description": "Returns a single resource based on a UID, if the user has access to it",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Single resource",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/domain.SysDomain"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   },
   "patch": {
    "operationId": "patch /api/v3/domains/{uid}",
    "tags": [
     "Block Services"
    ],
    "summary": "Modify a domain",
    "description": "Used to modify an existing domain",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Content-Type",
      "in": "header",
      "description": "Acceptable format of the body. Must be set to following:\u003cbr\u003e\u003cbr\u003e - application/merge-patch+json",
      "required": true,
      "schema": {
       "type": "string",
       "default": "application/merge-patch+json"
      }
     },
     {
      "name": "Content-Length",
      "in": "header",
      "description": "The length of the content in bytes.",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "required": true,
     "content": {
      "application/merge-patch+json": {
       "schema": {
        "$ref": "#/components/schemas/domain.EditDomain"
       }
      }
     }
    },
    "responses": {
     "200": {
      "description": "Resource has been successfully updated"
     },
     "201": {
      "description": "Resource has been successfully created, and the location of the new resource is returned in the Location header"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "domain"
   }
  },
  "/api/v3/domainsets": {
   "get": {
    "operationId": "DomainSetCOLLECTION",
    "tags": [
     "Sets"
    ],
    "summary": "Used to query collection of resources",
    "description": "Returns all the resources that user has access to",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Collection of resources",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/domainset.DomainSet"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   }
  },
  "/api/v3/domainsets/{uid}": {
   "get": {
    "operationId": "DomainSetSINGLE",
    "tags": [
     "Sets"
    ],
    "summary": "Used to query a single resource",
    "description": "Returns a single resource based on a UID, if the user has access to it",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Single resource",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/domainset.DomainSet"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   }
  },
  "/api/v3/hostpaths": {
   "get": {
    "operationId": "HostPathCOLLECTION",
    "tags": [
     "Hardware"
    ],
    "summary": "Used to query collection of resources",
    "description": "Returns all the resources that user has access to",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Collection of resources",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/hostpath.HostPath"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   }
  },
  "/api/v3/hostpaths/{uid}": {
   "get": {
    "operationId": "HostPathSINGLE",
    "tags": [
     "Hardware"
    ],
    "summary": "Used to query a single resource",
    "description": "Returns a single resource based on a UID, if the user has access to it",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Single resource",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/hostpath.HostPath"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   }
  },
  "/api/v3/hosts": {
   "get": {
    "operationId": "HostCOLLECTION",
    "tags": [
     "Block Services"
    ],
    "summary": "Used to query collection of resources",
    "description": "Returns all the resources that user has access to",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Collection of resources",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/host.Host"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   },
   "post": {
    "operationId": "post /api/v3/hosts",
    "tags": [
     "Block Services"
    ],
    "summary": "Create new host",
    "description": "Creates new host",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Content-Type",
      "in": "header",
      "description": "Acceptable format of the body. Must be set to following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "required": true,
      "schema": {
       "type": "string",
       "default": "application/json"
      }
     },
     {
      "name": "Content-Length",
      "in": "header",
      "description": "The length of the content in bytes.",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "required": true,
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/host.CreateHost"
       }
      }
     }
    },
    "responses": {
     "201": {
      "description": "Resource has been successfully created, and the location of the new resource is returned in the Location header"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "host"
   }
  },
  "/api/v3/hosts/custom": {
   "post": {
    "operationId": "custom_actions /api/v3/hosts/custom",
    "tags": [
     "Block Services"
    ],
    "summary": "Used to perform custom action",
    "description": "Executes custom action on a resource\u003cbr\u003e Multiple custom actions can be defined.  Parameters in the body are optional",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Content-Type",
      "in": "header",
      "description": "Acceptable format of the body. Must be set to following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "required": true,
      "schema": {
       "type": "string",
       "default": "application/json"
      }
     },
     {
      "name": "Content-Length",
      "in": "header",
      "description": "The length of the content in bytes.",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "required": true,
     "content": {
      "application/json": {
       "schema": {
        "oneOf": [
         {
          "$ref": "#/components/schemas/host.Bulk_delete_hosts"
         }
        ]
       }
      }
     }
    },
    "responses": {
     "201": {
      "description": "Resource has been successfully created, and the location of the new resource is returned in the Location header"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "host"
   }
  },
  "/api/v3/hosts/{uid}": {
   "delete": {
    "operationId": "delete /api/v3/hosts/{uid}",
    "tags": [
     "Block Services"
    ],
    "summary": "Removes existing host",
    "description": "Removes existing host",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "Resource has been successfully removed"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "host"
   },
   "get": {
    "operationId": "HostSINGLE",
    "tags": [
     "Block Services"
    ],
    "summary": "Used to query a single resource",
    "description": "Returns a single resource based on a UID, if the user has access to it",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Single resource",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/host.Host"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   },
   "patch": {
    "operationId": "patch /api/v3/hosts/{uid}",
    "tags": [
     "Block Services"
    ],
    "summary": "Updates host properties",
    "description": "Updates host properties",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Content-Type",
      "in": "header",
      "description": "Acceptable format of the body. Must be set to following:\u003cbr\u003e\u003cbr\u003e - application/merge-patch+json",
      "required": true,
      "schema": {
       "type": "string",
       "default": "application/merge-patch+json"
      }
     },
     {
      "name": "Content-Length",
      "in": "header",
      "description": "The length of the content in bytes.",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "required": true,
     "content": {
      "application/merge-patch+json": {
       "schema": {
        "$ref": "#/components/schemas/host.PatchHost"
       }
      }
     }
    },
    "responses": {
     "200": {
      "description": "Resource has been successfully updated"
     },
     "201": {
      "description": "Resource has been successfully created, and the location of the new resource is returned in the Location header"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "host"
   }
  },
  "/api/v3/hostsets": {
   "get": {
    "operationId": "HostSetCOLLECTION",
    "tags": [
     "Sets"
    ],
    "summary": "Used to query collection of resources",
    "description": "Returns all the resources that user has access to",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Collection of resources",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/hostset.HostSet"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   },
   "post": {
    "operationId": "post /api/v3/hostsets",
    "tags": [
     "Sets"
    ],
    "summary": "Create a new host set.",
    "description": "Creates a new host set.",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Content-Type",
      "in": "header",
      "description": "Acceptable format of the body. Must be set to following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "required": true,
      "schema": {
       "type": "string",
       "default": "application/json"
      }
     },
     {
      "name": "Content-Length",
      "in": "header",
      "description": "The length of the content in bytes.",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "required": true,
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/objectset.CreateObjectSet"
       }
      }
     }
    },
    "responses": {
     "201": {
      "description": "Resource has been successfully created, and the location of the new resource is returned in the Location header"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "hostset"
   }
  },
  "/api/v3/hostsets/custom": {
   "post": {
    "operationId": "custom_actions /api/v3/hostsets/custom",
    "tags": [
     "Sets"
    ],
    "summary": "Used to perform custom action",
    "description": "Executes custom action on a resource\u003cbr\u003e Multiple custom actions can be defined.  Parameters in the body are optional",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Content-Type",
      "in": "header",
      "description": "Acceptable format of the body. Must be set to following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "required": true,
      "schema": {
       "type": "string",
       "default": "application/json"
      }
     },
     {
      "name": "Content-Length",
      "in": "header",
      "description": "The length of the content in bytes.",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "required": true,
     "content": {
      "application/json": {
       "schema": {
        "oneOf": [
         {
          "$ref": "#/components/schemas/hostset.Bulk_delete_volume"
         }
        ]
       }
      }
     }
    },
    "responses": {
     "201": {
      "description": "Resource has been successfully created, and the location of the new resource is returned in the Location header"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "hostset"
   }
  },
  "/api/v3/hostsets/{uid}": {
   "delete": {
    "operationId": "delete /api/v3/hostsets/{uid}",
    "tags": [
     "Sets"
    ],
    "summary": "Remove a host set.",
    "description": "Removes a host set. Member hosts are not removed.",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "Resource has been successfully removed"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "hostset"
   },
   "get": {
    "operationId": "HostSetSINGLE",
    "tags": [
     "Sets"
    ],
    "summary": "Used to query a single resource",
    "description": "Returns a single resource based on a UID, if the user has access to it",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Single resource",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/hostset.HostSet"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   },
   "patch": {
    "operationId": "patch /api/v3/hostsets/{uid}",
    "tags": [
     "Sets"
    ],
    "summary": "Update a host set.",
    "description": "Updates a host set.",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Content-Type",
      "in": "header",
      "description": "Acceptable format of the body. Must be set to following:\u003cbr\u003e\u003cbr\u003e - application/merge-patch+json",
      "required": true,
      "schema": {
       "type": "string",
       "default": "application/merge-patch+json"
      }
     },
     {
      "name": "Content-Length",
      "in": "header",
      "description": "The length of the content in bytes.",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "required": true,
     "content": {
      "application/merge-patch+json": {
       "schema": {
        "$ref": "#/components/schemas/objectset.PatchObjectSet"
       }
      }
     }
    },
    "responses": {
     "200": {
      "description": "Resource has been successfully updated"
     },
     "201": {
      "description": "Resource has been successfully created, and the location of the new resource is returned in the Location header"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "hostset"
   }
  },
  "/api/v3/osinfo": {
   "get": {
    "operationId": "OsInfoCOLLECTION",
    "tags": [
     "Server Info"
    ],
    "summary": "Used to query collection of resources",
    "description": "Returns all the resources that user has access to",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Collection of resources",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/osinfo.OsInfo"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   }
  },
  "/api/v3/ports": {
   "get": {
    "operationId": "PortCOLLECTION",
    "tags": [
     "Hardware"
    ],
    "summary": "Used to query collection of resources",
    "description": "Returns all the resources that user has access to",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Collection of resources",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/port.Port"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   }
  },
  "/api/v3/ports-internal": {
   "get": {
    "operationId": "InternalPortCOLLECTION",
    "tags": [
     "Hardware"
    ],
    "summary": "Used to query collection of resources",
    "description": "Returns all the resources that user has access to",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Collection of resources",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/port_internal.InternalPort"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   }
  },
  "/api/v3/ports-internal/{uid}": {
   "get": {
    "operationId": "InternalPortSINGLE",
    "tags": [
     "Hardware"
    ],
    "summary": "Used to query a single resource",
    "description": "Returns a single resource based on a UID, if the user has access to it",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Single resource",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/port_internal.InternalPort"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   }
  },
  "/api/v3/ports-mgmt": {
   "get": {
    "operationId": "MgmtPortCOLLECTION",
    "tags": [
     "Hardware"
    ],
    "summary": "Used to query collection of resources",
    "description": "Returns all the resources that user has access to",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Collection of resources",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/port_mgmt.MgmtPort"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   }
  },
  "/api/v3/ports-mgmt/{uid}": {
   "get": {
    "operationId": "MgmtPortSINGLE",
    "tags": [
     "Hardware"
    ],
    "summary": "Used to query a single resource",
    "description": "Returns a single resource based on a UID, if the user has access to it",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Single resource",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/port_mgmt.MgmtPort"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   }
  },
  "/api/v3/ports/custom": {
   "post": {
    "operationId": "custom_actions /api/v3/ports/custom",
    "tags": [
     "Hardware"
    ],
    "summary": "Used to perform custom action for port such as bulk edit",
    "description": "Executes custom action for port such as bulk edit",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Content-Type",
      "in": "header",
      "description": "Acceptable format of the body. Must be set to following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "required": true,
      "schema": {
       "type": "string",
       "default": "application/json"
      }
     },
     {
      "name": "Content-Length",
      "in": "header",
      "description": "The length of the content in bytes.",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "required": true,
     "content": {
      "application/json": {
       "schema": {
        "oneOf": [
         {
          "$ref": "#/components/schemas/port.Bulk_edit_ports"
         }
        ]
       }
      }
     }
    },
    "responses": {
     "201": {
      "description": "Resource has been successfully created, and the location of the new resource is returned in the Location header"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "port"
   }
  },
  "/api/v3/ports/{uid}": {
   "get": {
    "operationId": "PortSINGLE",
    "tags": [
     "Hardware"
    ],
    "summary": "Used to query a single resource",
    "description": "Returns a single resource based on a UID, if the user has access to it",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Single resource",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/port.Port"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   },
   "patch": {
    "operationId": "patch /api/v3/ports/{uid}",
    "tags": [
     "Hardware"
    ],
    "summary": "Updates configuration of the port",
    "description": "Modifies properties of the port\u003cbr\u003e\u003cbr\u003eBody of the request should contain parameters that are specific to the type of the port\u003cbr\u003eFor iSCSI/NVMe the collection of VLANs should always be passed in with at least the vlanId to avoid removing those entries.",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Content-Type",
      "in": "header",
      "description": "Acceptable format of the body. Must be set to following:\u003cbr\u003e\u003cbr\u003e - application/merge-patch+json",
      "required": true,
      "schema": {
       "type": "string",
       "default": "application/merge-patch+json"
      }
     },
     {
      "name": "Content-Length",
      "in": "header",
      "description": "The length of the content in bytes.",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "required": true,
     "content": {
      "application/merge-patch+json": {
       "schema": {
        "$ref": "#/components/schemas/port.EditPortISCSI"
       }
      }
     }
    },
    "responses": {
     "200": {
      "description": "Resource has been successfully updated"
     },
     "201": {
      "description": "Resource has been successfully created, and the location of the new resource is returned in the Location header"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "port"
   },
   "post": {
    "operationId": "custom_actions /api/v3/ports/{uid}",
    "tags": [
     "Hardware"
    ],
    "summary": "Used to perform custom action on a port",
    "description": "Executes custom action on a port",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Content-Type",
      "in": "header",
      "description": "Acceptable format of the body. Must be set to following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "required": true,
      "schema": {
       "type": "string",
       "default": "application/json"
      }
     },
     {
      "name": "Content-Length",
      "in": "header",
      "description": "The length of the content in bytes.",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "required": true,
     "content": {
      "application/json": {
       "schema": {
        "oneOf": [
         {
          "$ref": "#/components/schemas/port.Ping_RCIP_Port"
         },
         {
          "$ref": "#/components/schemas/port.Enable_Port"
         },
         {
          "$ref": "#/components/schemas/port.Disable_Port"
         },
         {
          "$ref": "#/components/schemas/port.Clear_Port"
         },
         {
          "$ref": "#/components/schemas/port.Init_Port"
         }
        ]
       }
      }
     }
    },
    "responses": {
     "201": {
      "description": "Resource has been successfully created, and the location of the new resource is returned in the Location header"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "port"
   }
  },
  "/api/v3/provisioning": {
   "post": {
    "operationId": "custom_actions /api/v3/provisioning",
    "tags": [
     "Block Services"
    ],
    "summary": "Used to perform custom action",
    "description": "Executes custom action on a resource\u003cbr\u003e Multiple custom actions can be defined.  Parameters in the body are optional",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Content-Type",
      "in": "header",
      "description": "Acceptable format of the body. Must be set to following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "required": true,
      "schema": {
       "type": "string",
       "default": "application/json"
      }
     },
     {
      "name": "Content-Length",
      "in": "header",
      "description": "The length of the content in bytes.",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "required": true,
     "content": {
      "application/json": {
       "schema": {
        "oneOf": [
         {
          "$ref": "#/components/schemas/provisioning.CREATE_COMPLEX_APPSET_CREATE_VOLUME_subaction"
         },
         {
          "$ref": "#/components/schemas/provisioning.CREATE_COMPLEX_APPSET_CREATE_APPSET_subaction"
         },
         {
          "$ref": "#/components/schemas/provisioning.CREATE_COMPLEX_APPSET_CREATE_APPSET_SNAPSHOT_SCHEDULE_subaction"
         },
         {
          "$ref": "#/components/schemas/provisioning.CREATE_COMPLEX_APPSET_EXPORT_APPSET_subaction"
         },
         {
          "$ref": "#/components/schemas/provisioning.MODIFY_COMPLEX_APPSET_CREATE_APPSET_SNAPSHOT_SCHEDULE_subaction"
         },
         {
          "$ref": "#/components/schemas/provisioning.MODIFY_COMPLEX_APPSET_CREATE_VOLUME_subaction"
         },
         {
          "$ref": "#/components/schemas/provisioning.MODIFY_COMPLEX_APPSET_DELETE_APPSET_SNAPSHOT_SCHEDULE_subaction"
         },
         {
          "$ref": "#/components/schemas/provisioning.MODIFY_COMPLEX_APPSET_EXPORT_APPSET_subaction"
         },
         {
          "$ref": "#/components/schemas/provisioning.MODIFY_COMPLEX_APPSET_MODIFY_APPSET_subaction"
         },
         {
          "$ref": "#/components/schemas/provisioning.MODIFY_COMPLEX_APPSET_UNEXPORT_APPSET_subaction"
         },
         {
          "$ref": "#/components/schemas/provisioning.MODIFY_COMPLEX_APPSET_SET_MEMBER_RWARE_POLICY_subaction"
         },
         {
          "$ref": "#/components/schemas/provisioning.CREATE_COMPLEX_HOSTSET_CREATE_HOST_subaction"
         },
         {
          "$ref": "#/components/schemas/provisioning.CREATE_COMPLEX_HOSTSET_CREATE_HOSTSET_subaction"
         },
         {
          "$ref": "#/components/schemas/provisioning.MODIFY_COMPLEX_HOSTSET_CREATE_HOST_subaction"
         },
         {
          "$ref": "#/components/schemas/provisioning.MODIFY_COMPLEX_HOSTSET_CREATE_HOSTSET_subaction"
         },
         {
          "$ref": "#/components/schemas/provisioning.MODIFY_VOLUME_EDIT_VOLUME_subaction"
         },
         {
          "$ref": "#/components/schemas/provisioning.MODIFY_VOLUME_TUNE_VOLUME_subaction"
         }
        ]
       }
      }
     }
    },
    "responses": {
     "201": {
      "description": "Resource has been successfully created, and the location of the new resource is returned in the Location header"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "provisioning"
   }
  },
  "/api/v3/qosconfigs": {
   "get": {
    "operationId": "QosConfigCOLLECTION",
    "tags": [
     "Block Services"
    ],
    "summary": "Used to query collection of resources",
    "description": "Returns all the resources that user has access to",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Collection of resources",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/qosconfig.QosConfig"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   },
   "post": {
    "operationId": "post /api/v3/qosconfigs",
    "tags": [
     "Block Services"
    ],
    "summary": "Create a QOS configuration.",
    "description": "Creates a QOS configuration.",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Content-Type",
      "in": "header",
      "description": "Acceptable format of the body. Must be set to following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "required": true,
      "schema": {
       "type": "string",
       "default": "application/json"
      }
     },
     {
      "name": "Content-Length",
      "in": "header",
      "description": "The length of the content in bytes.",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "required": true,
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/qosconfig.SetQosConfig"
       }
      }
     }
    },
    "responses": {
     "201": {
      "description": "Resource has been successfully created, and the location of the new resource is returned in the Location header"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "qosconfig"
   }
  },
  "/api/v3/qosconfigs/{uid}": {
   "delete": {
    "operationId": "delete /api/v3/qosconfigs/{uid}",
    "tags": [
     "Block Services"
    ],
    "summary": "Remove a QOS configuration.",
    "description": "Removes a QOS configuration.",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "Resource has been successfully removed"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "qosconfig"
   },
   "get": {
    "operationId": "QosConfigSINGLE",
    "tags": [
     "Block Services"
    ],
    "summary": "Used to query a single resource",
    "description": "Returns a single resource based on a UID, if the user has access to it",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Single resource",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/qosconfig.QosConfig"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   },
   "patch": {
    "operationId": "patch /api/v3/qosconfigs/{uid}",
    "tags": [
     "Block Services"
    ],
    "summary": "Update a QOS configuration.",
    "description": "Updates a QOS configuration.",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Content-Type",
      "in": "header",
      "description": "Acceptable format of the body. Must be set to following:\u003cbr\u003e\u003cbr\u003e - application/merge-patch+json",
      "required": true,
      "schema": {
       "type": "string",
       "default": "application/merge-patch+json"
      }
     },
     {
      "name": "Content-Length",
      "in": "header",
      "description": "The length of the content in bytes.",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "required": true,
     "content": {
      "application/merge-patch+json": {
       "schema": {
        "$ref": "#/components/schemas/qosconfig.SetQosConfig"
       }
      }
     }
    },
    "responses": {
     "200": {
      "description": "Resource has been successfully updated"
     },
     "201": {
      "description": "Resource has been successfully created, and the location of the new resource is returned in the Location header"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "qosconfig"
   }
  },
  "/api/v3/rights": {
   "get": {
    "operationId": "RightCOLLECTION",
    "tags": [
     "Security"
    ],
    "summary": "Used to query collection of resources",
    "description": "Returns all the resources that user has access to",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Collection of resources",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/rights.Right"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   }
  },
  "/api/v3/rights/{uid}": {
   "get": {
    "operationId": "RightSINGLE",
    "tags": [
     "Security"
    ],
    "summary": "Used to query a single resource",
    "description": "Returns a single resource based on a UID, if the user has access to it",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Single resource",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/rights.Right"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   }
  },
  "/api/v3/roles": {
   "get": {
    "operationId": "RoleCOLLECTION",
    "tags": [
     "Security"
    ],
    "summary": "Used to query collection of resources",
    "description": "Returns all the resources that user has access to",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Collection of resources",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/roles.Role"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   }
  },
  "/api/v3/roles/{uid}": {
   "get": {
    "operationId": "RoleSINGLE",
    "tags": [
     "Security"
    ],
    "summary": "Used to query a single resource",
    "description": "Returns a single resource based on a UID, if the user has access to it",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Single resource",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/roles.Role"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   }
  },
  "/api/v3/schedules": {
   "get": {
    "operationId": "ScheduleCOLLECTION",
    "tags": [
     "Activities"
    ],
    "summary": "Used to query collection of resources",
    "description": "Returns all the resources that user has access to",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Collection of resources",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schedule.Schedule"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   },
   "post": {
    "operationId": "post /api/v3/schedules",
    "tags": [
     "Activities"
    ],
    "summary": "Creates a new scheduled task.",
    "description": "Creates a new scheduled task.\u003cbr\u003e \u003cpre\u003e Using interval can make a schedule run a specified number of minutes\u003cbr\u003e between 15 and 1440 (1 day). When -interval is used, the minute field must\u003cbr\u003e be \"*\" or \"-\". This can be combined with the scheduling fields\u003cbr\u003e other than minute. The system will try to automatically balance the\u003cbr\u003e schedule compared to other schedules already running on the system. The\u003cbr\u003e schedule will always run for the specified interval, so it can run at\u003cbr\u003e different times every day if the specified interval is not a divisor of\u003cbr\u003e 1440. \u003c/pre\u003e",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Content-Type",
      "in": "header",
      "description": "Acceptable format of the body. Must be set to following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "required": true,
      "schema": {
       "type": "string",
       "default": "application/json"
      }
     },
     {
      "name": "Content-Length",
      "in": "header",
      "description": "The length of the content in bytes.",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "required": true,
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schedule.CreateSchedule"
       }
      }
     }
    },
    "responses": {
     "201": {
      "description": "Resource has been successfully created, and the location of the new resource is returned in the Location header"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "schedule"
   }
  },
  "/api/v3/schedules/{uid}": {
   "delete": {
    "operationId": "delete /api/v3/schedules/{uid}",
    "tags": [
     "Activities"
    ],
    "summary": "Removes scheduled task.",
    "description": "Removes scheduled task.",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "Resource has been successfully removed"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "schedule"
   },
   "get": {
    "operationId": "ScheduleSINGLE",
    "tags": [
     "Activities"
    ],
    "summary": "Used to query a single resource",
    "description": "Returns a single resource based on a UID, if the user has access to it",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Single resource",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schedule.Schedule"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   },
   "patch": {
    "operationId": "patch /api/v3/schedules/{uid}",
    "tags": [
     "Activities"
    ],
    "summary": "Update a scheduled task.",
    "description": "Updates a scheduled task. See POST@/api/v3/schedules/{uid} for more detail",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Content-Type",
      "in": "header",
      "description": "Acceptable format of the body. Must be set to following:\u003cbr\u003e\u003cbr\u003e - application/merge-patch+json",
      "required": true,
      "schema": {
       "type": "string",
       "default": "application/merge-patch+json"
      }
     },
     {
      "name": "Content-Length",
      "in": "header",
      "description": "The length of the content in bytes.",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "required": true,
     "content": {
      "application/merge-patch+json": {
       "schema": {
        "$ref": "#/components/schemas/schedule.PatchSchedule"
       }
      }
     }
    },
    "responses": {
     "200": {
      "description": "Resource has been successfully updated"
     },
     "201": {
      "description": "Resource has been successfully created, and the location of the new resource is returned in the Location header"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "schedule"
   },
   "post": {
    "operationId": "custom_actions /api/v3/schedules/{uid}",
    "tags": [
     "Activities"
    ],
    "summary": "Used to perform custom action",
    "description": "Executes custom action on a resource\u003cbr\u003e Multiple custom actions can be defined.  Parameters in the body are optional",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Content-Type",
      "in": "header",
      "description": "Acceptable format of the body. Must be set to following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "required": true,
      "schema": {
       "type": "string",
       "default": "application/json"
      }
     },
     {
      "name": "Content-Length",
      "in": "header",
      "description": "The length of the content in bytes.",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "required": true,
     "content": {
      "application/json": {
       "schema": {
        "oneOf": [
         {
          "$ref": "#/components/schemas/schedule.Suspend_Schedule"
         },
         {
          "$ref": "#/components/schemas/schedule.Resume_Schedule"
         }
        ]
       }
      }
     }
    },
    "responses": {
     "201": {
      "description": "Resource has been successfully created, and the location of the new resource is returned in the Location header"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "schedule"
   }
  },
  "/api/v3/softwareupdate/recommendations": {
   "get": {
    "operationId": "SwRecommendationCOLLECTION",
    "tags": [
     "Software Update"
    ],
    "summary": "Used to query all available software updates visible to the user",
    "description": "Returns all available software update that are visible to the user.\u003cbr\u003e\u003cbr\u003e An available software update represents a recommended or staged OS version that the system may be updated to, and the latest download, readiness, and installation status for that package. This resource updates in real time. \u003cbr\u003e\u003cbr\u003e An empty response signifies that there are no available software updates visible to the current user.\u003cbr\u003e\u003cbr\u003e A recommended package may be automatically staged without user action. If not, a package should first be staged. \u003cbr\u003e\u003cbr\u003e Best practice is to run readiness checks on a package within 7 days of performing a software update.\u003cbr\u003e\u003cbr\u003e When an update completes successfully, it is no longer an available package. Successful software updates can be checked in the softwarestatus endpoint.",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Collection of resources",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/softwareupdate_recommendations.SwRecommendation"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   }
  },
  "/api/v3/softwareupdate/recommendations/{uid}": {
   "get": {
    "operationId": "SwRecommendationSINGLE",
    "tags": [
     "Software Update"
    ],
    "summary": "Used to query an available software update by UID",
    "description": "Returns a single available software update corresponding to the given UID, if the user has access to it.\u003cbr\u003e\u003cbr\u003e An available software update represents a recommended or staged OS version that the system may be updated to, and the latest download, readiness, and installation status for that package. This resource updates in real time. \u003cbr\u003e\u003cbr\u003e A 403 or 404 invalid uid response signifies there is not a recommendation available at that uid to the current user.\u003cbr\u003e\u003cbr\u003e A recommended package may be automatically staged without user action. If not, a package should first be staged. \u003cbr\u003e\u003cbr\u003e Best practice is to run readiness checks on a package within 7 days of performing a software update.\u003cbr\u003e\u003cbr\u003e When an update completes successfully, it is no longer an available package. Successful software updates can be checked in the softwarestatus endpoint.",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Single resource",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/softwareupdate_recommendations.SwRecommendation"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   },
   "post": {
    "operationId": "custom_actions /api/v3/softwareupdate/recommendations/{uid}",
    "tags": [
     "Software Update"
    ],
    "summary": "Used to perform an action on an available software update",
    "description": "Allows the user to perform one of the following actions on an available software update:\u003cbr\u003e\u003cbr\u003e - DOWNLOAD - starts the download and staging of the update package on the system\u003cbr\u003e\u003cbr\u003e - READINESS_CHECK - starts the readiness checks for the update package on the system. This should be run before performing an update, and will ensure system is in good state to begin software update. If the package is not downloaded, it will be downloaded before the checks are run.\u003cbr\u003e\u003cbr\u003e - UPDATE - starts an update operation for the update package on the system. If the update to this package is stopped with state FAILED or FAILED_WITH_WARN, this call will instead start an update retry operation. If the update is stopped with state COMPLETED_WITH_WARN, this call will instead start an update resume operation. \u003cbr\u003e\u003cbr\u003e The update package's status is updated in real time as the operation proceeds.",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Content-Type",
      "in": "header",
      "description": "Acceptable format of the body. Must be set to following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "required": true,
      "schema": {
       "type": "string",
       "default": "application/json"
      }
     },
     {
      "name": "Content-Length",
      "in": "header",
      "description": "The length of the content in bytes.",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "required": true,
     "content": {
      "application/json": {
       "schema": {
        "oneOf": [
         {
          "$ref": "#/components/schemas/softwareupdate_recommendations.Download_software_package"
         },
         {
          "$ref": "#/components/schemas/softwareupdate_recommendations.Software_update_precheck"
         },
         {
          "$ref": "#/components/schemas/softwareupdate_recommendations.OS_Update"
         }
        ]
       }
      }
     }
    },
    "responses": {
     "201": {
      "description": "Resource has been successfully created, and the location of the new resource is returned in the Location header"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "softwareupdate_recommendations"
   }
  },
  "/api/v3/softwareupdate/softwarestatus": {
   "get": {
    "operationId": "SwUpgStatusCOLLECTION",
    "tags": [
     "Software Update"
    ],
    "summary": "Used to query all software update status resources visible to the user",
    "description": "Returns all software update status resources that are visible to the user.\u003cbr\u003e\u003cbr\u003e A software update status resource represents the current state of an operation to update the OS version. This resource updates in real time.\u003cbr\u003e\u003cbr\u003e An empty response signifies that there are no software update resources visible to the user. This resource only reports software updates, not readiness checks or staging.",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Collection of resources",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/softwareupdate_updatestatus.SwUpgStatus"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   }
  },
  "/api/v3/softwareupdate/softwarestatus/{uid}": {
   "get": {
    "operationId": "SwUpgStatusSINGLE",
    "tags": [
     "Software Update"
    ],
    "summary": "Used to query a software update status resource by UID",
    "description": "Returns a single software update status resource corresponding to the given UID, if the user has access to it.\u003cbr\u003e\u003cbr\u003e A software update status resource represents the current state of an operation to update the OS version. This resource updates in real time.\u003cbr\u003e\u003cbr\u003e An empty response signifies that no update status resource corresponds to the supplied UID. This resource only reports software updates, not readiness checks or staging.",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Single resource",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/softwareupdate_updatestatus.SwUpgStatus"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   }
  },
  "/api/v3/softwareupdate/upload": {
   "post": {
    "operationId": "post /api/v3/softwareupdate/upload",
    "tags": [
     "Software Update"
    ],
    "summary": "Used to upload and stage a new software package",
    "description": "Using multipart/form-data upload, sends a software package file to the system to be staged. If it is a valid software package, it will be staged and can then have checks and update actions run on it. \u003cbr\u003e\u003cbr\u003e There is no json payload for this API call, and just a file upload: using curl utility or similar, a file can be uploaded with a format like 'curl -X POST \"api/v3/softwareupdate/upload\" -F \"file=@/path/to/package\"'\u003cbr\u003e\u003cbr\u003e File name must be a valid package name, and the file being uploaded must be of file format .star or .iso.",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Content-Type",
      "in": "header",
      "description": "Acceptable format of the body. Must be set to the following:\u003cbr\u003e\u003cbr\u003e - multipart/form-data",
      "required": true,
      "schema": {
       "type": "string",
       "default": "multipart/form-data"
      }
     },
     {
      "name": "Content-Length",
      "in": "header",
      "description": "The length of the content in bytes.",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - multipart/form-data",
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "201": {
      "description": "Resource has been successfully created, and the location of the new resource is returned in the Location header"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "softwareupdate_recommendations"
   }
  },
  "/api/v3/switch-port": {
   "get": {
    "operationId": "SwitchPortCOLLECTION",
    "tags": [
     "Hardware"
    ],
    "summary": "Used to query collection of resources",
    "description": "Returns all the resources that user has access to",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Collection of resources",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/switch_port.SwitchPort"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   }
  },
  "/api/v3/switch-port/{uid}": {
   "get": {
    "operationId": "SwitchPortSINGLE",
    "tags": [
     "Hardware"
    ],
    "summary": "Used to query a single resource",
    "description": "Returns a single resource based on a UID, if the user has access to it",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Single resource",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/switch_port.SwitchPort"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   },
   "post": {
    "operationId": "custom_actions /api/v3/switch-port/{uid}",
    "tags": [
     "Hardware"
    ],
    "summary": "Used to perform custom action",
    "description": "Executes custom action on a resource\u003cbr\u003e Multiple custom actions can be defined.  Parameters in the body are optional",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Content-Type",
      "in": "header",
      "description": "Acceptable format of the body. Must be set to following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "required": true,
      "schema": {
       "type": "string",
       "default": "application/json"
      }
     },
     {
      "name": "Content-Length",
      "in": "header",
      "description": "The length of the content in bytes.",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "required": true,
     "content": {
      "application/json": {
       "schema": {
        "oneOf": [
         {
          "$ref": "#/components/schemas/switch_port.Enable_Switch_Port"
         }
        ]
       }
      }
     }
    },
    "responses": {
     "201": {
      "description": "Resource has been successfully created, and the location of the new resource is returned in the Location header"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "switch_port"
   }
  },
  "/api/v3/switches": {
   "get": {
    "operationId": "SwitchCOLLECTION",
    "tags": [
     "Hardware"
    ],
    "summary": "Used to query collection of resources",
    "description": "Returns all the resources that user has access to",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Collection of resources",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/switch_device.Switch"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   }
  },
  "/api/v3/switches/{uid}": {
   "get": {
    "operationId": "SwitchSINGLE",
    "tags": [
     "Hardware"
    ],
    "summary": "Used to query a single resource",
    "description": "Returns a single resource based on a UID, if the user has access to it",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Single resource",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/switch_device.Switch"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   },
   "post": {
    "operationId": "custom_actions /api/v3/switches/{uid}",
    "tags": [
     "Hardware"
    ],
    "summary": "Used to perform custom action",
    "description": "Executes custom action on a resource\u003cbr\u003e Multiple custom actions can be defined.  Parameters in the body are optional",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Content-Type",
      "in": "header",
      "description": "Acceptable format of the body. Must be set to following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "required": true,
      "schema": {
       "type": "string",
       "default": "application/json"
      }
     },
     {
      "name": "Content-Length",
      "in": "header",
      "description": "The length of the content in bytes.",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "required": true,
     "content": {
      "application/json": {
       "schema": {
        "oneOf": [
         {
          "$ref": "#/components/schemas/switch_device.Locate_Switch"
         },
         {
          "$ref": "#/components/schemas/switch_device.Reboot_Switch"
         }
        ]
       }
      }
     }
    },
    "responses": {
     "201": {
      "description": "Resource has been successfully created, and the location of the new resource is returned in the Location header"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "switch_device"
   }
  },
  "/api/v3/syscapacity": {
   "get": {
    "operationId": "SystemCapacityCOLLECTION",
    "tags": [
     "Capacity"
    ],
    "summary": "Used to query collection of resources",
    "description": "Returns all the resources that user has access to",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Collection of resources",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/capacity.SystemCapacity"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   }
  },
  "/api/v3/systems": {
   "get": {
    "operationId": "SystemCOLLECTION",
    "tags": [
     "Hardware"
    ],
    "summary": "Used to query collection of resources",
    "description": "Returns all the resources that user has access to",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Collection of resources",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/system.System"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   }
  },
  "/api/v3/systems/{uid}": {
   "get": {
    "operationId": "SystemSINGLE",
    "tags": [
     "Hardware"
    ],
    "summary": "Used to query a single resource",
    "description": "Returns a single resource based on a UID, if the user has access to it",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Single resource",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/system.System"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   },
   "post": {
    "operationId": "custom_actions /api/v3/systems/{uid}",
    "tags": [
     "Hardware"
    ],
    "summary": "Used to perform custom action",
    "description": "Executes custom action on a resource\u003cbr\u003e Multiple custom actions can be defined.  Parameters in the body are optional",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Content-Type",
      "in": "header",
      "description": "Acceptable format of the body. Must be set to following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "required": true,
      "schema": {
       "type": "string",
       "default": "application/json"
      }
     },
     {
      "name": "Content-Length",
      "in": "header",
      "description": "The length of the content in bytes.",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "required": true,
     "content": {
      "application/json": {
       "schema": {
        "oneOf": [
         {
          "$ref": "#/components/schemas/actions.Network_Settings"
         },
         {
          "$ref": "#/components/schemas/actions.Clear_VP"
         },
         {
          "$ref": "#/components/schemas/actions.Configure_VP_Address"
         },
         {
          "$ref": "#/components/schemas/actions.Commit_Network_Change"
         },
         {
          "$ref": "#/components/schemas/actions.DateTime_Settings"
         },
         {
          "$ref": "#/components/schemas/actions.Halt_System"
         },
         {
          "$ref": "#/components/schemas/actions.Reboot_System"
         },
         {
          "$ref": "#/components/schemas/actions.Locate_System"
         },
         {
          "$ref": "#/components/schemas/actions.Tune_System"
         },
         {
          "$ref": "#/components/schemas/actions.Configure_Remote_Syslog"
         },
         {
          "$ref": "#/components/schemas/actions.Set_System_License"
         }
        ]
       }
      }
     }
    },
    "responses": {
     "201": {
      "description": "Resource has been successfully created, and the location of the new resource is returned in the Location header"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "actions"
   }
  },
  "/api/v3/tasks": {
   "get": {
    "operationId": "TaskCOLLECTION",
    "tags": [
     "Activities"
    ],
    "summary": "Used to query collection of resources",
    "description": "Returns all the resources that user has access to",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Collection of resources",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/tasks.Task"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   }
  },
  "/api/v3/tasks/{uid}": {
   "get": {
    "operationId": "TaskSINGLE",
    "tags": [
     "Activities"
    ],
    "summary": "Used to query a single resource",
    "description": "Returns a single resource based on a UID, if the user has access to it",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Single resource",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/tasks.Task"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   }
  },
  "/api/v3/trustcerts": {
   "get": {
    "operationId": "CertificateCOLLECTION",
    "tags": [
     "Security"
    ],
    "summary": "Used to query collection of resources",
    "description": "Returns all the resources that user has access to",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Collection of resources",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/trustcerts.Certificate"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   }
  },
  "/api/v3/trustcerts/{uid}": {
   "get": {
    "operationId": "CertificateSINGLE",
    "tags": [
     "Security"
    ],
    "summary": "Used to query a single resource",
    "description": "Returns a single resource based on a UID, if the user has access to it",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Single resource",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/trustcerts.Certificate"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   }
  },
  "/api/v3/users": {
   "get": {
    "operationId": "UserCOLLECTION",
    "tags": [
     "Security"
    ],
    "summary": "Used to query collection of resources",
    "description": "Returns all the resources that user has access to",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Collection of resources",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/users.User"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   },
   "post": {
    "operationId": "post /api/v3/users",
    "tags": [
     "Security"
    ],
    "summary": "Create a new user",
    "description": "Create a new user.  The password can be passed as a single string or a list of single characters",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Content-Type",
      "in": "header",
      "description": "Acceptable format of the body. Must be set to following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "required": true,
      "schema": {
       "type": "string",
       "default": "application/json"
      }
     },
     {
      "name": "Content-Length",
      "in": "header",
      "description": "The length of the content in bytes.",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "required": true,
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/users.CreateUserRequest"
       }
      }
     }
    },
    "responses": {
     "201": {
      "description": "Resource has been successfully created, and the location of the new resource is returned in the Location header"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "users"
   }
  },
  "/api/v3/users/{uid}": {
   "delete": {
    "operationId": "delete /api/v3/users/{uid}",
    "tags": [
     "Security"
    ],
    "summary": "Delete an existing user",
    "description": "Delete an existing user",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "Resource has been successfully removed"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "users"
   },
   "get": {
    "operationId": "UserSINGLE",
    "tags": [
     "Security"
    ],
    "summary": "Used to query a single resource",
    "description": "Returns a single resource based on a UID, if the user has access to it",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Single resource",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/users.User"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   },
   "patch": {
    "operationId": "patch /api/v3/users/{uid}",
    "tags": [
     "Security"
    ],
    "summary": "Modify an existing user",
    "description": "Modify an existing user.  The password can be passed as a single string or a list of single characters  \u003cpre\u003eIt is not recommended that a user's role be changed after creation, rather the user should be deleted and recreated with the new roles and domains\u003c/pre\u003e",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Content-Type",
      "in": "header",
      "description": "Acceptable format of the body. Must be set to following:\u003cbr\u003e\u003cbr\u003e - application/merge-patch+json",
      "required": true,
      "schema": {
       "type": "string",
       "default": "application/merge-patch+json"
      }
     },
     {
      "name": "Content-Length",
      "in": "header",
      "description": "The length of the content in bytes.",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "required": true,
     "content": {
      "application/merge-patch+json": {
       "schema": {
        "$ref": "#/components/schemas/users.PatchUserRequest"
       }
      }
     }
    },
    "responses": {
     "200": {
      "description": "Resource has been successfully updated"
     },
     "201": {
      "description": "Resource has been successfully created, and the location of the new resource is returned in the Location header"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "users"
   }
  },
  "/api/v3/vluns": {
   "get": {
    "operationId": "VlunCOLLECTION",
    "tags": [
     "Block Services"
    ],
    "summary": "Used to query collection of resources",
    "description": "Returns all the resources that user has access to",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Collection of resources",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/vlun.Vlun"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   },
   "post": {
    "operationId": "post /api/v3/vluns",
    "tags": [
     "Block Services"
    ],
    "summary": "Export a virtual volume as a SCSI LUN",
    "description": "Creates a VLUN template that enables export of a Virtual Volume as a SCSI VLUN to a host or hosts. A SCSI VLUN is created when the current system state matches the rule established by the VLUN template.",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Content-Type",
      "in": "header",
      "description": "Acceptable format of the body. Must be set to following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "required": true,
      "schema": {
       "type": "string",
       "default": "application/json"
      }
     },
     {
      "name": "Content-Length",
      "in": "header",
      "description": "The length of the content in bytes.",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "required": true,
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/vlun.CreateVlun"
       }
      }
     }
    },
    "responses": {
     "201": {
      "description": "Resource has been successfully created, and the location of the new resource is returned in the Location header"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "vlun"
   }
  },
  "/api/v3/vluns/custom": {
   "post": {
    "operationId": "custom_actions /api/v3/vluns/custom",
    "tags": [
     "Block Services"
    ],
    "summary": "Used to perform custom action",
    "description": "Executes custom action on a resource\u003cbr\u003e Multiple custom actions can be defined.  Parameters in the body are optional",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Content-Type",
      "in": "header",
      "description": "Acceptable format of the body. Must be set to following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "required": true,
      "schema": {
       "type": "string",
       "default": "application/json"
      }
     },
     {
      "name": "Content-Length",
      "in": "header",
      "description": "The length of the content in bytes.",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "required": true,
     "content": {
      "application/json": {
       "schema": {
        "oneOf": [
         {
          "$ref": "#/components/schemas/vlun.Bulk_delete_volume"
         }
        ]
       }
      }
     }
    },
    "responses": {
     "201": {
      "description": "Resource has been successfully created, and the location of the new resource is returned in the Location header"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "vlun"
   }
  },
  "/api/v3/vluns/{uid}": {
   "delete": {
    "operationId": "delete /api/v3/vluns/{uid}",
    "tags": [
     "Block Services"
    ],
    "summary": "Remove a virtual volume's SCSI LUN export definition",
    "description": "Removes a virtual volume's SCSI LUN export definition from the system",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "Resource has been successfully removed"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "vlun"
   },
   "get": {
    "operationId": "VlunSINGLE",
    "tags": [
     "Block Services"
    ],
    "summary": "Used to query a single resource",
    "description": "Returns a single resource based on a UID, if the user has access to it",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Single resource",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/vlun.Vlun"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   }
  },
  "/api/v3/volumecapacity": {
   "get": {
    "operationId": "Volume_CapacityCOLLECTION",
    "tags": [
     "Capacity"
    ],
    "summary": "Used to query collection of resources",
    "description": "Returns all the resources that user has access to",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Collection of resources",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/volume_capacity.Volume_Capacity"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   }
  },
  "/api/v3/volumes": {
   "get": {
    "operationId": "VolumeCOLLECTION",
    "tags": [
     "Block Services"
    ],
    "summary": "Used to query collection of resources",
    "description": "Returns all the resources that user has access to",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Collection of resources",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/volume.Volume"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   },
   "post": {
    "operationId": "post /api/v3/volumes",
    "tags": [
     "Block Services"
    ],
    "summary": "Create a new volume.",
    "description": "Creates a new volume.",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Content-Type",
      "in": "header",
      "description": "Acceptable format of the body. Must be set to following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "required": true,
      "schema": {
       "type": "string",
       "default": "application/json"
      }
     },
     {
      "name": "Content-Length",
      "in": "header",
      "description": "The length of the content in bytes.",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "required": true,
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/volume.CreateVolume"
       }
      }
     }
    },
    "responses": {
     "201": {
      "description": "Resource has been successfully created, and the location of the new resource is returned in the Location header"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "volume"
   }
  },
  "/api/v3/volumes/custom": {
   "post": {
    "operationId": "custom_actions /api/v3/volumes/custom",
    "tags": [
     "Block Services"
    ],
    "summary": "Used to perform custom action",
    "description": "Executes custom action on a resource\u003cbr\u003e Multiple custom actions can be defined.  Parameters in the body are optional",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Content-Type",
      "in": "header",
      "description": "Acceptable format of the body. Must be set to following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "required": true,
      "schema": {
       "type": "string",
       "default": "application/json"
      }
     },
     {
      "name": "Content-Length",
      "in": "header",
      "description": "The length of the content in bytes.",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "required": true,
     "content": {
      "application/json": {
       "schema": {
        "oneOf": [
         {
          "$ref": "#/components/schemas/volume.Bulk_delete_volume"
         }
        ]
       }
      }
     }
    },
    "responses": {
     "201": {
      "description": "Resource has been successfully created, and the location of the new resource is returned in the Location header"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "volume"
   }
  },
  "/api/v3/volumes/{uid}": {
   "delete": {
    "operationId": "delete /api/v3/volumes/{uid}",
    "tags": [
     "Block Services"
    ],
    "summary": "Remove a volume.",
    "description": "Removes a volume.",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "Resource has been successfully removed"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "volume"
   },
   "get": {
    "operationId": "VolumeSINGLE",
    "tags": [
     "Block Services"
    ],
    "summary": "Used to query a single resource",
    "description": "Returns a single resource based on a UID, if the user has access to it",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Single resource",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/volume.Volume"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   },
   "patch": {
    "operationId": "patch /api/v3/volumes/{uid}",
    "tags": [
     "Block Services"
    ],
    "summary": "Update a volume.",
    "description": "Updates a volume.",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Content-Type",
      "in": "header",
      "description": "Acceptable format of the body. Must be set to following:\u003cbr\u003e\u003cbr\u003e - application/merge-patch+json",
      "required": true,
      "schema": {
       "type": "string",
       "default": "application/merge-patch+json"
      }
     },
     {
      "name": "Content-Length",
      "in": "header",
      "description": "The length of the content in bytes.",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "required": true,
     "content": {
      "application/merge-patch+json": {
       "schema": {
        "$ref": "#/components/schemas/volume.EditVolume"
       }
      }
     }
    },
    "responses": {
     "200": {
      "description": "Resource has been successfully updated"
     },
     "201": {
      "description": "Resource has been successfully created, and the location of the new resource is returned in the Location header"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "403": {
      "description": "Indicates the session token in the Authorization is valid, but the client was attempting to access a resource in violation of a security rule"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "volume"
   },
   "post": {
    "operationId": "custom_actions /api/v3/volumes/{uid}",
    "tags": [
     "Block Services"
    ],
    "summary": "Used to perform custom action",
    "description": "Executes custom action on a resource\u003cbr\u003e Multiple custom actions can be defined.  Parameters in the body are optional",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Content-Type",
      "in": "header",
      "description": "Acceptable format of the body. Must be set to following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "required": true,
      "schema": {
       "type": "string",
       "default": "application/json"
      }
     },
     {
      "name": "Content-Length",
      "in": "header",
      "description": "The length of the content in bytes.",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "uid",
      "in": "path",
      "description": "Unique identifier of the resource",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "required": true,
     "content": {
      "application/json": {
       "schema": {
        "oneOf": [
         {
          "$ref": "#/components/schemas/volume.Tune_Volume"
         },
         {
          "$ref": "#/components/schemas/volume.Promote_Snapshot"
         },
         {
          "$ref": "#/components/schemas/volume.Snapshot_Volume"
         },
         {
          "$ref": "#/components/schemas/volume.Copy_Volume"
         },
         {
          "$ref": "#/components/schemas/volume.Resync_Volume_Copy"
         },
         {
          "$ref": "#/components/schemas/volume.Halt_Volume_Copy"
         },
         {
          "$ref": "#/components/schemas/volume.Promote_Volume_Copy"
         }
        ]
       }
      }
     }
    },
    "responses": {
     "201": {
      "description": "Resource has been successfully created, and the location of the new resource is returned in the Location header"
     },
     "202": {
      "description": "Task to perform operation has been created, and the location of the new resource is returned in the Location header"
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "409": {
      "description": "Indicates the OS has rejected the operation"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     },
     "542": {
      "description": "Indicates an error occurred in the device while executing a CLI command.  The response body will contain the error message from the device."
     }
    },
    "packageName": "volume"
   }
  },
  "/server/info": {
   "get": {
    "operationId": "ServerInfoCOLLECTION",
    "tags": [
     "Server Info"
    ],
    "summary": "Used to query collection of resources",
    "description": "Returns all the resources that user has access to",
    "parameters": [
     {
      "name": "Authorization",
      "in": "header",
      "description": "This contains the WSAPI session key that was returned by the server after a successful user authentication request.\u003cbr\u003e See [RFC6749](https://tools.ietf.org/html/rfc6749) and [RFC6750](https://tools.ietf.org/html/rfc6750) for more information.",
      "required": true,
      "schema": {
       "type": "string"
      },
      "example": "Authorization: Bearer 12920q019ks2920qkq412"
     },
     {
      "name": "Accept",
      "in": "header",
      "description": "Acceptable client response formats. Must be one of the following:\u003cbr\u003e\u003cbr\u003e - application/json",
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {}
     }
    },
    "responses": {
     "200": {
      "description": "Collection of resources",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/info.ServerInfo"
        }
       }
      }
     },
     "400": {
      "description": "Indicates the server did not understand the client request"
     },
     "401": {
      "description": "Indicates the request was not properly Authenticated"
     },
     "404": {
      "description": "Indicates the resource identified by the URI cannot be found"
     },
     "500": {
      "description": "Indicates an unexpected error has happened within the server. Server shall include more detailed explanation in the response body"
     }
    }
   }
  }
 },
 "components": {
  "schemas": {
   "actions.Clear_VP": {
    "type": "CLEARNODEVPADDRESS",
    "fullType": "configure.ClearVpAddressParams",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: CLEARNODEVPADDRESS",
      "type": "string"
     },
     "parameters": {
      "type": "object",
      "required": [
       "clearVpAddress"
      ],
      "properties": {
       "clearVpAddress": {
        "description": "Clear VP Address from node(s)",
        "type": "array",
        "items": {
         "type": "object",
         "required": [
          "nodeId"
         ],
         "properties": {
          "nodeId": {
           "description": "Vasa Provider IP node ID",
           "type": "integer",
           "format": "int32"
          }
         },
         "title": "configure.ClearNodeVpAddress"
        }
       }
      },
      "description": "Parameters for a custom action",
      "descriptionKey": "SCHEMA_CUSTOM_ACTION_PROPS"
     }
    },
    "description": "Clear VP Address on node(s)",
    "descriptionKey": "SYSTEM_CLEAR_VP_ADDRESS_DESCRIPTION",
    "title": "CLEARNODEVPADDRESS"
   },
   "actions.Commit_Network_Change": {
    "type": "COMMITNETWORK",
    "fullType": "configure.CommitNetworkParams",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: COMMITNETWORK",
      "type": "string"
     },
     "parameters": {
      "type": "object",
      "properties": {
       "revertChange": {
        "description": "Revert network setting if committing network setting fails",
        "type": "boolean"
       }
      },
      "description": "Parameters for a custom action",
      "descriptionKey": "SCHEMA_CUSTOM_ACTION_PROPS"
     }
    },
    "description": "Commit previous network changes.",
    "descriptionKey": "SYSTEM_COMMITNET_DESCRIPTION",
    "title": "COMMITNETWORK"
   },
   "actions.Configure_Remote_Syslog": {
    "type": "CONFIGUREREMOTESYSLOG",
    "fullType": "configure.RemoteSyslogSettings",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: CONFIGUREREMOTESYSLOG",
      "type": "string"
     },
     "parameters": {
      "type": "object",
      "properties": {
       "profileName": {
        "description": "Name of remote syslog profile to select",
        "type": "string"
       }
      },
      "description": "Parameters for a custom action",
      "descriptionKey": "SCHEMA_CUSTOM_ACTION_PROPS"
     }
    },
    "description": "Configure remote syslog",
    "descriptionKey": "SYSTEM_CONFIGUREREMOTESYSLOG_DESCRIPTION",
    "title": "CONFIGUREREMOTESYSLOG"
   },
   "actions.Configure_VP_Address": {
    "type": "CONFIGUREVPADDRESS",
    "fullType": "configure.ConfigVpAddressParams",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: CONFIGUREVPADDRESS",
      "type": "string"
     },
     "parameters": {
      "type": "object",
      "required": [
       "configVpAddress"
      ],
      "properties": {
       "configVpAddress": {
        "description": "Configure VP Address on node(s)",
        "type": "array",
        "items": {
         "type": "object",
         "required": [
          "ipv4Address",
          "ipv4NetMask"
         ],
         "properties": {
          "ipv4Address": {
           "description": "Vasa Provider IPV4 address",
           "type": "string"
          },
          "ipv4NetMask": {
           "description": "Vasa Provider IPV4 netmask",
           "type": "string"
          },
          "ipv6Address": {
           "description": "Vasa Provider IPV6 address",
           "type": "string"
          },
          "ipv6PrefixLen": {
           "description": "Vasa Provider IPV6 prefix length",
           "type": "string"
          },
          "nodeId": {
           "description": "Vasa Provider IP node ID",
           "type": "integer",
           "format": "int32"
          }
         },
         "title": "configure.VpAddress"
        }
       }
      },
      "description": "Parameters for a custom action",
      "descriptionKey": "SCHEMA_CUSTOM_ACTION_PROPS"
     }
    },
    "description": "Configure VP Address on node(s)",
    "descriptionKey": "SYSTEM_CONFIG_VP_ADDRESS_DESCRIPTION",
    "title": "CONFIGUREVPADDRESS"
   },
   "actions.DateTime_Settings": {
    "type": "CONFIGUREDATETIME",
    "fullType": "configure.DateTimeParams",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: CONFIGUREDATETIME",
      "type": "string"
     },
     "parameters": {
      "type": "object",
      "required": [
       "timezone"
      ],
      "properties": {
       "dateTime": {
        "description": "New system date and time on all nodes",
        "type": "string"
       },
       "ntpAddresses": {
        "description": "The NTP servers the system should use to synchronize its clocks",
        "type": "array",
        "items": {
         "description": "",
         "type": "string"
        }
       },
       "timezone": {
        "description": "New system timezone on all nodes.  The value for this field should be obtained by fetching the \u003ca href=\"#get-/server/info\"\u003e/server/info\u003c/a\u003e resource and using one of the allTimeZonesByOffset.timezone values",
        "type": "string"
       }
      },
      "description": "Parameters for a custom action",
      "descriptionKey": "SCHEMA_CUSTOM_ACTION_PROPS"
     }
    },
    "description": "Performs system date/time configuration.\u003cbr\u003eEither date/time or NTP servers parameter must be provided, but not both.\u003cbr\u003e Date and time parameter must be specified using format \"MM/dd/yyyy HH:mm:ss\".\u003cbr\u003e NTP addresses parameter can be IP addresses or host names",
    "descriptionKey": "SYSTEM_CFGDATE_DESCRIPTION",
    "title": "CONFIGUREDATETIME"
   },
   "actions.Halt_System": {
    "type": "HALT",
    "fullType": "shared.EmptyBody",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: HALT",
      "type": "string"
     }
    },
    "description": "Shutdown or halt the storage system.",
    "descriptionKey": "SYSTEM_HALT_DESCRIPTION",
    "title": "HALT"
   },
   "actions.Locate_System": {
    "type": "LOCATE",
    "fullType": "hardware.Locate",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: LOCATE",
      "type": "string"
     },
     "parameters": {
      "type": "object",
      "properties": {
       "locateEnabled": {
        "description": "Indicates if the locate beacon should be enabled or not",
        "type": "boolean"
       }
      },
      "description": "Parameters for a custom action",
      "descriptionKey": "SCHEMA_CUSTOM_ACTION_PROPS"
     }
    },
    "description": "Locate the storage system.",
    "descriptionKey": "SYSTEM_LOCATE_DESCRIPTION",
    "title": "LOCATE",
    "example": {
     "action": "LOCATE",
     "parameters": {
      "locateEnabled": true
     }
    }
   },
   "actions.Network_Settings": {
    "type": "CONFIGURENETWORK",
    "fullType": "configure.NetworkParams",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: CONFIGURENETWORK",
      "type": "string"
     },
     "parameters": {
      "type": "object",
      "required": [
       "ipv4Address",
       "ipv4Gateway",
       "ipv4SubnetMask"
      ],
      "properties": {
       "commitChange": {
        "description": "Indicates if network change should be committed or not",
        "type": "boolean"
       },
       "dnsAddresses": {
        "description": "DNS servers the system should use to resolve host names",
        "type": "array",
        "items": {
         "description": "",
         "type": "string"
        }
       },
       "ipv4Address": {
        "description": "New IPv4 address for the system",
        "type": "string"
       },
       "ipv4Gateway": {
        "description": "IPv4 address of the new gateway",
        "type": "string"
       },
       "ipv4SubnetMask": {
        "description": "New IPv4 netmask",
        "type": "string"
       },
       "ipv6Address": {
        "description": "New IPv6 address for the system",
        "type": "string"
       },
       "ipv6Gateway": {
        "description": "IPv6 address of the new gateway",
        "type": "string"
       },
       "ipv6PrefixLen": {
        "description": "IPv6 address prefix length",
        "type": "string"
       },
       "proxyParams": {
        "type": "object",
        "properties": {
         "authenticationRequired": {
          "description": "Is authentication required. Allowed values: enabled or disabled.",
          "type": "string"
         },
         "proxyPassword": {
          "description": "Password for authentication. (Required only if Authentication required is enabled)",
          "type": "string"
         },
         "proxyPort": {
          "description": "Proxy server port. Allowed values: 1-65535.",
          "type": "integer",
          "format": "int"
         },
         "proxyProtocol": {
          "description": "Supported set network proxy protocols are HTTP and NTLM",
          "type": "string"
         },
         "proxyServer": {
          "description": "Proxy server hostname/IP.",
          "type": "string"
         },
         "proxyUser": {
          "description": "Username for authentication. (Required only if Authentication required is enabled)",
          "type": "string"
         },
         "proxyUserDomain": {
          "description": "User's domain for NTLM authentication (Required only if Authentication required is enabled)",
          "type": "string"
         }
        },
        "description": "Proxy parameters",
        "descriptionKey": "SCHEMA_NETWORK_PROXY",
        "title": "ProxySettings"
       },
       "slaacEnable": {
        "description": "Enable/disable IPv6 Stateless Address Auto Configuration (SLAAC)",
        "type": "boolean"
       }
      },
      "description": "Parameters for a custom action",
      "descriptionKey": "SCHEMA_CUSTOM_ACTION_PROPS"
     }
    },
    "description": "Performs system network configuration.\u003cbr\u003eAt least an IPv4 or an IPv6 address parameter must be provided.\u003cbr\u003e If an IPv4 address parameter is specified, IPv4 subnet mask and IPv4 gateway parameters are required.\u003cbr\u003e If an IPv6 address parameter is specified, IPv6 prefix len and IPv6 gateway parameters are required.\u003cbr\u003e DNS addresses parameter is required and can include both IPv4 and IPv6 addresses. Up to 3 DNS addresses can be specified.",
    "descriptionKey": "SYSTEM_CFGNET_DESCRIPTION",
    "title": "CONFIGURENETWORK"
   },
   "actions.Reboot_System": {
    "type": "REBOOT",
    "fullType": "shared.EmptyBody",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: REBOOT",
      "type": "string"
     }
    },
    "description": "Reboot the storage system.",
    "descriptionKey": "SYSTEM_REBOOT_DESCRIPTION",
    "title": "REBOOT"
   },
   "actions.Set_System_License": {
    "type": "SETLICENSE",
    "fullType": "configure.SetLicense",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: SETLICENSE",
      "type": "string"
     },
     "parameters": {
      "type": "object",
      "properties": {
       "licenseData": {
        "description": "The new license to install",
        "type": "string"
       }
      },
      "description": "Parameters for a custom action",
      "descriptionKey": "SCHEMA_CUSTOM_ACTION_PROPS"
     }
    },
    "description": "Set System License",
    "descriptionKey": "SYSTEM_SETLICENSE_DESCRIPTION",
    "title": "SETLICENSE"
   },
   "actions.Tune_System": {
    "type": "TUNE",
    "fullType": "shared.EmptyBody",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: TUNE",
      "type": "string"
     }
    },
    "description": "Tune the storage system.",
    "descriptionKey": "SYSTEM_TUNE_DESCRIPTION",
    "title": "TUNE"
   },
   "admin.LoginSession": {
    "type": "object",
    "properties": {
     "clientIP": {
      "description": "IP address of client's host",
      "type": "string"
     },
     "createDate": {
      "description": "timestamp of login",
      "type": "time.Time",
      "Array": false
     },
     "expires": {
      "description": "Expiration date",
      "type": "time.Time",
      "Array": false
     },
     "isAdminOrSupport": {
      "description": "is admin or support session",
      "type": "boolean"
     },
     "isInternal": {
      "description": "is an internal session",
      "type": "boolean"
     },
     "sessionid": {
      "description": "unique ID for session",
      "type": "string"
     },
     "username": {
      "description": "username of account",
      "type": "string"
     }
    }
   },
   "admin.LoginSessions": {
    "type": "object",
    "properties": {
     "sessions": {
      "description": "list of current login sessions",
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "clientIP": {
         "description": "IP address of client's host",
         "type": "string"
        },
        "createDate": {
         "description": "timestamp of login",
         "type": "time.Time",
         "Array": false
        },
        "expires": {
         "description": "Expiration date",
         "type": "time.Time",
         "Array": false
        },
        "isAdminOrSupport": {
         "description": "is admin or support session",
         "type": "boolean"
        },
        "isInternal": {
         "description": "is an internal session",
         "type": "boolean"
        },
        "sessionid": {
         "description": "unique ID for session",
         "type": "string"
        },
        "username": {
         "description": "username of account",
         "type": "string"
        }
       },
       "title": "admin.LoginSession"
      }
     }
    }
   },
   "alerts.Alert": {
    "type": "object",
    "properties": {
     "action": {
      "type": "object",
      "properties": {
       "action": {
        "type": "object",
        "properties": {
         "args": {
          "description": "Array of optional parameters to be used when formatting the text",
          "type": "array",
          "items": {
           "type": "AnyType"
          }
         },
         "default": {
          "description": "Text in the default language",
          "type": "string"
         },
         "key": {
          "description": "Key of the message in the i18n catalog",
          "type": "string"
         }
        },
        "description": "Name of the custom action",
        "descriptionKey": "SCHEMA_ALERT_ACTION_NAME",
        "title": "*utils.I18nValue"
       },
       "uri": {
        "description": "URI of the custom action",
        "type": "string"
       }
      },
      "description": "Custom action that can be executed on the alert",
      "descriptionKey": "SCHEMA_ALERT_ACTION",
      "title": "*alerts.AlertAction"
     },
     "actionTaken": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Describes action that has been taken for this alert",
      "descriptionKey": "SCHEMA_ALERT_ACTION_TAKEN",
      "title": "*utils.I18nValue"
     },
     "associatedResource": {
      "type": "object",
      "properties": {
       "category": {
        "description": "Category of the resource",
        "type": "string"
       },
       "searchName": {
        "description": "Property name to be used when looking for a resource in the index, e.g. 'name', 'id', 'wwn', etc.",
        "type": "string"
       },
       "searchValue": {
        "description": "Property value to be used when looking for a resource in the index",
        "type": "string"
       }
      },
      "description": "Information about the resource that is associated to this alert",
      "descriptionKey": "SCHEMA_ALERT_ASSOCIATEDRESOURCE",
      "title": "*alerts.AssociatedResource"
     },
     "caseDetails": {
      "type": "object",
      "properties": {
       "autoClose": {
        "description": "Indicates if the case has been automatically closed or not",
        "type": "boolean"
       },
       "id": {
        "description": "ID of the case",
        "type": "integer",
        "format": "int64"
       },
       "status": {
        "description": "Status of the case",
        "title": "casestatus.Enum",
        "enum": [
         "CASE_STATUS_UNKNOWN",
         "CASE_STATUS_OPEN",
         "CASE_STATUS_CLOSED"
        ],
        "type": "string"
       }
      },
      "description": "Information about associated case",
      "descriptionKey": "SCHEMA_ALERT_CASE",
      "title": "*alerts.AssociatedCase"
     },
     "componentResource": {
      "type": "object",
      "properties": {
       "category": {
        "description": "Category of the resource",
        "type": "string"
       },
       "searchName": {
        "description": "Property name to be used when looking for a resource in the index, e.g. 'name', 'id', 'wwn', etc.",
        "type": "string"
       },
       "searchValue": {
        "description": "Property value to be used when looking for a resource in the index",
        "type": "string"
       }
      },
      "description": "Information about the resource impacted by this alert",
      "descriptionKey": "SCHEMA_ALERT_COMPONENTRESOURCE",
      "title": "*alerts.AssociatedResource"
     },
     "count": {
      "description": "Number of times this alert has been repeated",
      "type": "integer",
      "format": "uint64"
     },
     "customerCA": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Corrective action for customer",
      "descriptionKey": "SCHEMA_ALERT_CUSTOMERCA",
      "title": "*utils.I18nValue"
     },
     "displayMessageCode": {
      "description": "Message Code formatted for display",
      "type": "string"
     },
     "displayname": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Name to be used for display purposes",
      "descriptionKey": "SCHEMA_DISPLAYNAME",
      "title": "*utils.I18nValue"
     },
     "domain": {
      "description": "Domain that the resource belongs to",
      "type": "string"
     },
     "fixEvent": {
      "type": "object",
      "properties": {
       "additionalMessage": {
        "description": "Event Additional Message",
        "type": "array",
        "items": {
         "type": "object",
         "properties": {
          "args": {
           "description": "Array of optional parameters to be used when formatting the text",
           "type": "array",
           "items": {
            "type": "AnyType"
           }
          },
          "default": {
           "description": "Text in the default language",
           "type": "string"
          },
          "key": {
           "description": "Key of the message in the i18n catalog",
           "type": "string"
          }
         },
         "title": "utils.I18nValue"
        }
       },
       "class": {
        "description": "Event class",
        "type": "string"
       },
       "components": {
        "description": "List of components",
        "type": "array",
        "items": {
         "type": "object",
         "properties": {
          "args": {
           "description": "Array of optional parameters to be used when formatting the text",
           "type": "array",
           "items": {
            "type": "AnyType"
           }
          },
          "default": {
           "description": "Text in the default language",
           "type": "string"
          },
          "key": {
           "description": "Key of the message in the i18n catalog",
           "type": "string"
          }
         },
         "title": "utils.I18nValue"
        }
       },
       "componentsShort": {
        "description": "List of components in short format",
        "type": "string"
       },
       "dataChange": {
        "description": "Event Data Change flag",
        "type": "boolean"
       },
       "firstTime": {
        "type": "object",
        "properties": {
         "ms": {
          "description": "Epoch time in milliseconds",
          "type": "integer",
          "format": "int64"
         },
         "tz": {
          "description": "Time zone name",
          "type": "string"
         }
        },
        "description": "First time this event has been raised",
        "descriptionKey": "SCHEMA_EVENT_FIRSTTIME",
        "title": "*shared.Calendar"
       },
       "maintReasons": {
        "description": "Maintenance reasons",
        "type": "array",
        "items": {
         "type": "object",
         "properties": {
          "code": {
           "description": "Maintenance reason code",
           "type": "integer",
           "format": "int16"
          },
          "enum": {
           "description": "Maintenance reason description",
           "title": "reasoncode.Enum",
           "enum": [
            "MAINT_REASON_INVALID",
            "MAINT_REASON_OTHER",
            "MAINT_REASON_NODE",
            "MAINT_REASON_RESTART",
            "MAINT_REASON_DISK",
            "MAINT_REASON_CAGE",
            "MAINT_REASON_SWITCH",
            "MAINT_REASON_CABLING",
            "MAINT_REASON_UPGRADE",
            "MAINT_REASON_DISKFIRMWARE",
            "MAINT_REASON_CAGEFIRMWARE"
           ],
           "type": "string"
          }
         },
         "title": "alerts.MaintReason"
        }
       },
       "message": {
        "type": "object",
        "properties": {
         "args": {
          "description": "Array of optional parameters to be used when formatting the text",
          "type": "array",
          "items": {
           "type": "AnyType"
          }
         },
         "default": {
          "description": "Text in the default language",
          "type": "string"
         },
         "key": {
          "description": "Key of the message in the i18n catalog",
          "type": "string"
         }
        },
        "description": "Event message",
        "descriptionKey": "SCHEMA_EVENT_MESSAGE",
        "title": "*utils.I18nValue"
       },
       "nodeId": {
        "description": "ID of the node that event was generated on",
        "type": "integer",
        "format": "int64"
       },
       "sequence": {
        "description": "Sequence",
        "type": "integer",
        "format": "uint64"
       },
       "severity": {
        "description": "Severity of the event",
        "title": "eventseverity.Enum",
        "enum": [
         "SEVERITY_UNKNOWN",
         "SEVERITY_FATAL",
         "SEVERITY_CRITICAL",
         "SEVERITY_MAJOR",
         "SEVERITY_MINOR",
         "SEVERITY_DEGRADED",
         "SEVERITY_INFO",
         "SEVERITY_DEBUG"
        ],
        "type": "string"
       },
       "tier": {
        "type": "object",
        "properties": {
         "args": {
          "description": "Array of optional parameters to be used when formatting the text",
          "type": "array",
          "items": {
           "type": "AnyType"
          }
         },
         "default": {
          "description": "Text in the default language",
          "type": "string"
         },
         "key": {
          "description": "Key of the message in the i18n catalog",
          "type": "string"
         }
        },
        "description": "Event tier",
        "descriptionKey": "SCHEMA_EVENT_TIER",
        "title": "*utils.I18nValue"
       },
       "type": {
        "description": "Event type",
        "type": "string"
       }
      },
      "description": "Event that was generated when alert was fixed",
      "descriptionKey": "SCHEMA_ALERT_FIXEVENT",
      "title": "*alerts.Event"
     },
     "id": {
      "description": "Numeric ID of the resource",
      "type": "integer",
      "format": "int64"
     },
     "lastTime": {
      "type": "object",
      "properties": {
       "ms": {
        "description": "Epoch time in milliseconds",
        "type": "integer",
        "format": "int64"
       },
       "tz": {
        "description": "Time zone name",
        "type": "string"
       }
      },
      "description": "Last time this alert has been repeated",
      "descriptionKey": "SCHEMA_ALERT_LASTTIME",
      "title": "*shared.Calendar"
     },
     "messageCode": {
      "description": "Message Code",
      "type": "integer",
      "format": "uint64"
     },
     "originEvent": {
      "type": "object",
      "properties": {
       "additionalMessage": {
        "description": "Event Additional Message",
        "type": "array",
        "items": {
         "type": "object",
         "properties": {
          "args": {
           "description": "Array of optional parameters to be used when formatting the text",
           "type": "array",
           "items": {
            "type": "AnyType"
           }
          },
          "default": {
           "description": "Text in the default language",
           "type": "string"
          },
          "key": {
           "description": "Key of the message in the i18n catalog",
           "type": "string"
          }
         },
         "title": "utils.I18nValue"
        }
       },
       "class": {
        "description": "Event class",
        "type": "string"
       },
       "components": {
        "description": "List of components",
        "type": "array",
        "items": {
         "type": "object",
         "properties": {
          "args": {
           "description": "Array of optional parameters to be used when formatting the text",
           "type": "array",
           "items": {
            "type": "AnyType"
           }
          },
          "default": {
           "description": "Text in the default language",
           "type": "string"
          },
          "key": {
           "description": "Key of the message in the i18n catalog",
           "type": "string"
          }
         },
         "title": "utils.I18nValue"
        }
       },
       "componentsShort": {
        "description": "List of components in short format",
        "type": "string"
       },
       "dataChange": {
        "description": "Event Data Change flag",
        "type": "boolean"
       },
       "firstTime": {
        "type": "object",
        "properties": {
         "ms": {
          "description": "Epoch time in milliseconds",
          "type": "integer",
          "format": "int64"
         },
         "tz": {
          "description": "Time zone name",
          "type": "string"
         }
        },
        "description": "First time this event has been raised",
        "descriptionKey": "SCHEMA_EVENT_FIRSTTIME",
        "title": "*shared.Calendar"
       },
       "maintReasons": {
        "description": "Maintenance reasons",
        "type": "array",
        "items": {
         "type": "object",
         "properties": {
          "code": {
           "description": "Maintenance reason code",
           "type": "integer",
           "format": "int16"
          },
          "enum": {
           "description": "Maintenance reason description",
           "title": "reasoncode.Enum",
           "enum": [
            "MAINT_REASON_INVALID",
            "MAINT_REASON_OTHER",
            "MAINT_REASON_NODE",
            "MAINT_REASON_RESTART",
            "MAINT_REASON_DISK",
            "MAINT_REASON_CAGE",
            "MAINT_REASON_SWITCH",
            "MAINT_REASON_CABLING",
            "MAINT_REASON_UPGRADE",
            "MAINT_REASON_DISKFIRMWARE",
            "MAINT_REASON_CAGEFIRMWARE"
           ],
           "type": "string"
          }
         },
         "title": "alerts.MaintReason"
        }
       },
       "message": {
        "type": "object",
        "properties": {
         "args": {
          "description": "Array of optional parameters to be used when formatting the text",
          "type": "array",
          "items": {
           "type": "AnyType"
          }
         },
         "default": {
          "description": "Text in the default language",
          "type": "string"
         },
         "key": {
          "description": "Key of the message in the i18n catalog",
          "type": "string"
         }
        },
        "description": "Event message",
        "descriptionKey": "SCHEMA_EVENT_MESSAGE",
        "title": "*utils.I18nValue"
       },
       "nodeId": {
        "description": "ID of the node that event was generated on",
        "type": "integer",
        "format": "int64"
       },
       "sequence": {
        "description": "Sequence",
        "type": "integer",
        "format": "uint64"
       },
       "severity": {
        "description": "Severity of the event",
        "title": "eventseverity.Enum",
        "enum": [
         "SEVERITY_UNKNOWN",
         "SEVERITY_FATAL",
         "SEVERITY_CRITICAL",
         "SEVERITY_MAJOR",
         "SEVERITY_MINOR",
         "SEVERITY_DEGRADED",
         "SEVERITY_INFO",
         "SEVERITY_DEBUG"
        ],
        "type": "string"
       },
       "tier": {
        "type": "object",
        "properties": {
         "args": {
          "description": "Array of optional parameters to be used when formatting the text",
          "type": "array",
          "items": {
           "type": "AnyType"
          }
         },
         "default": {
          "description": "Text in the default language",
          "type": "string"
         },
         "key": {
          "description": "Key of the message in the i18n catalog",
          "type": "string"
         }
        },
        "description": "Event tier",
        "descriptionKey": "SCHEMA_EVENT_TIER",
        "title": "*utils.I18nValue"
       },
       "type": {
        "description": "Event type",
        "type": "string"
       }
      },
      "description": "Origin event that was generated with the alert",
      "descriptionKey": "SCHEMA_ALERT_ORIGINEVENT",
      "title": "*alerts.Event"
     },
     "releaseNotes": {
      "description": "URIs to localized release notes (only available for OS Update alerts)",
      "type": "string"
     },
     "sendEmail": {
      "description": "Indicates email needs to be sent for the alert",
      "type": "boolean"
     },
     "serviceCA": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Corrective action for service",
      "descriptionKey": "SCHEMA_ALERT_SERVICECA",
      "title": "*utils.I18nValue"
     },
     "sparePartNumber": {
      "description": "Alert main component spare part number",
      "type": "string"
     },
     "status": {
      "description": "Status of the alert",
      "title": "alertstatus.Enum",
      "enum": [
       "STATUS_UNKNOWN",
       "STATUS_NEW",
       "STATUS_ACKNOWLEDGED",
       "STATUS_FIXED",
       "STATUS_REMOVED",
       "STATUS_AUTOFIXED"
      ],
      "type": "string"
     },
     "systemWWN": {
      "description": "WWN of the array",
      "type": "string"
     },
     "type": {
      "description": "Type of the alert",
      "title": "alerttype.Enum",
      "enum": [
       "TYPE_UNKNOWN",
       "TYPE_CUSTOMER",
       "TYPE_SERVICE",
       "TYPE_APPLICATION"
      ],
      "type": "string"
     },
     "uid": {
      "description": "Unique Identifier of the resource",
      "type": "string"
     },
     "uri": {
      "description": "URI of the resource",
      "type": "string"
     }
    }
   },
   "alerts.EmitAlert": {
    "type": "object",
    "properties": {
     "alertName": {
      "description": "Name of the alert to emit",
      "type": "string"
     },
     "fixed": {
      "description": "Indicates if the alert is auto-fixed when emitted",
      "type": "boolean"
     },
     "params": {
      "description": "List of replacement parameters to be used in the alert message",
      "type": "array",
      "items": {
       "description": "",
       "type": "string"
      }
     }
    }
   },
   "alerts.SendTestAlert": {
    "type": "object",
    "properties": {
     "message": {
      "description": "A test message to include in a text alert",
      "type": "string"
     }
    }
   },
   "alerts.UpdateAlert": {
    "type": "object",
    "properties": {
     "status": {
      "description": "Status of the alert",
      "title": "alertstatus.Enum",
      "enum": [
       "STATUS_NEW",
       "STATUS_ACKNOWLEDGED",
       "STATUS_FIXED"
      ],
      "type": "string"
     }
    }
   },
   "alerts.UpdateMultiAlerts": {
    "type": "object",
    "properties": {
     "status": {
      "description": "Status of the alert",
      "title": "alertstatus.Enum",
      "enum": [
       "STATUS_NEW",
       "STATUS_ACKNOWLEDGED",
       "STATUS_FIXED"
      ],
      "type": "string"
     },
     "uids": {
      "description": "Unique Identifier of the alerts",
      "type": "array",
      "items": {
       "description": "",
       "type": "string"
      }
     }
    }
   },
   "alerts_aggregate.Create_a_test_alert": {
    "type": "TEST_ALERT",
    "fullType": "alerts.SendTestAlert",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: TEST_ALERT",
      "type": "string"
     },
     "parameters": {
      "type": "object",
      "properties": {
       "message": {
        "description": "A test message to include in a text alert",
        "type": "string"
       }
      },
      "description": "Parameters for a custom action",
      "descriptionKey": "SCHEMA_CUSTOM_ACTION_PROPS"
     }
    },
    "description": "This custom action allows the user to generate a test alert that includes a user-provided message",
    "descriptionKey": "ALERT_SEND_TEST_DESCRIPTION",
    "title": "TEST_ALERT",
    "example": {
     "action": "TEST_ALERT",
     "parameters": {
      "message": "test message"
     }
    }
   },
   "alerts_aggregate.Update_multiple_alerts": {
    "type": "UPDATE",
    "fullType": "alerts.UpdateMultiAlerts",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: UPDATE",
      "type": "string"
     },
     "parameters": {
      "type": "object",
      "properties": {
       "status": {
        "description": "Status of the alert",
        "title": "alertstatus.Enum",
        "enum": [
         "STATUS_NEW",
         "STATUS_ACKNOWLEDGED",
         "STATUS_FIXED"
        ],
        "type": "string"
       },
       "uids": {
        "description": "Unique Identifier of the alerts",
        "type": "array",
        "items": {
         "description": "",
         "type": "string"
        }
       }
      },
      "description": "Parameters for a custom action",
      "descriptionKey": "SCHEMA_CUSTOM_ACTION_PROPS"
     }
    },
    "description": "Changes the status of multiple alerts to a single status value",
    "descriptionKey": "ALERTS_POST_DESCRIPTION",
    "title": "UPDATE",
    "example": {
     "action": "UPDATE",
     "parameters": {
      "status": "STATUS_FIXED",
      "uids": [
       "8e5334d36264306e2114fd8e0d26f487"
      ]
     }
    }
   },
   "applicationset.ApplicationSet": {
    "type": "object",
    "properties": {
     "appSetBusinessUnit": {
      "description": "Business unit for an application that is using this set",
      "type": "string"
     },
     "appSetComments": {
      "description": "Free-form comments about virtual volume set",
      "type": "string"
     },
     "appSetExcludeAIQoS": {
      "description": "Indicates if to exclude the virtual volume set from aiqos or not.",
      "title": "excludeaiqos.Enum",
      "enum": [
       "yes",
       "no"
      ],
      "type": "string"
     },
     "appSetImportance": {
      "description": "Virtual volume set importance",
      "type": "string"
     },
     "appSetName": {
      "description": "Virtual volume set name",
      "type": "string"
     },
     "appSetType": {
      "description": "Type of the application using this set",
      "type": "string"
     },
     "comment": {
      "description": "Comments associated with the set",
      "type": "string"
     },
     "displayname": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Name to be used for display purposes",
      "descriptionKey": "SCHEMA_DISPLAYNAME",
      "title": "*utils.I18nValue"
     },
     "domain": {
      "description": "Domain that the resource belongs to",
      "type": "string"
     },
     "exportStatus": {
      "description": "The virtual volume set export status (NOT_EXPORTED, PARTIALLY_EXPORTED or FULLY_EXPORTED)",
      "title": "exportstatus.Enum",
      "enum": [
       "FULLY_EXPORTED",
       "PARTIALLY_EXPORTED",
       "NOT_EXPORTED"
      ],
      "type": "string"
     },
     "id": {
      "description": "Numeric id of the set",
      "type": "integer",
      "format": "int64"
     },
     "isHidden": {
      "description": "Is Virtual volume set hidden",
      "type": "boolean"
     },
     "kvPairsPresent": {
      "description": "Indicates if the key-value pairs are present",
      "type": "boolean"
     },
     "members": {
      "description": "Names of set members.  In certain situations. when exported volumes have been removed from a Virtual volume set, members may be replaced with a \"--\" placeholder.",
      "type": "array",
      "items": {
       "description": "",
       "type": "string"
      }
     },
     "name": {
      "description": "Name of the set",
      "type": "string"
     },
     "ransomWare": {
      "description": "Indicates if ransomware detection policy is set",
      "type": "boolean"
     },
     "shortName": {
      "description": "Short name of the object set",
      "type": "string"
     },
     "snapSetParentId": {
      "description": "The ID of the virtual volume set used to create the snapshot",
      "type": "integer",
      "format": "int64"
     },
     "snapSetParentName": {
      "description": "The volume set name of the virtual volume set used to create the snapshot; temporarily used for schedules",
      "type": "string"
     },
     "systemWWN": {
      "description": "WWN of the array",
      "type": "string"
     },
     "taskTags": {
      "description": "A list of tags used to filter tasks from resource updates",
      "type": "string"
     },
     "uid": {
      "description": "Unique Identifier of the resource",
      "type": "string"
     },
     "uri": {
      "description": "URI of the resource",
      "type": "string"
     },
     "uuid": {
      "description": "Array created unique identifier of the set",
      "type": "string"
     },
     "vvSetType": {
      "description": "The volume set type (APPSET, FLASHCACHE, QOS, VVSET or VVOLSC)",
      "title": "settype.Enum",
      "enum": [
       "//",
       "APPSET",
       "FLASHCACHE",
       "QOS",
       "VVOLSC",
       "VVSET",
       "UNKNOWN"
      ],
      "type": "string"
     },
     "vvSetTypes": {
      "type": "object",
      "properties": {
       "isAppset": {
        "description": "Flag indicating if the virtual volume set is an APPSET",
        "type": "boolean"
       },
       "isFlashCache": {
        "description": "Flag indicating if the virtual volume set is a FLASHCACHE",
        "type": "boolean"
       },
       "isQos": {
        "description": "Flag indicating if the virtual volume set is a QOS",
        "type": "boolean"
       },
       "isRcHost": {
        "description": "Flag indicating if the virtual volume set is an RCHOST",
        "type": "boolean"
       },
       "isVvolSc": {
        "description": "Flag indicating if the virtual volume set is a VVOLSC",
        "type": "boolean"
       }
      },
      "description": "A structure indicating the types of virtual volume sets",
      "descriptionKey": "SCHEMA_APPSET_SETTYPES",
      "title": "VvSetTypes"
     }
    }
   },
   "applicationset.ApplicationSetBulkDelete": {
    "type": "object",
    "properties": {
     "removeSchedules": {
      "description": "Remove Schedules bool value for custom bulk delete action",
      "type": "boolean"
     },
     "uids": {
      "description": "UIDs for bulk action",
      "type": "array",
      "items": {
       "description": "",
       "type": "string"
      }
     },
     "unexport": {
      "description": "Unexport bool value for custom bulk delete action.  Any existing exports for the volumes will be removed before deleting the volume",
      "type": "boolean"
     }
    }
   },
   "applicationset.Bulk_delete_application_sets": {
    "type": "BULK_DELETE",
    "fullType": "httputils.BulkDeleteResource",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: BULK_DELETE",
      "type": "string"
     },
     "parameters": {
      "type": "object",
      "properties": {
       "uids": {
        "description": "UIDs for bulk action",
        "type": "array",
        "items": {
         "description": "",
         "type": "string"
        }
       }
      },
      "description": "Parameters for a custom action",
      "descriptionKey": "SCHEMA_CUSTOM_ACTION_PROPS"
     }
    },
    "description": "Removes provided virtual volume sets. Respective member volumes are not removed.",
    "descriptionKey": "BULK_DELETE_APPSET_DESCRIPTION",
    "title": "BULK_DELETE",
    "example": {
     "action": "BULK_DELETE",
     "parameters": {
      "uids": [
       "ffff05369c9d645069d9779e7f4fc4eb",
       "dddd5109924695aacad04eff4cd0aeae"
      ]
     }
    }
   },
   "applicationset.CreateApplicationSet": {
    "type": "object",
    "required": [
     "appSetName"
    ],
    "properties": {
     "appSetBusinessUnit": {
      "description": "Business unit for an application that is using this set",
      "type": "string"
     },
     "appSetComments": {
      "description": "Free-form comments about virtual volume set",
      "type": "string"
     },
     "appSetExcludeAIQoS": {
      "description": "Indicates if to exclude the virtual volume set from aiqos or not.",
      "title": "excludeaiqos.Enum",
      "enum": [
       "yes",
       "no"
      ],
      "type": "string"
     },
     "appSetImportance": {
      "description": "Virtual volume set importance",
      "type": "string"
     },
     "appSetName": {
      "description": "Create Virtual volume Set name",
      "type": "string"
     },
     "appSetType": {
      "description": "Type of the application using this set",
      "type": "string"
     },
     "domain": {
      "description": "Domain that the resource belongs to",
      "type": "string"
     },
     "members": {
      "description": "Names of the set members",
      "type": "array",
      "items": {
       "description": "",
       "type": "string"
      }
     },
     "ransomWare": {
      "description": "Indicates if ransomware detection policy is set",
      "type": "boolean"
     }
    },
    "example": {
     "appSetName": "Appset_Ransomware",
     "appSetType": "Other",
     "ransomWare": true,
     "members": [
      "vv1",
      "vv2"
     ]
    }
   },
   "applicationset.CreateSnapshot": {
    "type": "object",
    "properties": {
     "comment": {
      "description": "Free-form comments about appset snapshot",
      "type": "string"
     },
     "expireSecs": {
      "description": "Expiration value specified for appset snapshot",
      "type": "integer",
      "format": "uint64"
     },
     "readOnly": {
      "description": "Read/write access provided while creating appset snapshot",
      "type": "boolean"
     },
     "retainSecs": {
      "description": "Retention value specified for appset snapshot",
      "type": "integer",
      "format": "uint64"
     },
     "snapshotName": {
      "description": "Name specified for appset snapshot",
      "type": "string"
     },
     "vvNamePattern": {
      "description": "Volume name pattern to use for snapshots (PARENT_TIMESTAMP, PARENT_SEC_SINCE_EPOCH, or CUSTOM)",
      "title": "snapshotnamepattern.Enum",
      "enum": [
       "PARENT_TIMESTAMP",
       "PARENT_SEC_SINCE_EPOCH",
       "CUSTOM"
      ],
      "type": "string"
     }
    }
   },
   "applicationset.Create_Application_set_snapshot": {
    "type": "CREATE_SNAPSHOT_APPSET",
    "fullType": "applicationset.CreateSnapshot",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: CREATE_SNAPSHOT_APPSET",
      "type": "string"
     },
     "parameters": {
      "type": "object",
      "properties": {
       "comment": {
        "description": "Free-form comments about appset snapshot",
        "type": "string"
       },
       "expireSecs": {
        "description": "Expiration value specified for appset snapshot",
        "type": "integer",
        "format": "uint64"
       },
       "readOnly": {
        "description": "Read/write access provided while creating appset snapshot",
        "type": "boolean"
       },
       "retainSecs": {
        "description": "Retention value specified for appset snapshot",
        "type": "integer",
        "format": "uint64"
       },
       "snapshotName": {
        "description": "Name specified for appset snapshot",
        "type": "string"
       },
       "vvNamePattern": {
        "description": "Volume name pattern to use for snapshots (PARENT_TIMESTAMP, PARENT_SEC_SINCE_EPOCH, or CUSTOM)",
        "title": "snapshotnamepattern.Enum",
        "enum": [
         "PARENT_TIMESTAMP",
         "PARENT_SEC_SINCE_EPOCH",
         "CUSTOM"
        ],
        "type": "string"
       }
      },
      "description": "Parameters for a custom action",
      "descriptionKey": "SCHEMA_CUSTOM_ACTION_PROPS"
     }
    },
    "description": "Creates a virtual volume set snapshot.",
    "descriptionKey": "CREATE_SNAPSHOT_APPSET_DESCRIPTION",
    "title": "CREATE_SNAPSHOT_APPSET",
    "example": {
     "action": "CREATE_SNAPSHOT_APPSET",
     "parameters": {
      "vvNamePattern": "PARENT_TIMESTAMP",
      "snapshotName": "snapshotset"
     }
    }
   },
   "applicationset.ExportApplicationSet": {
    "type": "object",
    "required": [
     "host"
    ],
    "properties": {
     "host": {
      "description": "Host or Hostset name to be exported to. Hostset name should start with \"set:\"",
      "type": "string"
     }
    }
   },
   "applicationset.FixApplicationSet": {
    "type": "object",
    "required": [
     "groupUid",
     "partnerSerial",
     "patchAppSet"
    ],
    "properties": {
     "groupUid": {
      "description": "Remote Copy group UID.",
      "type": "string"
     },
     "partnerSerial": {
      "description": "Specifies the serial number of the Remote Copy partner system.",
      "type": "array",
      "items": {
       "description": "",
       "type": "string"
      }
     },
     "patchAppSet": {
      "type": "object",
      "properties": {
       "appSetBusinessUnit": {
        "description": "Business unit for an application that is using this set",
        "type": "string"
       },
       "appSetComments": {
        "description": "Free-form comments about virtual volume set",
        "type": "string"
       },
       "appSetExcludeAIQoS": {
        "description": "Indicates if to exclude the virtual volume set from aiqos or not.",
        "title": "excludeaiqos.Enum",
        "enum": [
         "yes",
         "no"
        ],
        "type": "string"
       },
       "appSetImportance": {
        "description": "Virtual volume set importance",
        "type": "string"
       },
       "appSetName": {
        "description": "Virtual volume set name",
        "type": "string"
       },
       "appSetTuneVolumes": {
        "type": "object",
        "required": [
         "volumeName",
         "userCpgName"
        ],
        "properties": {
         "conversionType": {
          "description": "Specify Virtual volume set member Conversion Type.",
          "title": "conversiontype.Enum",
          "enum": [
           "CONVERSIONTYPE_THIN",
           "CONVERSIONTYPE_V1",
           "CONVERSIONTYPE_V2"
          ],
          "type": "string"
         },
         "saveToNewName": {
          "description": "Specify Virtual volume set tune member save to new name.",
          "type": "string"
         },
         "userCpgName": {
          "description": "Specify Virtual volume set member user cpg name.",
          "type": "string"
         },
         "volumeName": {
          "description": "Specify Virtual volume set member name.",
          "type": "string"
         }
        }
       },
       "appSetType": {
        "description": "Type of the application using this set",
        "type": "string"
       },
       "members": {
        "description": "Names of the set members",
        "type": "array",
        "items": {
         "description": "",
         "type": "string"
        }
       },
       "ransomWare": {
        "description": "Indicates if ransomware detection policy is set",
        "type": "boolean"
       }
      },
      "description": "Specifies the Virtual volume set details",
      "descriptionKey": "SCHEMA_APPSET_PATCH",
      "title": "*applicationset.PatchApplicationSet",
      "example": {
       "appSetName": "newName",
       "members": [
        "vvsetvv.0",
        "vvsetvv.1",
        "vvsetvv.2",
        "vvsetvv.3",
        "vvsetvv.4"
       ]
      }
     }
    }
   },
   "applicationset.FixApplicationSets": {
    "type": "object",
    "properties": {
     "fixAppSets": {
      "description": "List of virtual volume sets which require replication fix",
      "type": "array",
      "items": {
       "type": "object",
       "required": [
        "groupUid",
        "partnerSerial",
        "patchAppSet"
       ],
       "properties": {
        "groupUid": {
         "description": "Remote Copy group UID.",
         "type": "string"
        },
        "partnerSerial": {
         "description": "Specifies the serial number of the Remote Copy partner system.",
         "type": "array",
         "items": {
          "description": "",
          "type": "string"
         }
        },
        "patchAppSet": {
         "type": "object",
         "properties": {
          "appSetBusinessUnit": {
           "description": "Business unit for an application that is using this set",
           "type": "string"
          },
          "appSetComments": {
           "description": "Free-form comments about virtual volume set",
           "type": "string"
          },
          "appSetExcludeAIQoS": {
           "description": "Indicates if to exclude the virtual volume set from aiqos or not.",
           "title": "excludeaiqos.Enum",
           "enum": [
            "yes",
            "no"
           ],
           "type": "string"
          },
          "appSetImportance": {
           "description": "Virtual volume set importance",
           "type": "string"
          },
          "appSetName": {
           "description": "Virtual volume set name",
           "type": "string"
          },
          "appSetTuneVolumes": {
           "type": "object",
           "required": [
            "volumeName",
            "userCpgName"
           ],
           "properties": {
            "conversionType": {
             "description": "Specify Virtual volume set member Conversion Type.",
             "title": "conversiontype.Enum",
             "enum": [
              "CONVERSIONTYPE_THIN",
              "CONVERSIONTYPE_V1",
              "CONVERSIONTYPE_V2"
             ],
             "type": "string"
            },
            "saveToNewName": {
             "description": "Specify Virtual volume set tune member save to new name.",
             "type": "string"
            },
            "userCpgName": {
             "description": "Specify Virtual volume set member user cpg name.",
             "type": "string"
            },
            "volumeName": {
             "description": "Specify Virtual volume set member name.",
             "type": "string"
            }
           }
          },
          "appSetType": {
           "description": "Type of the application using this set",
           "type": "string"
          },
          "members": {
           "description": "Names of the set members",
           "type": "array",
           "items": {
            "description": "",
            "type": "string"
           }
          },
          "ransomWare": {
           "description": "Indicates if ransomware detection policy is set",
           "type": "boolean"
          }
         },
         "description": "Specifies the Virtual volume set details",
         "descriptionKey": "SCHEMA_APPSET_PATCH",
         "title": "*applicationset.PatchApplicationSet",
         "example": {
          "appSetName": "newName",
          "members": [
           "vvsetvv.0",
           "vvsetvv.1",
           "vvsetvv.2",
           "vvsetvv.3",
           "vvsetvv.4"
          ]
         }
        }
       },
       "title": "applicationset.FixApplicationSet"
      }
     }
    }
   },
   "applicationset.PatchApplicationSet": {
    "type": "object",
    "properties": {
     "appSetBusinessUnit": {
      "description": "Business unit for an application that is using this set",
      "type": "string"
     },
     "appSetComments": {
      "description": "Free-form comments about virtual volume set",
      "type": "string"
     },
     "appSetExcludeAIQoS": {
      "description": "Indicates if to exclude the virtual volume set from aiqos or not.",
      "title": "excludeaiqos.Enum",
      "enum": [
       "yes",
       "no"
      ],
      "type": "string"
     },
     "appSetImportance": {
      "description": "Virtual volume set importance",
      "type": "string"
     },
     "appSetName": {
      "description": "Virtual volume set name",
      "type": "string"
     },
     "appSetTuneVolumes": {
      "description": "Specify Virtual volume set tune members.",
      "type": "array",
      "items": {
       "type": "object",
       "required": [
        "volumeName",
        "userCpgName"
       ],
       "properties": {
        "conversionType": {
         "description": "Specify Virtual volume set member Conversion Type.",
         "title": "conversiontype.Enum",
         "enum": [
          "CONVERSIONTYPE_THIN",
          "CONVERSIONTYPE_V1",
          "CONVERSIONTYPE_V2"
         ],
         "type": "string"
        },
        "saveToNewName": {
         "description": "Specify Virtual volume set tune member save to new name.",
         "type": "string"
        },
        "userCpgName": {
         "description": "Specify Virtual volume set member user cpg name.",
         "type": "string"
        },
        "volumeName": {
         "description": "Specify Virtual volume set member name.",
         "type": "string"
        }
       },
       "title": "applicationset.TuneAppSetVolume"
      }
     },
     "appSetType": {
      "description": "Type of the application using this set",
      "type": "string"
     },
     "members": {
      "description": "Names of the set members",
      "type": "array",
      "items": {
       "description": "",
       "type": "string"
      }
     },
     "ransomWare": {
      "description": "Indicates if ransomware detection policy is set",
      "type": "boolean"
     }
    },
    "example": {
     "appSetName": "newName",
     "members": [
      "vvsetvv.0",
      "vvsetvv.1",
      "vvsetvv.2",
      "vvsetvv.3",
      "vvsetvv.4"
     ]
    }
   },
   "applicationset.PromoteVolumeGroup": {
    "type": "object",
    "properties": {
     "members": {
      "description": "Names of set members.  In certain situations. when exported volumes have been removed from a Virtual volume set, members may be replaced with a \"--\" placeholder.",
      "type": "array",
      "items": {
       "description": "",
       "type": "string"
      }
     },
     "priority": {
      "description": "Priority (PRIORITYTYPE_HIGH, PRIORITYTYPE_MED or PRIORITYTYPE_LOW).",
      "title": "prioritytype.Enum",
      "enum": [
       "PRIORITYTYPE_HIGH",
       "PRIORITYTYPE_MED",
       "PRIORITYTYPE_LOW"
      ],
      "type": "string"
     }
    }
   },
   "applicationset.SetMemberRwarePolicy": {
    "type": "object",
    "required": [
     "ransomWare"
    ],
    "properties": {
     "ransomWare": {
      "description": "Indicates if ransomware detection policy is set",
      "type": "boolean"
     }
    }
   },
   "applicationset.UnExportApplicationSet": {
    "type": "object",
    "properties": {
     "host": {
      "description": "Host or host set name to be unexported from. Host set name should start with \"set:\"",
      "type": "string"
     }
    }
   },
   "callhome.TestEmail": {
    "type": "object",
    "properties": {
     "toEmail": {
      "description": "Email address to send callhome alerts to.",
      "type": "string"
     }
    }
   },
   "capacity.SystemCapacity": {
    "type": "object",
    "properties": {
     "capacityByTier": {
      "type": "object",
      "properties": {
       "fcFree": {
        "description": "Free capacity for FC tier",
        "type": "number",
        "format": "float64"
       },
       "fcUsed": {
        "description": "Used capacity for FC tier",
        "type": "number",
        "format": "float64"
       },
       "nlFree": {
        "description": "Free capacity for NL tier",
        "type": "number",
        "format": "float64"
       },
       "nlUsed": {
        "description": "Used capacity for NL tier",
        "type": "number",
        "format": "float64"
       },
       "qlcFree": {
        "description": "Free capacity for QLC tier",
        "type": "number",
        "format": "float64"
       },
       "qlcUsed": {
        "description": "Used capacity for QLC tier",
        "type": "number",
        "format": "float64"
       },
       "ssdFree": {
        "description": "Free capacity for SSD tier",
        "type": "number",
        "format": "float64"
       },
       "ssdUsed": {
        "description": "Used capacity for SSD tier",
        "type": "number",
        "format": "float64"
       },
       "totalUsed": {
        "description": "Total capacity across all device tiers",
        "type": "number",
        "format": "float64"
       },
       "usableCapacity": {
        "description": "Usable capacity across all device tiers",
        "type": "number",
        "format": "float64"
       }
      },
      "description": "Capacity usage per device tier",
      "descriptionKey": "SCHEMA_SYSCAPACITY_CAPACITY_BY_TIER",
      "title": "*capacity.SystemCapacityByTier"
     },
     "capacitySummary": {
      "type": "object",
      "properties": {
       "allocated": {
        "type": "object",
        "properties": {
         "cpgsPrivateBase": {
          "type": "object",
          "properties": {
           "reservedVVols": {
            "description": "CPG private reserved vVOL capacity",
            "type": "number",
            "format": "float64"
           },
           "total": {
            "description": "CPG private capacity",
            "type": "number",
            "format": "float64"
           }
          },
          "description": "Allocated CPG private base capacity",
          "descriptionKey": "SCHEMA_SYSCAPACITY_ALLOCATED_CPGS_PRIVATE_BASE",
          "title": "*capacity.Private"
         },
         "cpgsShared": {
          "description": "Allocated CPG shared capacity",
          "type": "number",
          "format": "float64"
         },
         "system": {
          "description": "Allocated system capacity",
          "type": "number",
          "format": "float64"
         },
         "systemAdmin": {
          "description": "Allocated system admin capacity",
          "type": "number",
          "format": "float64"
         },
         "systemInternal": {
          "description": "Allocated system internal capacity",
          "type": "number",
          "format": "float64"
         },
         "systemSpare": {
          "description": "Allocated system spare capacity",
          "type": "number",
          "format": "float64"
         },
         "systemSpareUnused": {
          "description": "Allocated system spare unused capacity",
          "type": "number",
          "format": "float64"
         },
         "systemSpareUsed": {
          "description": "Allocated system spare used capacity",
          "type": "number",
          "format": "float64"
         },
         "unmapped": {
          "description": "Allocated unmapped capacity",
          "type": "number",
          "format": "float64"
         }
        },
        "description": "Summary of allocated capacity for a device type",
        "descriptionKey": "SCHEMA_SYSCAPACITY_SUMMARY_ALLOCATED",
        "title": "*capacity.Allocated"
       },
       "bulkvv_private_snp": {
        "description": "Bulk VVs private snap capacity",
        "type": "number",
        "format": "float64"
       },
       "bulkvvs_admin": {
        "description": "Bulk VVs admin capacity",
        "type": "number",
        "format": "float64"
       },
       "bulkvvs_copy": {
        "description": "Bulk VVs copy capacity",
        "type": "number",
        "format": "float64"
       },
       "bulkvvs_usr": {
        "description": "Bulk VVs user capacity",
        "type": "number",
        "format": "float64"
       },
       "compaction": {
        "description": "Summary of compaction ratio for a device type",
        "type": "number",
        "format": "float64"
       },
       "compressSaveMb": {
        "description": "Savings due to compression in Mb",
        "type": "integer",
        "format": "int64"
       },
       "compression": {
        "description": "Summary of compression ratio for a device type",
        "type": "number",
        "format": "float64"
       },
       "compressratio": {
        "description": "Compression ratio",
        "type": "number",
        "format": "float64"
       },
       "cpgsTotUsedSizeMiB": {
        "description": "Total space used by a CPG",
        "type": "number",
        "format": "float64"
       },
       "cpgsVirtualSizeMiB": {
        "description": "Virtual size of a CPG",
        "type": "number",
        "format": "float64"
       },
       "cpgs_admin_unused": {
        "description": "CPgs admin unused capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_admin_used": {
        "description": "CPGs admin used capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_copy": {
        "description": "CPGs copy capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_copy_used": {
        "description": "CPGs copy used capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_dedupttes": {
        "description": "CPGs dedup TTES capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_metadata": {
        "description": "CPgs metadata capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_svcnt": {
        "description": "CPGs SVcnt capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_tot_count_sd": {
        "description": "CPGs total count SD capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_unused": {
        "description": "CPGs unused capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_usr": {
        "description": "CPGs user capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_usr_used": {
        "description": "CPGs user used capacity",
        "type": "number",
        "format": "float64"
       },
       "dataReduction": {
        "description": "Summary of data reduction ratio for a device type",
        "type": "number",
        "format": "float64"
       },
       "dedup": {
        "description": "Summary of dedup ratio for a device type",
        "type": "number",
        "format": "float64"
       },
       "dedupSaveMb": {
        "description": "Savings due to dedub in Mb",
        "type": "integer",
        "format": "int64"
       },
       "dedupratio": {
        "description": "Dedup ratio",
        "type": "number",
        "format": "float64"
       },
       "failed": {
        "description": "Summary of failed capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "failedPercentage": {
        "description": "Summary of failed capacity percent for a device type",
        "type": "number",
        "format": "float64"
       },
       "free": {
        "description": "Summary of free capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "freeInitialized": {
        "description": "Summary of free initialized capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "freePercentage": {
        "description": "Summary of free capacity percent for a device type",
        "type": "number",
        "format": "float64"
       },
       "freeUninitialized": {
        "description": "Summary of free uninitialized capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "free_preallocated": {
        "description": "Free pre-allocated capacity",
        "type": "number",
        "format": "float64"
       },
       "freesz": {
        "description": "Summary of freesz capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "hostWrtMb": {
        "description": "Total Written By Hosts in Mb",
        "type": "integer",
        "format": "int64"
       },
       "nonReducibleMb": {
        "description": "Amount of data that could not be reduced",
        "type": "integer",
        "format": "int64"
       },
       "overProvisioning": {
        "description": "Summary of over provisioning ratio for a device type",
        "type": "number",
        "format": "float64"
       },
       "over_allocspace": {
        "description": "Over-provisioning allocated space capacity",
        "type": "number",
        "format": "float64"
       },
       "over_avail": {
        "description": "Over-provisioning available capacity",
        "type": "number",
        "format": "float64"
       },
       "over_freespace": {
        "description": "Over-provisioning free space capacity",
        "type": "number",
        "format": "float64"
       },
       "over_usedspace": {
        "description": "Over-provisioning used space capacity",
        "type": "number",
        "format": "float64"
       },
       "over_vsize": {
        "description": "Over Vsize capacity",
        "type": "number",
        "format": "float64"
       },
       "privatesz_metadata": {
        "description": "Private size metadata capacity",
        "type": "number",
        "format": "float64"
       },
       "privatesz_snp": {
        "description": "Private size snap capacity",
        "type": "number",
        "format": "float64"
       },
       "privatesz_tot": {
        "description": "Private size total capacity",
        "type": "number",
        "format": "float64"
       },
       "privatesz_tot_snp": {
        "description": "Private size total snap capacity",
        "type": "number",
        "format": "float64"
       },
       "reduceSaveMb": {
        "description": "Savings due to data reduction in Mb",
        "type": "integer",
        "format": "int64"
       },
       "reducibleReduceRatio": {
        "description": "Reducible reduction ratio",
        "type": "number",
        "format": "float64"
       },
       "reducibleReduceSaveMb": {
        "description": "Reducible reduction savings in Mb",
        "type": "integer",
        "format": "int64"
       },
       "thinRatio": {
        "description": "Space savings from a fully allocated VV (CPVV) to a thinly allocated VV (TPVV)",
        "type": "number",
        "format": "float64"
       },
       "thinSaveMb": {
        "description": "Thin savings in Mb",
        "type": "integer",
        "format": "int64"
       },
       "total": {
        "description": "Summary of total capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "totalRatio": {
        "description": "Total space savings from a fully allocated VV (CPVV) to a thinly allocated VV (TPVV), including thin, compression, dedup, clone, zero packing, and snaps, in MiB",
        "type": "number",
        "format": "float64"
       },
       "totalSaveMb": {
        "description": "Total space savings, including thin, compression, dedup, clone, zero packing, and snaps, in MiB",
        "type": "integer",
        "format": "int64"
       },
       "total_free": {
        "description": "Total free capacity",
        "type": "number",
        "format": "float64"
       },
       "total_used": {
        "description": "Total used capacity",
        "type": "number",
        "format": "float64"
       },
       "unavailable": {
        "description": "Summary of unavailable capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "unavailablePercentage": {
        "description": "Summary of unavailable capacity percent for a device type",
        "type": "number",
        "format": "float64"
       },
       "unusable": {
        "description": "Unusable capacity",
        "type": "number",
        "format": "float64"
       },
       "usable": {
        "description": "Usable capacity",
        "type": "number",
        "format": "float64"
       },
       "vv_unused": {
        "description": "VV unused capacity",
        "type": "number",
        "format": "float64"
       }
      },
      "description": "System capacity summary",
      "descriptionKey": "SCHEMA_SYSCAPACITY_SUMMARY",
      "title": "*capacity.SystemCapacitySummary"
     },
     "fcCapacitySummary": {
      "type": "object",
      "properties": {
       "allocated": {
        "type": "object",
        "properties": {
         "cpgsPrivateBase": {
          "type": "object",
          "properties": {
           "reservedVVols": {
            "description": "CPG private reserved vVOL capacity",
            "type": "number",
            "format": "float64"
           },
           "total": {
            "description": "CPG private capacity",
            "type": "number",
            "format": "float64"
           }
          },
          "description": "Allocated CPG private base capacity",
          "descriptionKey": "SCHEMA_SYSCAPACITY_ALLOCATED_CPGS_PRIVATE_BASE",
          "title": "*capacity.Private"
         },
         "cpgsShared": {
          "description": "Allocated CPG shared capacity",
          "type": "number",
          "format": "float64"
         },
         "system": {
          "description": "Allocated system capacity",
          "type": "number",
          "format": "float64"
         },
         "systemAdmin": {
          "description": "Allocated system admin capacity",
          "type": "number",
          "format": "float64"
         },
         "systemInternal": {
          "description": "Allocated system internal capacity",
          "type": "number",
          "format": "float64"
         },
         "systemSpare": {
          "description": "Allocated system spare capacity",
          "type": "number",
          "format": "float64"
         },
         "systemSpareUnused": {
          "description": "Allocated system spare unused capacity",
          "type": "number",
          "format": "float64"
         },
         "systemSpareUsed": {
          "description": "Allocated system spare used capacity",
          "type": "number",
          "format": "float64"
         },
         "unmapped": {
          "description": "Allocated unmapped capacity",
          "type": "number",
          "format": "float64"
         }
        },
        "description": "Summary of allocated capacity for a device type",
        "descriptionKey": "SCHEMA_SYSCAPACITY_SUMMARY_ALLOCATED",
        "title": "*capacity.Allocated"
       },
       "bulkvv_private_snp": {
        "description": "Bulk VVs private snap capacity",
        "type": "number",
        "format": "float64"
       },
       "bulkvvs_admin": {
        "description": "Bulk VVs admin capacity",
        "type": "number",
        "format": "float64"
       },
       "bulkvvs_copy": {
        "description": "Bulk VVs copy capacity",
        "type": "number",
        "format": "float64"
       },
       "bulkvvs_usr": {
        "description": "Bulk VVs user capacity",
        "type": "number",
        "format": "float64"
       },
       "compaction": {
        "description": "Summary of compaction ratio for a device type",
        "type": "number",
        "format": "float64"
       },
       "compressSaveMb": {
        "description": "Savings due to compression in Mb",
        "type": "integer",
        "format": "int64"
       },
       "compression": {
        "description": "Summary of compression ratio for a device type",
        "type": "number",
        "format": "float64"
       },
       "compressratio": {
        "description": "Compression ratio",
        "type": "number",
        "format": "float64"
       },
       "cpgsTotUsedSizeMiB": {
        "description": "Total space used by a CPG",
        "type": "number",
        "format": "float64"
       },
       "cpgsVirtualSizeMiB": {
        "description": "Virtual size of a CPG",
        "type": "number",
        "format": "float64"
       },
       "cpgs_admin_unused": {
        "description": "CPgs admin unused capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_admin_used": {
        "description": "CPGs admin used capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_copy": {
        "description": "CPGs copy capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_copy_used": {
        "description": "CPGs copy used capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_dedupttes": {
        "description": "CPGs dedup TTES capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_metadata": {
        "description": "CPgs metadata capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_svcnt": {
        "description": "CPGs SVcnt capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_tot_count_sd": {
        "description": "CPGs total count SD capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_unused": {
        "description": "CPGs unused capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_usr": {
        "description": "CPGs user capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_usr_used": {
        "description": "CPGs user used capacity",
        "type": "number",
        "format": "float64"
       },
       "dataReduction": {
        "description": "Summary of data reduction ratio for a device type",
        "type": "number",
        "format": "float64"
       },
       "dedup": {
        "description": "Summary of dedup ratio for a device type",
        "type": "number",
        "format": "float64"
       },
       "dedupSaveMb": {
        "description": "Savings due to dedub in Mb",
        "type": "integer",
        "format": "int64"
       },
       "dedupratio": {
        "description": "Dedup ratio",
        "type": "number",
        "format": "float64"
       },
       "failed": {
        "description": "Summary of failed capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "failedPercentage": {
        "description": "Summary of failed capacity percent for a device type",
        "type": "number",
        "format": "float64"
       },
       "free": {
        "description": "Summary of free capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "freeInitialized": {
        "description": "Summary of free initialized capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "freePercentage": {
        "description": "Summary of free capacity percent for a device type",
        "type": "number",
        "format": "float64"
       },
       "freeUninitialized": {
        "description": "Summary of free uninitialized capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "free_preallocated": {
        "description": "Free pre-allocated capacity",
        "type": "number",
        "format": "float64"
       },
       "freesz": {
        "description": "Summary of freesz capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "hostWrtMb": {
        "description": "Total Written By Hosts in Mb",
        "type": "integer",
        "format": "int64"
       },
       "nonReducibleMb": {
        "description": "Amount of data that could not be reduced",
        "type": "integer",
        "format": "int64"
       },
       "overProvisioning": {
        "description": "Summary of over provisioning ratio for a device type",
        "type": "number",
        "format": "float64"
       },
       "over_allocspace": {
        "description": "Over-provisioning allocated space capacity",
        "type": "number",
        "format": "float64"
       },
       "over_avail": {
        "description": "Over-provisioning available capacity",
        "type": "number",
        "format": "float64"
       },
       "over_freespace": {
        "description": "Over-provisioning free space capacity",
        "type": "number",
        "format": "float64"
       },
       "over_usedspace": {
        "description": "Over-provisioning used space capacity",
        "type": "number",
        "format": "float64"
       },
       "over_vsize": {
        "description": "Over Vsize capacity",
        "type": "number",
        "format": "float64"
       },
       "privatesz_metadata": {
        "description": "Private size metadata capacity",
        "type": "number",
        "format": "float64"
       },
       "privatesz_snp": {
        "description": "Private size snap capacity",
        "type": "number",
        "format": "float64"
       },
       "privatesz_tot": {
        "description": "Private size total capacity",
        "type": "number",
        "format": "float64"
       },
       "privatesz_tot_snp": {
        "description": "Private size total snap capacity",
        "type": "number",
        "format": "float64"
       },
       "reduceSaveMb": {
        "description": "Savings due to data reduction in Mb",
        "type": "integer",
        "format": "int64"
       },
       "reducibleReduceRatio": {
        "description": "Reducible reduction ratio",
        "type": "number",
        "format": "float64"
       },
       "reducibleReduceSaveMb": {
        "description": "Reducible reduction savings in Mb",
        "type": "integer",
        "format": "int64"
       },
       "thinRatio": {
        "description": "Space savings from a fully allocated VV (CPVV) to a thinly allocated VV (TPVV)",
        "type": "number",
        "format": "float64"
       },
       "thinSaveMb": {
        "description": "Thin savings in Mb",
        "type": "integer",
        "format": "int64"
       },
       "total": {
        "description": "Summary of total capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "totalRatio": {
        "description": "Total space savings from a fully allocated VV (CPVV) to a thinly allocated VV (TPVV), including thin, compression, dedup, clone, zero packing, and snaps, in MiB",
        "type": "number",
        "format": "float64"
       },
       "totalSaveMb": {
        "description": "Total space savings, including thin, compression, dedup, clone, zero packing, and snaps, in MiB",
        "type": "integer",
        "format": "int64"
       },
       "total_free": {
        "description": "Total free capacity",
        "type": "number",
        "format": "float64"
       },
       "total_used": {
        "description": "Total used capacity",
        "type": "number",
        "format": "float64"
       },
       "unavailable": {
        "description": "Summary of unavailable capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "unavailablePercentage": {
        "description": "Summary of unavailable capacity percent for a device type",
        "type": "number",
        "format": "float64"
       },
       "unusable": {
        "description": "Unusable capacity",
        "type": "number",
        "format": "float64"
       },
       "usable": {
        "description": "Usable capacity",
        "type": "number",
        "format": "float64"
       },
       "vv_unused": {
        "description": "VV unused capacity",
        "type": "number",
        "format": "float64"
       }
      },
      "description": "System capacity summary for FC device type",
      "descriptionKey": "SCHEMA_SYSCAPACITY_FCSUMMARY",
      "title": "*capacity.SystemCapacitySummary"
     },
     "fcUsableCapacitySummary": {
      "type": "object",
      "properties": {
       "allocated": {
        "type": "object",
        "properties": {
         "cpgsPrivateBase": {
          "type": "object",
          "properties": {
           "reservedVVols": {
            "description": "CPG private reserved vVOL capacity",
            "type": "number",
            "format": "float64"
           },
           "total": {
            "description": "CPG private capacity",
            "type": "number",
            "format": "float64"
           }
          },
          "description": "Allocated CPG private base capacity",
          "descriptionKey": "SCHEMA_SYSCAPACITY_ALLOCATED_CPGS_PRIVATE_BASE",
          "title": "*capacity.Private"
         },
         "cpgsShared": {
          "description": "Allocated CPG shared capacity",
          "type": "number",
          "format": "float64"
         },
         "system": {
          "description": "Allocated system capacity",
          "type": "number",
          "format": "float64"
         },
         "systemAdmin": {
          "description": "Allocated system admin capacity",
          "type": "number",
          "format": "float64"
         },
         "systemInternal": {
          "description": "Allocated system internal capacity",
          "type": "number",
          "format": "float64"
         },
         "systemSpare": {
          "description": "Allocated system spare capacity",
          "type": "number",
          "format": "float64"
         },
         "systemSpareUnused": {
          "description": "Allocated system spare unused capacity",
          "type": "number",
          "format": "float64"
         },
         "systemSpareUsed": {
          "description": "Allocated system spare used capacity",
          "type": "number",
          "format": "float64"
         },
         "unmapped": {
          "description": "Allocated unmapped capacity",
          "type": "number",
          "format": "float64"
         }
        },
        "description": "Summary of allocated capacity for a device type",
        "descriptionKey": "SCHEMA_SYSCAPACITY_SUMMARY_ALLOCATED",
        "title": "*capacity.Allocated"
       },
       "bulkvv_private_snp": {
        "description": "Bulk VVs private snap capacity",
        "type": "number",
        "format": "float64"
       },
       "bulkvvs_admin": {
        "description": "Bulk VVs admin capacity",
        "type": "number",
        "format": "float64"
       },
       "bulkvvs_copy": {
        "description": "Bulk VVs copy capacity",
        "type": "number",
        "format": "float64"
       },
       "bulkvvs_usr": {
        "description": "Bulk VVs user capacity",
        "type": "number",
        "format": "float64"
       },
       "compaction": {
        "description": "Summary of compaction ratio for a device type",
        "type": "number",
        "format": "float64"
       },
       "compressSaveMb": {
        "description": "Savings due to compression in Mb",
        "type": "integer",
        "format": "int64"
       },
       "compression": {
        "description": "Summary of compression ratio for a device type",
        "type": "number",
        "format": "float64"
       },
       "compressratio": {
        "description": "Compression ratio",
        "type": "number",
        "format": "float64"
       },
       "cpgsTotUsedSizeMiB": {
        "description": "Total space used by a CPG",
        "type": "number",
        "format": "float64"
       },
       "cpgsVirtualSizeMiB": {
        "description": "Virtual size of a CPG",
        "type": "number",
        "format": "float64"
       },
       "cpgs_admin_unused": {
        "description": "CPgs admin unused capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_admin_used": {
        "description": "CPGs admin used capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_copy": {
        "description": "CPGs copy capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_copy_used": {
        "description": "CPGs copy used capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_dedupttes": {
        "description": "CPGs dedup TTES capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_metadata": {
        "description": "CPgs metadata capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_svcnt": {
        "description": "CPGs SVcnt capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_tot_count_sd": {
        "description": "CPGs total count SD capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_unused": {
        "description": "CPGs unused capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_usr": {
        "description": "CPGs user capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_usr_used": {
        "description": "CPGs user used capacity",
        "type": "number",
        "format": "float64"
       },
       "dataReduction": {
        "description": "Summary of data reduction ratio for a device type",
        "type": "number",
        "format": "float64"
       },
       "dedup": {
        "description": "Summary of dedup ratio for a device type",
        "type": "number",
        "format": "float64"
       },
       "dedupSaveMb": {
        "description": "Savings due to dedub in Mb",
        "type": "integer",
        "format": "int64"
       },
       "dedupratio": {
        "description": "Dedup ratio",
        "type": "number",
        "format": "float64"
       },
       "failed": {
        "description": "Summary of failed capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "failedPercentage": {
        "description": "Summary of failed capacity percent for a device type",
        "type": "number",
        "format": "float64"
       },
       "free": {
        "description": "Summary of free capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "freeInitialized": {
        "description": "Summary of free initialized capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "freePercentage": {
        "description": "Summary of free capacity percent for a device type",
        "type": "number",
        "format": "float64"
       },
       "freeUninitialized": {
        "description": "Summary of free uninitialized capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "free_preallocated": {
        "description": "Free pre-allocated capacity",
        "type": "number",
        "format": "float64"
       },
       "freesz": {
        "description": "Summary of freesz capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "hostWrtMb": {
        "description": "Total Written By Hosts in Mb",
        "type": "integer",
        "format": "int64"
       },
       "nonReducibleMb": {
        "description": "Amount of data that could not be reduced",
        "type": "integer",
        "format": "int64"
       },
       "overProvisioning": {
        "description": "Summary of over provisioning ratio for a device type",
        "type": "number",
        "format": "float64"
       },
       "over_allocspace": {
        "description": "Over-provisioning allocated space capacity",
        "type": "number",
        "format": "float64"
       },
       "over_avail": {
        "description": "Over-provisioning available capacity",
        "type": "number",
        "format": "float64"
       },
       "over_freespace": {
        "description": "Over-provisioning free space capacity",
        "type": "number",
        "format": "float64"
       },
       "over_usedspace": {
        "description": "Over-provisioning used space capacity",
        "type": "number",
        "format": "float64"
       },
       "over_vsize": {
        "description": "Over Vsize capacity",
        "type": "number",
        "format": "float64"
       },
       "privatesz_metadata": {
        "description": "Private size metadata capacity",
        "type": "number",
        "format": "float64"
       },
       "privatesz_snp": {
        "description": "Private size snap capacity",
        "type": "number",
        "format": "float64"
       },
       "privatesz_tot": {
        "description": "Private size total capacity",
        "type": "number",
        "format": "float64"
       },
       "privatesz_tot_snp": {
        "description": "Private size total snap capacity",
        "type": "number",
        "format": "float64"
       },
       "reduceSaveMb": {
        "description": "Savings due to data reduction in Mb",
        "type": "integer",
        "format": "int64"
       },
       "reducibleReduceRatio": {
        "description": "Reducible reduction ratio",
        "type": "number",
        "format": "float64"
       },
       "reducibleReduceSaveMb": {
        "description": "Reducible reduction savings in Mb",
        "type": "integer",
        "format": "int64"
       },
       "thinRatio": {
        "description": "Space savings from a fully allocated VV (CPVV) to a thinly allocated VV (TPVV)",
        "type": "number",
        "format": "float64"
       },
       "thinSaveMb": {
        "description": "Thin savings in Mb",
        "type": "integer",
        "format": "int64"
       },
       "total": {
        "description": "Summary of total capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "totalRatio": {
        "description": "Total space savings from a fully allocated VV (CPVV) to a thinly allocated VV (TPVV), including thin, compression, dedup, clone, zero packing, and snaps, in MiB",
        "type": "number",
        "format": "float64"
       },
       "totalSaveMb": {
        "description": "Total space savings, including thin, compression, dedup, clone, zero packing, and snaps, in MiB",
        "type": "integer",
        "format": "int64"
       },
       "total_free": {
        "description": "Total free capacity",
        "type": "number",
        "format": "float64"
       },
       "total_used": {
        "description": "Total used capacity",
        "type": "number",
        "format": "float64"
       },
       "unavailable": {
        "description": "Summary of unavailable capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "unavailablePercentage": {
        "description": "Summary of unavailable capacity percent for a device type",
        "type": "number",
        "format": "float64"
       },
       "unusable": {
        "description": "Unusable capacity",
        "type": "number",
        "format": "float64"
       },
       "usable": {
        "description": "Usable capacity",
        "type": "number",
        "format": "float64"
       },
       "vv_unused": {
        "description": "VV unused capacity",
        "type": "number",
        "format": "float64"
       }
      },
      "description": "System usable capacity summary for FC device type",
      "descriptionKey": "SCHEMA_USABLE_SYSCAPACITY_FCSUMMARY",
      "title": "*capacity.SystemCapacitySummary"
     },
     "nlCapacitySummary": {
      "type": "object",
      "properties": {
       "allocated": {
        "type": "object",
        "properties": {
         "cpgsPrivateBase": {
          "type": "object",
          "properties": {
           "reservedVVols": {
            "description": "CPG private reserved vVOL capacity",
            "type": "number",
            "format": "float64"
           },
           "total": {
            "description": "CPG private capacity",
            "type": "number",
            "format": "float64"
           }
          },
          "description": "Allocated CPG private base capacity",
          "descriptionKey": "SCHEMA_SYSCAPACITY_ALLOCATED_CPGS_PRIVATE_BASE",
          "title": "*capacity.Private"
         },
         "cpgsShared": {
          "description": "Allocated CPG shared capacity",
          "type": "number",
          "format": "float64"
         },
         "system": {
          "description": "Allocated system capacity",
          "type": "number",
          "format": "float64"
         },
         "systemAdmin": {
          "description": "Allocated system admin capacity",
          "type": "number",
          "format": "float64"
         },
         "systemInternal": {
          "description": "Allocated system internal capacity",
          "type": "number",
          "format": "float64"
         },
         "systemSpare": {
          "description": "Allocated system spare capacity",
          "type": "number",
          "format": "float64"
         },
         "systemSpareUnused": {
          "description": "Allocated system spare unused capacity",
          "type": "number",
          "format": "float64"
         },
         "systemSpareUsed": {
          "description": "Allocated system spare used capacity",
          "type": "number",
          "format": "float64"
         },
         "unmapped": {
          "description": "Allocated unmapped capacity",
          "type": "number",
          "format": "float64"
         }
        },
        "description": "Summary of allocated capacity for a device type",
        "descriptionKey": "SCHEMA_SYSCAPACITY_SUMMARY_ALLOCATED",
        "title": "*capacity.Allocated"
       },
       "bulkvv_private_snp": {
        "description": "Bulk VVs private snap capacity",
        "type": "number",
        "format": "float64"
       },
       "bulkvvs_admin": {
        "description": "Bulk VVs admin capacity",
        "type": "number",
        "format": "float64"
       },
       "bulkvvs_copy": {
        "description": "Bulk VVs copy capacity",
        "type": "number",
        "format": "float64"
       },
       "bulkvvs_usr": {
        "description": "Bulk VVs user capacity",
        "type": "number",
        "format": "float64"
       },
       "compaction": {
        "description": "Summary of compaction ratio for a device type",
        "type": "number",
        "format": "float64"
       },
       "compressSaveMb": {
        "description": "Savings due to compression in Mb",
        "type": "integer",
        "format": "int64"
       },
       "compression": {
        "description": "Summary of compression ratio for a device type",
        "type": "number",
        "format": "float64"
       },
       "compressratio": {
        "description": "Compression ratio",
        "type": "number",
        "format": "float64"
       },
       "cpgsTotUsedSizeMiB": {
        "description": "Total space used by a CPG",
        "type": "number",
        "format": "float64"
       },
       "cpgsVirtualSizeMiB": {
        "description": "Virtual size of a CPG",
        "type": "number",
        "format": "float64"
       },
       "cpgs_admin_unused": {
        "description": "CPgs admin unused capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_admin_used": {
        "description": "CPGs admin used capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_copy": {
        "description": "CPGs copy capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_copy_used": {
        "description": "CPGs copy used capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_dedupttes": {
        "description": "CPGs dedup TTES capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_metadata": {
        "description": "CPgs metadata capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_svcnt": {
        "description": "CPGs SVcnt capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_tot_count_sd": {
        "description": "CPGs total count SD capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_unused": {
        "description": "CPGs unused capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_usr": {
        "description": "CPGs user capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_usr_used": {
        "description": "CPGs user used capacity",
        "type": "number",
        "format": "float64"
       },
       "dataReduction": {
        "description": "Summary of data reduction ratio for a device type",
        "type": "number",
        "format": "float64"
       },
       "dedup": {
        "description": "Summary of dedup ratio for a device type",
        "type": "number",
        "format": "float64"
       },
       "dedupSaveMb": {
        "description": "Savings due to dedub in Mb",
        "type": "integer",
        "format": "int64"
       },
       "dedupratio": {
        "description": "Dedup ratio",
        "type": "number",
        "format": "float64"
       },
       "failed": {
        "description": "Summary of failed capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "failedPercentage": {
        "description": "Summary of failed capacity percent for a device type",
        "type": "number",
        "format": "float64"
       },
       "free": {
        "description": "Summary of free capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "freeInitialized": {
        "description": "Summary of free initialized capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "freePercentage": {
        "description": "Summary of free capacity percent for a device type",
        "type": "number",
        "format": "float64"
       },
       "freeUninitialized": {
        "description": "Summary of free uninitialized capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "free_preallocated": {
        "description": "Free pre-allocated capacity",
        "type": "number",
        "format": "float64"
       },
       "freesz": {
        "description": "Summary of freesz capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "hostWrtMb": {
        "description": "Total Written By Hosts in Mb",
        "type": "integer",
        "format": "int64"
       },
       "nonReducibleMb": {
        "description": "Amount of data that could not be reduced",
        "type": "integer",
        "format": "int64"
       },
       "overProvisioning": {
        "description": "Summary of over provisioning ratio for a device type",
        "type": "number",
        "format": "float64"
       },
       "over_allocspace": {
        "description": "Over-provisioning allocated space capacity",
        "type": "number",
        "format": "float64"
       },
       "over_avail": {
        "description": "Over-provisioning available capacity",
        "type": "number",
        "format": "float64"
       },
       "over_freespace": {
        "description": "Over-provisioning free space capacity",
        "type": "number",
        "format": "float64"
       },
       "over_usedspace": {
        "description": "Over-provisioning used space capacity",
        "type": "number",
        "format": "float64"
       },
       "over_vsize": {
        "description": "Over Vsize capacity",
        "type": "number",
        "format": "float64"
       },
       "privatesz_metadata": {
        "description": "Private size metadata capacity",
        "type": "number",
        "format": "float64"
       },
       "privatesz_snp": {
        "description": "Private size snap capacity",
        "type": "number",
        "format": "float64"
       },
       "privatesz_tot": {
        "description": "Private size total capacity",
        "type": "number",
        "format": "float64"
       },
       "privatesz_tot_snp": {
        "description": "Private size total snap capacity",
        "type": "number",
        "format": "float64"
       },
       "reduceSaveMb": {
        "description": "Savings due to data reduction in Mb",
        "type": "integer",
        "format": "int64"
       },
       "reducibleReduceRatio": {
        "description": "Reducible reduction ratio",
        "type": "number",
        "format": "float64"
       },
       "reducibleReduceSaveMb": {
        "description": "Reducible reduction savings in Mb",
        "type": "integer",
        "format": "int64"
       },
       "thinRatio": {
        "description": "Space savings from a fully allocated VV (CPVV) to a thinly allocated VV (TPVV)",
        "type": "number",
        "format": "float64"
       },
       "thinSaveMb": {
        "description": "Thin savings in Mb",
        "type": "integer",
        "format": "int64"
       },
       "total": {
        "description": "Summary of total capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "totalRatio": {
        "description": "Total space savings from a fully allocated VV (CPVV) to a thinly allocated VV (TPVV), including thin, compression, dedup, clone, zero packing, and snaps, in MiB",
        "type": "number",
        "format": "float64"
       },
       "totalSaveMb": {
        "description": "Total space savings, including thin, compression, dedup, clone, zero packing, and snaps, in MiB",
        "type": "integer",
        "format": "int64"
       },
       "total_free": {
        "description": "Total free capacity",
        "type": "number",
        "format": "float64"
       },
       "total_used": {
        "description": "Total used capacity",
        "type": "number",
        "format": "float64"
       },
       "unavailable": {
        "description": "Summary of unavailable capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "unavailablePercentage": {
        "description": "Summary of unavailable capacity percent for a device type",
        "type": "number",
        "format": "float64"
       },
       "unusable": {
        "description": "Unusable capacity",
        "type": "number",
        "format": "float64"
       },
       "usable": {
        "description": "Usable capacity",
        "type": "number",
        "format": "float64"
       },
       "vv_unused": {
        "description": "VV unused capacity",
        "type": "number",
        "format": "float64"
       }
      },
      "description": "System capacity summary for NL device type",
      "descriptionKey": "SCHEMA_SYSCAPACITY_NLSUMMARY",
      "title": "*capacity.SystemCapacitySummary"
     },
     "nlUsableCapacitySummary": {
      "type": "object",
      "properties": {
       "allocated": {
        "type": "object",
        "properties": {
         "cpgsPrivateBase": {
          "type": "object",
          "properties": {
           "reservedVVols": {
            "description": "CPG private reserved vVOL capacity",
            "type": "number",
            "format": "float64"
           },
           "total": {
            "description": "CPG private capacity",
            "type": "number",
            "format": "float64"
           }
          },
          "description": "Allocated CPG private base capacity",
          "descriptionKey": "SCHEMA_SYSCAPACITY_ALLOCATED_CPGS_PRIVATE_BASE",
          "title": "*capacity.Private"
         },
         "cpgsShared": {
          "description": "Allocated CPG shared capacity",
          "type": "number",
          "format": "float64"
         },
         "system": {
          "description": "Allocated system capacity",
          "type": "number",
          "format": "float64"
         },
         "systemAdmin": {
          "description": "Allocated system admin capacity",
          "type": "number",
          "format": "float64"
         },
         "systemInternal": {
          "description": "Allocated system internal capacity",
          "type": "number",
          "format": "float64"
         },
         "systemSpare": {
          "description": "Allocated system spare capacity",
          "type": "number",
          "format": "float64"
         },
         "systemSpareUnused": {
          "description": "Allocated system spare unused capacity",
          "type": "number",
          "format": "float64"
         },
         "systemSpareUsed": {
          "description": "Allocated system spare used capacity",
          "type": "number",
          "format": "float64"
         },
         "unmapped": {
          "description": "Allocated unmapped capacity",
          "type": "number",
          "format": "float64"
         }
        },
        "description": "Summary of allocated capacity for a device type",
        "descriptionKey": "SCHEMA_SYSCAPACITY_SUMMARY_ALLOCATED",
        "title": "*capacity.Allocated"
       },
       "bulkvv_private_snp": {
        "description": "Bulk VVs private snap capacity",
        "type": "number",
        "format": "float64"
       },
       "bulkvvs_admin": {
        "description": "Bulk VVs admin capacity",
        "type": "number",
        "format": "float64"
       },
       "bulkvvs_copy": {
        "description": "Bulk VVs copy capacity",
        "type": "number",
        "format": "float64"
       },
       "bulkvvs_usr": {
        "description": "Bulk VVs user capacity",
        "type": "number",
        "format": "float64"
       },
       "compaction": {
        "description": "Summary of compaction ratio for a device type",
        "type": "number",
        "format": "float64"
       },
       "compressSaveMb": {
        "description": "Savings due to compression in Mb",
        "type": "integer",
        "format": "int64"
       },
       "compression": {
        "description": "Summary of compression ratio for a device type",
        "type": "number",
        "format": "float64"
       },
       "compressratio": {
        "description": "Compression ratio",
        "type": "number",
        "format": "float64"
       },
       "cpgsTotUsedSizeMiB": {
        "description": "Total space used by a CPG",
        "type": "number",
        "format": "float64"
       },
       "cpgsVirtualSizeMiB": {
        "description": "Virtual size of a CPG",
        "type": "number",
        "format": "float64"
       },
       "cpgs_admin_unused": {
        "description": "CPgs admin unused capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_admin_used": {
        "description": "CPGs admin used capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_copy": {
        "description": "CPGs copy capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_copy_used": {
        "description": "CPGs copy used capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_dedupttes": {
        "description": "CPGs dedup TTES capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_metadata": {
        "description": "CPgs metadata capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_svcnt": {
        "description": "CPGs SVcnt capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_tot_count_sd": {
        "description": "CPGs total count SD capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_unused": {
        "description": "CPGs unused capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_usr": {
        "description": "CPGs user capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_usr_used": {
        "description": "CPGs user used capacity",
        "type": "number",
        "format": "float64"
       },
       "dataReduction": {
        "description": "Summary of data reduction ratio for a device type",
        "type": "number",
        "format": "float64"
       },
       "dedup": {
        "description": "Summary of dedup ratio for a device type",
        "type": "number",
        "format": "float64"
       },
       "dedupSaveMb": {
        "description": "Savings due to dedub in Mb",
        "type": "integer",
        "format": "int64"
       },
       "dedupratio": {
        "description": "Dedup ratio",
        "type": "number",
        "format": "float64"
       },
       "failed": {
        "description": "Summary of failed capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "failedPercentage": {
        "description": "Summary of failed capacity percent for a device type",
        "type": "number",
        "format": "float64"
       },
       "free": {
        "description": "Summary of free capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "freeInitialized": {
        "description": "Summary of free initialized capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "freePercentage": {
        "description": "Summary of free capacity percent for a device type",
        "type": "number",
        "format": "float64"
       },
       "freeUninitialized": {
        "description": "Summary of free uninitialized capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "free_preallocated": {
        "description": "Free pre-allocated capacity",
        "type": "number",
        "format": "float64"
       },
       "freesz": {
        "description": "Summary of freesz capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "hostWrtMb": {
        "description": "Total Written By Hosts in Mb",
        "type": "integer",
        "format": "int64"
       },
       "nonReducibleMb": {
        "description": "Amount of data that could not be reduced",
        "type": "integer",
        "format": "int64"
       },
       "overProvisioning": {
        "description": "Summary of over provisioning ratio for a device type",
        "type": "number",
        "format": "float64"
       },
       "over_allocspace": {
        "description": "Over-provisioning allocated space capacity",
        "type": "number",
        "format": "float64"
       },
       "over_avail": {
        "description": "Over-provisioning available capacity",
        "type": "number",
        "format": "float64"
       },
       "over_freespace": {
        "description": "Over-provisioning free space capacity",
        "type": "number",
        "format": "float64"
       },
       "over_usedspace": {
        "description": "Over-provisioning used space capacity",
        "type": "number",
        "format": "float64"
       },
       "over_vsize": {
        "description": "Over Vsize capacity",
        "type": "number",
        "format": "float64"
       },
       "privatesz_metadata": {
        "description": "Private size metadata capacity",
        "type": "number",
        "format": "float64"
       },
       "privatesz_snp": {
        "description": "Private size snap capacity",
        "type": "number",
        "format": "float64"
       },
       "privatesz_tot": {
        "description": "Private size total capacity",
        "type": "number",
        "format": "float64"
       },
       "privatesz_tot_snp": {
        "description": "Private size total snap capacity",
        "type": "number",
        "format": "float64"
       },
       "reduceSaveMb": {
        "description": "Savings due to data reduction in Mb",
        "type": "integer",
        "format": "int64"
       },
       "reducibleReduceRatio": {
        "description": "Reducible reduction ratio",
        "type": "number",
        "format": "float64"
       },
       "reducibleReduceSaveMb": {
        "description": "Reducible reduction savings in Mb",
        "type": "integer",
        "format": "int64"
       },
       "thinRatio": {
        "description": "Space savings from a fully allocated VV (CPVV) to a thinly allocated VV (TPVV)",
        "type": "number",
        "format": "float64"
       },
       "thinSaveMb": {
        "description": "Thin savings in Mb",
        "type": "integer",
        "format": "int64"
       },
       "total": {
        "description": "Summary of total capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "totalRatio": {
        "description": "Total space savings from a fully allocated VV (CPVV) to a thinly allocated VV (TPVV), including thin, compression, dedup, clone, zero packing, and snaps, in MiB",
        "type": "number",
        "format": "float64"
       },
       "totalSaveMb": {
        "description": "Total space savings, including thin, compression, dedup, clone, zero packing, and snaps, in MiB",
        "type": "integer",
        "format": "int64"
       },
       "total_free": {
        "description": "Total free capacity",
        "type": "number",
        "format": "float64"
       },
       "total_used": {
        "description": "Total used capacity",
        "type": "number",
        "format": "float64"
       },
       "unavailable": {
        "description": "Summary of unavailable capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "unavailablePercentage": {
        "description": "Summary of unavailable capacity percent for a device type",
        "type": "number",
        "format": "float64"
       },
       "unusable": {
        "description": "Unusable capacity",
        "type": "number",
        "format": "float64"
       },
       "usable": {
        "description": "Usable capacity",
        "type": "number",
        "format": "float64"
       },
       "vv_unused": {
        "description": "VV unused capacity",
        "type": "number",
        "format": "float64"
       }
      },
      "description": "System usable capacity summary for NL device type",
      "descriptionKey": "SCHEMA_USABLE_SYSCAPACITY_NLSUMMARY",
      "title": "*capacity.SystemCapacitySummary"
     },
     "qlcCapacitySummary": {
      "type": "object",
      "properties": {
       "allocated": {
        "type": "object",
        "properties": {
         "cpgsPrivateBase": {
          "type": "object",
          "properties": {
           "reservedVVols": {
            "description": "CPG private reserved vVOL capacity",
            "type": "number",
            "format": "float64"
           },
           "total": {
            "description": "CPG private capacity",
            "type": "number",
            "format": "float64"
           }
          },
          "description": "Allocated CPG private base capacity",
          "descriptionKey": "SCHEMA_SYSCAPACITY_ALLOCATED_CPGS_PRIVATE_BASE",
          "title": "*capacity.Private"
         },
         "cpgsShared": {
          "description": "Allocated CPG shared capacity",
          "type": "number",
          "format": "float64"
         },
         "system": {
          "description": "Allocated system capacity",
          "type": "number",
          "format": "float64"
         },
         "systemAdmin": {
          "description": "Allocated system admin capacity",
          "type": "number",
          "format": "float64"
         },
         "systemInternal": {
          "description": "Allocated system internal capacity",
          "type": "number",
          "format": "float64"
         },
         "systemSpare": {
          "description": "Allocated system spare capacity",
          "type": "number",
          "format": "float64"
         },
         "systemSpareUnused": {
          "description": "Allocated system spare unused capacity",
          "type": "number",
          "format": "float64"
         },
         "systemSpareUsed": {
          "description": "Allocated system spare used capacity",
          "type": "number",
          "format": "float64"
         },
         "unmapped": {
          "description": "Allocated unmapped capacity",
          "type": "number",
          "format": "float64"
         }
        },
        "description": "Summary of allocated capacity for a device type",
        "descriptionKey": "SCHEMA_SYSCAPACITY_SUMMARY_ALLOCATED",
        "title": "*capacity.Allocated"
       },
       "bulkvv_private_snp": {
        "description": "Bulk VVs private snap capacity",
        "type": "number",
        "format": "float64"
       },
       "bulkvvs_admin": {
        "description": "Bulk VVs admin capacity",
        "type": "number",
        "format": "float64"
       },
       "bulkvvs_copy": {
        "description": "Bulk VVs copy capacity",
        "type": "number",
        "format": "float64"
       },
       "bulkvvs_usr": {
        "description": "Bulk VVs user capacity",
        "type": "number",
        "format": "float64"
       },
       "compaction": {
        "description": "Summary of compaction ratio for a device type",
        "type": "number",
        "format": "float64"
       },
       "compressSaveMb": {
        "description": "Savings due to compression in Mb",
        "type": "integer",
        "format": "int64"
       },
       "compression": {
        "description": "Summary of compression ratio for a device type",
        "type": "number",
        "format": "float64"
       },
       "compressratio": {
        "description": "Compression ratio",
        "type": "number",
        "format": "float64"
       },
       "cpgsTotUsedSizeMiB": {
        "description": "Total space used by a CPG",
        "type": "number",
        "format": "float64"
       },
       "cpgsVirtualSizeMiB": {
        "description": "Virtual size of a CPG",
        "type": "number",
        "format": "float64"
       },
       "cpgs_admin_unused": {
        "description": "CPgs admin unused capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_admin_used": {
        "description": "CPGs admin used capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_copy": {
        "description": "CPGs copy capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_copy_used": {
        "description": "CPGs copy used capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_dedupttes": {
        "description": "CPGs dedup TTES capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_metadata": {
        "description": "CPgs metadata capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_svcnt": {
        "description": "CPGs SVcnt capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_tot_count_sd": {
        "description": "CPGs total count SD capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_unused": {
        "description": "CPGs unused capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_usr": {
        "description": "CPGs user capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_usr_used": {
        "description": "CPGs user used capacity",
        "type": "number",
        "format": "float64"
       },
       "dataReduction": {
        "description": "Summary of data reduction ratio for a device type",
        "type": "number",
        "format": "float64"
       },
       "dedup": {
        "description": "Summary of dedup ratio for a device type",
        "type": "number",
        "format": "float64"
       },
       "dedupSaveMb": {
        "description": "Savings due to dedub in Mb",
        "type": "integer",
        "format": "int64"
       },
       "dedupratio": {
        "description": "Dedup ratio",
        "type": "number",
        "format": "float64"
       },
       "failed": {
        "description": "Summary of failed capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "failedPercentage": {
        "description": "Summary of failed capacity percent for a device type",
        "type": "number",
        "format": "float64"
       },
       "free": {
        "description": "Summary of free capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "freeInitialized": {
        "description": "Summary of free initialized capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "freePercentage": {
        "description": "Summary of free capacity percent for a device type",
        "type": "number",
        "format": "float64"
       },
       "freeUninitialized": {
        "description": "Summary of free uninitialized capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "free_preallocated": {
        "description": "Free pre-allocated capacity",
        "type": "number",
        "format": "float64"
       },
       "freesz": {
        "description": "Summary of freesz capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "hostWrtMb": {
        "description": "Total Written By Hosts in Mb",
        "type": "integer",
        "format": "int64"
       },
       "nonReducibleMb": {
        "description": "Amount of data that could not be reduced",
        "type": "integer",
        "format": "int64"
       },
       "overProvisioning": {
        "description": "Summary of over provisioning ratio for a device type",
        "type": "number",
        "format": "float64"
       },
       "over_allocspace": {
        "description": "Over-provisioning allocated space capacity",
        "type": "number",
        "format": "float64"
       },
       "over_avail": {
        "description": "Over-provisioning available capacity",
        "type": "number",
        "format": "float64"
       },
       "over_freespace": {
        "description": "Over-provisioning free space capacity",
        "type": "number",
        "format": "float64"
       },
       "over_usedspace": {
        "description": "Over-provisioning used space capacity",
        "type": "number",
        "format": "float64"
       },
       "over_vsize": {
        "description": "Over Vsize capacity",
        "type": "number",
        "format": "float64"
       },
       "privatesz_metadata": {
        "description": "Private size metadata capacity",
        "type": "number",
        "format": "float64"
       },
       "privatesz_snp": {
        "description": "Private size snap capacity",
        "type": "number",
        "format": "float64"
       },
       "privatesz_tot": {
        "description": "Private size total capacity",
        "type": "number",
        "format": "float64"
       },
       "privatesz_tot_snp": {
        "description": "Private size total snap capacity",
        "type": "number",
        "format": "float64"
       },
       "reduceSaveMb": {
        "description": "Savings due to data reduction in Mb",
        "type": "integer",
        "format": "int64"
       },
       "reducibleReduceRatio": {
        "description": "Reducible reduction ratio",
        "type": "number",
        "format": "float64"
       },
       "reducibleReduceSaveMb": {
        "description": "Reducible reduction savings in Mb",
        "type": "integer",
        "format": "int64"
       },
       "thinRatio": {
        "description": "Space savings from a fully allocated VV (CPVV) to a thinly allocated VV (TPVV)",
        "type": "number",
        "format": "float64"
       },
       "thinSaveMb": {
        "description": "Thin savings in Mb",
        "type": "integer",
        "format": "int64"
       },
       "total": {
        "description": "Summary of total capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "totalRatio": {
        "description": "Total space savings from a fully allocated VV (CPVV) to a thinly allocated VV (TPVV), including thin, compression, dedup, clone, zero packing, and snaps, in MiB",
        "type": "number",
        "format": "float64"
       },
       "totalSaveMb": {
        "description": "Total space savings, including thin, compression, dedup, clone, zero packing, and snaps, in MiB",
        "type": "integer",
        "format": "int64"
       },
       "total_free": {
        "description": "Total free capacity",
        "type": "number",
        "format": "float64"
       },
       "total_used": {
        "description": "Total used capacity",
        "type": "number",
        "format": "float64"
       },
       "unavailable": {
        "description": "Summary of unavailable capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "unavailablePercentage": {
        "description": "Summary of unavailable capacity percent for a device type",
        "type": "number",
        "format": "float64"
       },
       "unusable": {
        "description": "Unusable capacity",
        "type": "number",
        "format": "float64"
       },
       "usable": {
        "description": "Usable capacity",
        "type": "number",
        "format": "float64"
       },
       "vv_unused": {
        "description": "VV unused capacity",
        "type": "number",
        "format": "float64"
       }
      },
      "description": "System capacity summary for QLC device type",
      "descriptionKey": "SCHEMA_SYSCAPACITY_QLCSUMMARY",
      "title": "*capacity.SystemCapacitySummary"
     },
     "qlcUsableCapacitySummary": {
      "type": "object",
      "properties": {
       "allocated": {
        "type": "object",
        "properties": {
         "cpgsPrivateBase": {
          "type": "object",
          "properties": {
           "reservedVVols": {
            "description": "CPG private reserved vVOL capacity",
            "type": "number",
            "format": "float64"
           },
           "total": {
            "description": "CPG private capacity",
            "type": "number",
            "format": "float64"
           }
          },
          "description": "Allocated CPG private base capacity",
          "descriptionKey": "SCHEMA_SYSCAPACITY_ALLOCATED_CPGS_PRIVATE_BASE",
          "title": "*capacity.Private"
         },
         "cpgsShared": {
          "description": "Allocated CPG shared capacity",
          "type": "number",
          "format": "float64"
         },
         "system": {
          "description": "Allocated system capacity",
          "type": "number",
          "format": "float64"
         },
         "systemAdmin": {
          "description": "Allocated system admin capacity",
          "type": "number",
          "format": "float64"
         },
         "systemInternal": {
          "description": "Allocated system internal capacity",
          "type": "number",
          "format": "float64"
         },
         "systemSpare": {
          "description": "Allocated system spare capacity",
          "type": "number",
          "format": "float64"
         },
         "systemSpareUnused": {
          "description": "Allocated system spare unused capacity",
          "type": "number",
          "format": "float64"
         },
         "systemSpareUsed": {
          "description": "Allocated system spare used capacity",
          "type": "number",
          "format": "float64"
         },
         "unmapped": {
          "description": "Allocated unmapped capacity",
          "type": "number",
          "format": "float64"
         }
        },
        "description": "Summary of allocated capacity for a device type",
        "descriptionKey": "SCHEMA_SYSCAPACITY_SUMMARY_ALLOCATED",
        "title": "*capacity.Allocated"
       },
       "bulkvv_private_snp": {
        "description": "Bulk VVs private snap capacity",
        "type": "number",
        "format": "float64"
       },
       "bulkvvs_admin": {
        "description": "Bulk VVs admin capacity",
        "type": "number",
        "format": "float64"
       },
       "bulkvvs_copy": {
        "description": "Bulk VVs copy capacity",
        "type": "number",
        "format": "float64"
       },
       "bulkvvs_usr": {
        "description": "Bulk VVs user capacity",
        "type": "number",
        "format": "float64"
       },
       "compaction": {
        "description": "Summary of compaction ratio for a device type",
        "type": "number",
        "format": "float64"
       },
       "compressSaveMb": {
        "description": "Savings due to compression in Mb",
        "type": "integer",
        "format": "int64"
       },
       "compression": {
        "description": "Summary of compression ratio for a device type",
        "type": "number",
        "format": "float64"
       },
       "compressratio": {
        "description": "Compression ratio",
        "type": "number",
        "format": "float64"
       },
       "cpgsTotUsedSizeMiB": {
        "description": "Total space used by a CPG",
        "type": "number",
        "format": "float64"
       },
       "cpgsVirtualSizeMiB": {
        "description": "Virtual size of a CPG",
        "type": "number",
        "format": "float64"
       },
       "cpgs_admin_unused": {
        "description": "CPgs admin unused capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_admin_used": {
        "description": "CPGs admin used capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_copy": {
        "description": "CPGs copy capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_copy_used": {
        "description": "CPGs copy used capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_dedupttes": {
        "description": "CPGs dedup TTES capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_metadata": {
        "description": "CPgs metadata capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_svcnt": {
        "description": "CPGs SVcnt capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_tot_count_sd": {
        "description": "CPGs total count SD capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_unused": {
        "description": "CPGs unused capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_usr": {
        "description": "CPGs user capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_usr_used": {
        "description": "CPGs user used capacity",
        "type": "number",
        "format": "float64"
       },
       "dataReduction": {
        "description": "Summary of data reduction ratio for a device type",
        "type": "number",
        "format": "float64"
       },
       "dedup": {
        "description": "Summary of dedup ratio for a device type",
        "type": "number",
        "format": "float64"
       },
       "dedupSaveMb": {
        "description": "Savings due to dedub in Mb",
        "type": "integer",
        "format": "int64"
       },
       "dedupratio": {
        "description": "Dedup ratio",
        "type": "number",
        "format": "float64"
       },
       "failed": {
        "description": "Summary of failed capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "failedPercentage": {
        "description": "Summary of failed capacity percent for a device type",
        "type": "number",
        "format": "float64"
       },
       "free": {
        "description": "Summary of free capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "freeInitialized": {
        "description": "Summary of free initialized capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "freePercentage": {
        "description": "Summary of free capacity percent for a device type",
        "type": "number",
        "format": "float64"
       },
       "freeUninitialized": {
        "description": "Summary of free uninitialized capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "free_preallocated": {
        "description": "Free pre-allocated capacity",
        "type": "number",
        "format": "float64"
       },
       "freesz": {
        "description": "Summary of freesz capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "hostWrtMb": {
        "description": "Total Written By Hosts in Mb",
        "type": "integer",
        "format": "int64"
       },
       "nonReducibleMb": {
        "description": "Amount of data that could not be reduced",
        "type": "integer",
        "format": "int64"
       },
       "overProvisioning": {
        "description": "Summary of over provisioning ratio for a device type",
        "type": "number",
        "format": "float64"
       },
       "over_allocspace": {
        "description": "Over-provisioning allocated space capacity",
        "type": "number",
        "format": "float64"
       },
       "over_avail": {
        "description": "Over-provisioning available capacity",
        "type": "number",
        "format": "float64"
       },
       "over_freespace": {
        "description": "Over-provisioning free space capacity",
        "type": "number",
        "format": "float64"
       },
       "over_usedspace": {
        "description": "Over-provisioning used space capacity",
        "type": "number",
        "format": "float64"
       },
       "over_vsize": {
        "description": "Over Vsize capacity",
        "type": "number",
        "format": "float64"
       },
       "privatesz_metadata": {
        "description": "Private size metadata capacity",
        "type": "number",
        "format": "float64"
       },
       "privatesz_snp": {
        "description": "Private size snap capacity",
        "type": "number",
        "format": "float64"
       },
       "privatesz_tot": {
        "description": "Private size total capacity",
        "type": "number",
        "format": "float64"
       },
       "privatesz_tot_snp": {
        "description": "Private size total snap capacity",
        "type": "number",
        "format": "float64"
       },
       "reduceSaveMb": {
        "description": "Savings due to data reduction in Mb",
        "type": "integer",
        "format": "int64"
       },
       "reducibleReduceRatio": {
        "description": "Reducible reduction ratio",
        "type": "number",
        "format": "float64"
       },
       "reducibleReduceSaveMb": {
        "description": "Reducible reduction savings in Mb",
        "type": "integer",
        "format": "int64"
       },
       "thinRatio": {
        "description": "Space savings from a fully allocated VV (CPVV) to a thinly allocated VV (TPVV)",
        "type": "number",
        "format": "float64"
       },
       "thinSaveMb": {
        "description": "Thin savings in Mb",
        "type": "integer",
        "format": "int64"
       },
       "total": {
        "description": "Summary of total capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "totalRatio": {
        "description": "Total space savings from a fully allocated VV (CPVV) to a thinly allocated VV (TPVV), including thin, compression, dedup, clone, zero packing, and snaps, in MiB",
        "type": "number",
        "format": "float64"
       },
       "totalSaveMb": {
        "description": "Total space savings, including thin, compression, dedup, clone, zero packing, and snaps, in MiB",
        "type": "integer",
        "format": "int64"
       },
       "total_free": {
        "description": "Total free capacity",
        "type": "number",
        "format": "float64"
       },
       "total_used": {
        "description": "Total used capacity",
        "type": "number",
        "format": "float64"
       },
       "unavailable": {
        "description": "Summary of unavailable capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "unavailablePercentage": {
        "description": "Summary of unavailable capacity percent for a device type",
        "type": "number",
        "format": "float64"
       },
       "unusable": {
        "description": "Unusable capacity",
        "type": "number",
        "format": "float64"
       },
       "usable": {
        "description": "Usable capacity",
        "type": "number",
        "format": "float64"
       },
       "vv_unused": {
        "description": "VV unused capacity",
        "type": "number",
        "format": "float64"
       }
      },
      "description": "System usable capacity summary for QLC device type",
      "descriptionKey": "SCHEMA_USABLE_SYSCAPACITY_QLCSUMMARY",
      "title": "*capacity.SystemCapacitySummary"
     },
     "ssdCapacitySummary": {
      "type": "object",
      "properties": {
       "allocated": {
        "type": "object",
        "properties": {
         "cpgsPrivateBase": {
          "type": "object",
          "properties": {
           "reservedVVols": {
            "description": "CPG private reserved vVOL capacity",
            "type": "number",
            "format": "float64"
           },
           "total": {
            "description": "CPG private capacity",
            "type": "number",
            "format": "float64"
           }
          },
          "description": "Allocated CPG private base capacity",
          "descriptionKey": "SCHEMA_SYSCAPACITY_ALLOCATED_CPGS_PRIVATE_BASE",
          "title": "*capacity.Private"
         },
         "cpgsShared": {
          "description": "Allocated CPG shared capacity",
          "type": "number",
          "format": "float64"
         },
         "system": {
          "description": "Allocated system capacity",
          "type": "number",
          "format": "float64"
         },
         "systemAdmin": {
          "description": "Allocated system admin capacity",
          "type": "number",
          "format": "float64"
         },
         "systemInternal": {
          "description": "Allocated system internal capacity",
          "type": "number",
          "format": "float64"
         },
         "systemSpare": {
          "description": "Allocated system spare capacity",
          "type": "number",
          "format": "float64"
         },
         "systemSpareUnused": {
          "description": "Allocated system spare unused capacity",
          "type": "number",
          "format": "float64"
         },
         "systemSpareUsed": {
          "description": "Allocated system spare used capacity",
          "type": "number",
          "format": "float64"
         },
         "unmapped": {
          "description": "Allocated unmapped capacity",
          "type": "number",
          "format": "float64"
         }
        },
        "description": "Summary of allocated capacity for a device type",
        "descriptionKey": "SCHEMA_SYSCAPACITY_SUMMARY_ALLOCATED",
        "title": "*capacity.Allocated"
       },
       "bulkvv_private_snp": {
        "description": "Bulk VVs private snap capacity",
        "type": "number",
        "format": "float64"
       },
       "bulkvvs_admin": {
        "description": "Bulk VVs admin capacity",
        "type": "number",
        "format": "float64"
       },
       "bulkvvs_copy": {
        "description": "Bulk VVs copy capacity",
        "type": "number",
        "format": "float64"
       },
       "bulkvvs_usr": {
        "description": "Bulk VVs user capacity",
        "type": "number",
        "format": "float64"
       },
       "compaction": {
        "description": "Summary of compaction ratio for a device type",
        "type": "number",
        "format": "float64"
       },
       "compressSaveMb": {
        "description": "Savings due to compression in Mb",
        "type": "integer",
        "format": "int64"
       },
       "compression": {
        "description": "Summary of compression ratio for a device type",
        "type": "number",
        "format": "float64"
       },
       "compressratio": {
        "description": "Compression ratio",
        "type": "number",
        "format": "float64"
       },
       "cpgsTotUsedSizeMiB": {
        "description": "Total space used by a CPG",
        "type": "number",
        "format": "float64"
       },
       "cpgsVirtualSizeMiB": {
        "description": "Virtual size of a CPG",
        "type": "number",
        "format": "float64"
       },
       "cpgs_admin_unused": {
        "description": "CPgs admin unused capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_admin_used": {
        "description": "CPGs admin used capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_copy": {
        "description": "CPGs copy capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_copy_used": {
        "description": "CPGs copy used capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_dedupttes": {
        "description": "CPGs dedup TTES capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_metadata": {
        "description": "CPgs metadata capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_svcnt": {
        "description": "CPGs SVcnt capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_tot_count_sd": {
        "description": "CPGs total count SD capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_unused": {
        "description": "CPGs unused capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_usr": {
        "description": "CPGs user capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_usr_used": {
        "description": "CPGs user used capacity",
        "type": "number",
        "format": "float64"
       },
       "dataReduction": {
        "description": "Summary of data reduction ratio for a device type",
        "type": "number",
        "format": "float64"
       },
       "dedup": {
        "description": "Summary of dedup ratio for a device type",
        "type": "number",
        "format": "float64"
       },
       "dedupSaveMb": {
        "description": "Savings due to dedub in Mb",
        "type": "integer",
        "format": "int64"
       },
       "dedupratio": {
        "description": "Dedup ratio",
        "type": "number",
        "format": "float64"
       },
       "failed": {
        "description": "Summary of failed capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "failedPercentage": {
        "description": "Summary of failed capacity percent for a device type",
        "type": "number",
        "format": "float64"
       },
       "free": {
        "description": "Summary of free capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "freeInitialized": {
        "description": "Summary of free initialized capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "freePercentage": {
        "description": "Summary of free capacity percent for a device type",
        "type": "number",
        "format": "float64"
       },
       "freeUninitialized": {
        "description": "Summary of free uninitialized capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "free_preallocated": {
        "description": "Free pre-allocated capacity",
        "type": "number",
        "format": "float64"
       },
       "freesz": {
        "description": "Summary of freesz capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "hostWrtMb": {
        "description": "Total Written By Hosts in Mb",
        "type": "integer",
        "format": "int64"
       },
       "nonReducibleMb": {
        "description": "Amount of data that could not be reduced",
        "type": "integer",
        "format": "int64"
       },
       "overProvisioning": {
        "description": "Summary of over provisioning ratio for a device type",
        "type": "number",
        "format": "float64"
       },
       "over_allocspace": {
        "description": "Over-provisioning allocated space capacity",
        "type": "number",
        "format": "float64"
       },
       "over_avail": {
        "description": "Over-provisioning available capacity",
        "type": "number",
        "format": "float64"
       },
       "over_freespace": {
        "description": "Over-provisioning free space capacity",
        "type": "number",
        "format": "float64"
       },
       "over_usedspace": {
        "description": "Over-provisioning used space capacity",
        "type": "number",
        "format": "float64"
       },
       "over_vsize": {
        "description": "Over Vsize capacity",
        "type": "number",
        "format": "float64"
       },
       "privatesz_metadata": {
        "description": "Private size metadata capacity",
        "type": "number",
        "format": "float64"
       },
       "privatesz_snp": {
        "description": "Private size snap capacity",
        "type": "number",
        "format": "float64"
       },
       "privatesz_tot": {
        "description": "Private size total capacity",
        "type": "number",
        "format": "float64"
       },
       "privatesz_tot_snp": {
        "description": "Private size total snap capacity",
        "type": "number",
        "format": "float64"
       },
       "reduceSaveMb": {
        "description": "Savings due to data reduction in Mb",
        "type": "integer",
        "format": "int64"
       },
       "reducibleReduceRatio": {
        "description": "Reducible reduction ratio",
        "type": "number",
        "format": "float64"
       },
       "reducibleReduceSaveMb": {
        "description": "Reducible reduction savings in Mb",
        "type": "integer",
        "format": "int64"
       },
       "thinRatio": {
        "description": "Space savings from a fully allocated VV (CPVV) to a thinly allocated VV (TPVV)",
        "type": "number",
        "format": "float64"
       },
       "thinSaveMb": {
        "description": "Thin savings in Mb",
        "type": "integer",
        "format": "int64"
       },
       "total": {
        "description": "Summary of total capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "totalRatio": {
        "description": "Total space savings from a fully allocated VV (CPVV) to a thinly allocated VV (TPVV), including thin, compression, dedup, clone, zero packing, and snaps, in MiB",
        "type": "number",
        "format": "float64"
       },
       "totalSaveMb": {
        "description": "Total space savings, including thin, compression, dedup, clone, zero packing, and snaps, in MiB",
        "type": "integer",
        "format": "int64"
       },
       "total_free": {
        "description": "Total free capacity",
        "type": "number",
        "format": "float64"
       },
       "total_used": {
        "description": "Total used capacity",
        "type": "number",
        "format": "float64"
       },
       "unavailable": {
        "description": "Summary of unavailable capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "unavailablePercentage": {
        "description": "Summary of unavailable capacity percent for a device type",
        "type": "number",
        "format": "float64"
       },
       "unusable": {
        "description": "Unusable capacity",
        "type": "number",
        "format": "float64"
       },
       "usable": {
        "description": "Usable capacity",
        "type": "number",
        "format": "float64"
       },
       "vv_unused": {
        "description": "VV unused capacity",
        "type": "number",
        "format": "float64"
       }
      },
      "description": "System capacity summary for SSD device type",
      "descriptionKey": "SCHEMA_SYSCAPACITY_SSDSUMMARY",
      "title": "*capacity.SystemCapacitySummary"
     },
     "ssdUsableCapacitySummary": {
      "type": "object",
      "properties": {
       "allocated": {
        "type": "object",
        "properties": {
         "cpgsPrivateBase": {
          "type": "object",
          "properties": {
           "reservedVVols": {
            "description": "CPG private reserved vVOL capacity",
            "type": "number",
            "format": "float64"
           },
           "total": {
            "description": "CPG private capacity",
            "type": "number",
            "format": "float64"
           }
          },
          "description": "Allocated CPG private base capacity",
          "descriptionKey": "SCHEMA_SYSCAPACITY_ALLOCATED_CPGS_PRIVATE_BASE",
          "title": "*capacity.Private"
         },
         "cpgsShared": {
          "description": "Allocated CPG shared capacity",
          "type": "number",
          "format": "float64"
         },
         "system": {
          "description": "Allocated system capacity",
          "type": "number",
          "format": "float64"
         },
         "systemAdmin": {
          "description": "Allocated system admin capacity",
          "type": "number",
          "format": "float64"
         },
         "systemInternal": {
          "description": "Allocated system internal capacity",
          "type": "number",
          "format": "float64"
         },
         "systemSpare": {
          "description": "Allocated system spare capacity",
          "type": "number",
          "format": "float64"
         },
         "systemSpareUnused": {
          "description": "Allocated system spare unused capacity",
          "type": "number",
          "format": "float64"
         },
         "systemSpareUsed": {
          "description": "Allocated system spare used capacity",
          "type": "number",
          "format": "float64"
         },
         "unmapped": {
          "description": "Allocated unmapped capacity",
          "type": "number",
          "format": "float64"
         }
        },
        "description": "Summary of allocated capacity for a device type",
        "descriptionKey": "SCHEMA_SYSCAPACITY_SUMMARY_ALLOCATED",
        "title": "*capacity.Allocated"
       },
       "bulkvv_private_snp": {
        "description": "Bulk VVs private snap capacity",
        "type": "number",
        "format": "float64"
       },
       "bulkvvs_admin": {
        "description": "Bulk VVs admin capacity",
        "type": "number",
        "format": "float64"
       },
       "bulkvvs_copy": {
        "description": "Bulk VVs copy capacity",
        "type": "number",
        "format": "float64"
       },
       "bulkvvs_usr": {
        "description": "Bulk VVs user capacity",
        "type": "number",
        "format": "float64"
       },
       "compaction": {
        "description": "Summary of compaction ratio for a device type",
        "type": "number",
        "format": "float64"
       },
       "compressSaveMb": {
        "description": "Savings due to compression in Mb",
        "type": "integer",
        "format": "int64"
       },
       "compression": {
        "description": "Summary of compression ratio for a device type",
        "type": "number",
        "format": "float64"
       },
       "compressratio": {
        "description": "Compression ratio",
        "type": "number",
        "format": "float64"
       },
       "cpgsTotUsedSizeMiB": {
        "description": "Total space used by a CPG",
        "type": "number",
        "format": "float64"
       },
       "cpgsVirtualSizeMiB": {
        "description": "Virtual size of a CPG",
        "type": "number",
        "format": "float64"
       },
       "cpgs_admin_unused": {
        "description": "CPgs admin unused capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_admin_used": {
        "description": "CPGs admin used capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_copy": {
        "description": "CPGs copy capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_copy_used": {
        "description": "CPGs copy used capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_dedupttes": {
        "description": "CPGs dedup TTES capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_metadata": {
        "description": "CPgs metadata capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_svcnt": {
        "description": "CPGs SVcnt capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_tot_count_sd": {
        "description": "CPGs total count SD capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_unused": {
        "description": "CPGs unused capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_usr": {
        "description": "CPGs user capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_usr_used": {
        "description": "CPGs user used capacity",
        "type": "number",
        "format": "float64"
       },
       "dataReduction": {
        "description": "Summary of data reduction ratio for a device type",
        "type": "number",
        "format": "float64"
       },
       "dedup": {
        "description": "Summary of dedup ratio for a device type",
        "type": "number",
        "format": "float64"
       },
       "dedupSaveMb": {
        "description": "Savings due to dedub in Mb",
        "type": "integer",
        "format": "int64"
       },
       "dedupratio": {
        "description": "Dedup ratio",
        "type": "number",
        "format": "float64"
       },
       "failed": {
        "description": "Summary of failed capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "failedPercentage": {
        "description": "Summary of failed capacity percent for a device type",
        "type": "number",
        "format": "float64"
       },
       "free": {
        "description": "Summary of free capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "freeInitialized": {
        "description": "Summary of free initialized capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "freePercentage": {
        "description": "Summary of free capacity percent for a device type",
        "type": "number",
        "format": "float64"
       },
       "freeUninitialized": {
        "description": "Summary of free uninitialized capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "free_preallocated": {
        "description": "Free pre-allocated capacity",
        "type": "number",
        "format": "float64"
       },
       "freesz": {
        "description": "Summary of freesz capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "hostWrtMb": {
        "description": "Total Written By Hosts in Mb",
        "type": "integer",
        "format": "int64"
       },
       "nonReducibleMb": {
        "description": "Amount of data that could not be reduced",
        "type": "integer",
        "format": "int64"
       },
       "overProvisioning": {
        "description": "Summary of over provisioning ratio for a device type",
        "type": "number",
        "format": "float64"
       },
       "over_allocspace": {
        "description": "Over-provisioning allocated space capacity",
        "type": "number",
        "format": "float64"
       },
       "over_avail": {
        "description": "Over-provisioning available capacity",
        "type": "number",
        "format": "float64"
       },
       "over_freespace": {
        "description": "Over-provisioning free space capacity",
        "type": "number",
        "format": "float64"
       },
       "over_usedspace": {
        "description": "Over-provisioning used space capacity",
        "type": "number",
        "format": "float64"
       },
       "over_vsize": {
        "description": "Over Vsize capacity",
        "type": "number",
        "format": "float64"
       },
       "privatesz_metadata": {
        "description": "Private size metadata capacity",
        "type": "number",
        "format": "float64"
       },
       "privatesz_snp": {
        "description": "Private size snap capacity",
        "type": "number",
        "format": "float64"
       },
       "privatesz_tot": {
        "description": "Private size total capacity",
        "type": "number",
        "format": "float64"
       },
       "privatesz_tot_snp": {
        "description": "Private size total snap capacity",
        "type": "number",
        "format": "float64"
       },
       "reduceSaveMb": {
        "description": "Savings due to data reduction in Mb",
        "type": "integer",
        "format": "int64"
       },
       "reducibleReduceRatio": {
        "description": "Reducible reduction ratio",
        "type": "number",
        "format": "float64"
       },
       "reducibleReduceSaveMb": {
        "description": "Reducible reduction savings in Mb",
        "type": "integer",
        "format": "int64"
       },
       "thinRatio": {
        "description": "Space savings from a fully allocated VV (CPVV) to a thinly allocated VV (TPVV)",
        "type": "number",
        "format": "float64"
       },
       "thinSaveMb": {
        "description": "Thin savings in Mb",
        "type": "integer",
        "format": "int64"
       },
       "total": {
        "description": "Summary of total capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "totalRatio": {
        "description": "Total space savings from a fully allocated VV (CPVV) to a thinly allocated VV (TPVV), including thin, compression, dedup, clone, zero packing, and snaps, in MiB",
        "type": "number",
        "format": "float64"
       },
       "totalSaveMb": {
        "description": "Total space savings, including thin, compression, dedup, clone, zero packing, and snaps, in MiB",
        "type": "integer",
        "format": "int64"
       },
       "total_free": {
        "description": "Total free capacity",
        "type": "number",
        "format": "float64"
       },
       "total_used": {
        "description": "Total used capacity",
        "type": "number",
        "format": "float64"
       },
       "unavailable": {
        "description": "Summary of unavailable capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "unavailablePercentage": {
        "description": "Summary of unavailable capacity percent for a device type",
        "type": "number",
        "format": "float64"
       },
       "unusable": {
        "description": "Unusable capacity",
        "type": "number",
        "format": "float64"
       },
       "usable": {
        "description": "Usable capacity",
        "type": "number",
        "format": "float64"
       },
       "vv_unused": {
        "description": "VV unused capacity",
        "type": "number",
        "format": "float64"
       }
      },
      "description": "System usable capacity summary for SSD device type",
      "descriptionKey": "SCHEMA_USABLE_SYSCAPACITY_SSDSUMMARY",
      "title": "*capacity.SystemCapacitySummary"
     },
     "systemWWN": {
      "description": "The WWN of the system pertaining to the system capacity resource",
      "type": "string"
     },
     "uid": {
      "description": "The uid of the system pertaining to the system capacity resource",
      "type": "string"
     },
     "uri": {
      "description": "URI of the system capacity resource",
      "type": "string"
     },
     "usableCapacitySummary": {
      "type": "object",
      "properties": {
       "allocated": {
        "type": "object",
        "properties": {
         "cpgsPrivateBase": {
          "type": "object",
          "properties": {
           "reservedVVols": {
            "description": "CPG private reserved vVOL capacity",
            "type": "number",
            "format": "float64"
           },
           "total": {
            "description": "CPG private capacity",
            "type": "number",
            "format": "float64"
           }
          },
          "description": "Allocated CPG private base capacity",
          "descriptionKey": "SCHEMA_SYSCAPACITY_ALLOCATED_CPGS_PRIVATE_BASE",
          "title": "*capacity.Private"
         },
         "cpgsShared": {
          "description": "Allocated CPG shared capacity",
          "type": "number",
          "format": "float64"
         },
         "system": {
          "description": "Allocated system capacity",
          "type": "number",
          "format": "float64"
         },
         "systemAdmin": {
          "description": "Allocated system admin capacity",
          "type": "number",
          "format": "float64"
         },
         "systemInternal": {
          "description": "Allocated system internal capacity",
          "type": "number",
          "format": "float64"
         },
         "systemSpare": {
          "description": "Allocated system spare capacity",
          "type": "number",
          "format": "float64"
         },
         "systemSpareUnused": {
          "description": "Allocated system spare unused capacity",
          "type": "number",
          "format": "float64"
         },
         "systemSpareUsed": {
          "description": "Allocated system spare used capacity",
          "type": "number",
          "format": "float64"
         },
         "unmapped": {
          "description": "Allocated unmapped capacity",
          "type": "number",
          "format": "float64"
         }
        },
        "description": "Summary of allocated capacity for a device type",
        "descriptionKey": "SCHEMA_SYSCAPACITY_SUMMARY_ALLOCATED",
        "title": "*capacity.Allocated"
       },
       "bulkvv_private_snp": {
        "description": "Bulk VVs private snap capacity",
        "type": "number",
        "format": "float64"
       },
       "bulkvvs_admin": {
        "description": "Bulk VVs admin capacity",
        "type": "number",
        "format": "float64"
       },
       "bulkvvs_copy": {
        "description": "Bulk VVs copy capacity",
        "type": "number",
        "format": "float64"
       },
       "bulkvvs_usr": {
        "description": "Bulk VVs user capacity",
        "type": "number",
        "format": "float64"
       },
       "compaction": {
        "description": "Summary of compaction ratio for a device type",
        "type": "number",
        "format": "float64"
       },
       "compressSaveMb": {
        "description": "Savings due to compression in Mb",
        "type": "integer",
        "format": "int64"
       },
       "compression": {
        "description": "Summary of compression ratio for a device type",
        "type": "number",
        "format": "float64"
       },
       "compressratio": {
        "description": "Compression ratio",
        "type": "number",
        "format": "float64"
       },
       "cpgsTotUsedSizeMiB": {
        "description": "Total space used by a CPG",
        "type": "number",
        "format": "float64"
       },
       "cpgsVirtualSizeMiB": {
        "description": "Virtual size of a CPG",
        "type": "number",
        "format": "float64"
       },
       "cpgs_admin_unused": {
        "description": "CPgs admin unused capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_admin_used": {
        "description": "CPGs admin used capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_copy": {
        "description": "CPGs copy capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_copy_used": {
        "description": "CPGs copy used capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_dedupttes": {
        "description": "CPGs dedup TTES capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_metadata": {
        "description": "CPgs metadata capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_svcnt": {
        "description": "CPGs SVcnt capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_tot_count_sd": {
        "description": "CPGs total count SD capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_unused": {
        "description": "CPGs unused capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_usr": {
        "description": "CPGs user capacity",
        "type": "number",
        "format": "float64"
       },
       "cpgs_usr_used": {
        "description": "CPGs user used capacity",
        "type": "number",
        "format": "float64"
       },
       "dataReduction": {
        "description": "Summary of data reduction ratio for a device type",
        "type": "number",
        "format": "float64"
       },
       "dedup": {
        "description": "Summary of dedup ratio for a device type",
        "type": "number",
        "format": "float64"
       },
       "dedupSaveMb": {
        "description": "Savings due to dedub in Mb",
        "type": "integer",
        "format": "int64"
       },
       "dedupratio": {
        "description": "Dedup ratio",
        "type": "number",
        "format": "float64"
       },
       "failed": {
        "description": "Summary of failed capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "failedPercentage": {
        "description": "Summary of failed capacity percent for a device type",
        "type": "number",
        "format": "float64"
       },
       "free": {
        "description": "Summary of free capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "freeInitialized": {
        "description": "Summary of free initialized capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "freePercentage": {
        "description": "Summary of free capacity percent for a device type",
        "type": "number",
        "format": "float64"
       },
       "freeUninitialized": {
        "description": "Summary of free uninitialized capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "free_preallocated": {
        "description": "Free pre-allocated capacity",
        "type": "number",
        "format": "float64"
       },
       "freesz": {
        "description": "Summary of freesz capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "hostWrtMb": {
        "description": "Total Written By Hosts in Mb",
        "type": "integer",
        "format": "int64"
       },
       "nonReducibleMb": {
        "description": "Amount of data that could not be reduced",
        "type": "integer",
        "format": "int64"
       },
       "overProvisioning": {
        "description": "Summary of over provisioning ratio for a device type",
        "type": "number",
        "format": "float64"
       },
       "over_allocspace": {
        "description": "Over-provisioning allocated space capacity",
        "type": "number",
        "format": "float64"
       },
       "over_avail": {
        "description": "Over-provisioning available capacity",
        "type": "number",
        "format": "float64"
       },
       "over_freespace": {
        "description": "Over-provisioning free space capacity",
        "type": "number",
        "format": "float64"
       },
       "over_usedspace": {
        "description": "Over-provisioning used space capacity",
        "type": "number",
        "format": "float64"
       },
       "over_vsize": {
        "description": "Over Vsize capacity",
        "type": "number",
        "format": "float64"
       },
       "privatesz_metadata": {
        "description": "Private size metadata capacity",
        "type": "number",
        "format": "float64"
       },
       "privatesz_snp": {
        "description": "Private size snap capacity",
        "type": "number",
        "format": "float64"
       },
       "privatesz_tot": {
        "description": "Private size total capacity",
        "type": "number",
        "format": "float64"
       },
       "privatesz_tot_snp": {
        "description": "Private size total snap capacity",
        "type": "number",
        "format": "float64"
       },
       "reduceSaveMb": {
        "description": "Savings due to data reduction in Mb",
        "type": "integer",
        "format": "int64"
       },
       "reducibleReduceRatio": {
        "description": "Reducible reduction ratio",
        "type": "number",
        "format": "float64"
       },
       "reducibleReduceSaveMb": {
        "description": "Reducible reduction savings in Mb",
        "type": "integer",
        "format": "int64"
       },
       "thinRatio": {
        "description": "Space savings from a fully allocated VV (CPVV) to a thinly allocated VV (TPVV)",
        "type": "number",
        "format": "float64"
       },
       "thinSaveMb": {
        "description": "Thin savings in Mb",
        "type": "integer",
        "format": "int64"
       },
       "total": {
        "description": "Summary of total capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "totalRatio": {
        "description": "Total space savings from a fully allocated VV (CPVV) to a thinly allocated VV (TPVV), including thin, compression, dedup, clone, zero packing, and snaps, in MiB",
        "type": "number",
        "format": "float64"
       },
       "totalSaveMb": {
        "description": "Total space savings, including thin, compression, dedup, clone, zero packing, and snaps, in MiB",
        "type": "integer",
        "format": "int64"
       },
       "total_free": {
        "description": "Total free capacity",
        "type": "number",
        "format": "float64"
       },
       "total_used": {
        "description": "Total used capacity",
        "type": "number",
        "format": "float64"
       },
       "unavailable": {
        "description": "Summary of unavailable capacity for a device type",
        "type": "number",
        "format": "float64"
       },
       "unavailablePercentage": {
        "description": "Summary of unavailable capacity percent for a device type",
        "type": "number",
        "format": "float64"
       },
       "unusable": {
        "description": "Unusable capacity",
        "type": "number",
        "format": "float64"
       },
       "usable": {
        "description": "Usable capacity",
        "type": "number",
        "format": "float64"
       },
       "vv_unused": {
        "description": "VV unused capacity",
        "type": "number",
        "format": "float64"
       }
      },
      "description": "System usable capacity summary",
      "descriptionKey": "SCHEMA_USABLE_SYSCAPACITY_SUMMARY",
      "title": "*capacity.SystemCapacitySummary"
     }
    }
   },
   "certificates.Certificate": {
    "type": "object",
    "properties": {
     "commonname": {
      "description": "The certificate's common name",
      "type": "string"
     },
     "displayname": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Name to be used for display purposes",
      "descriptionKey": "SCHEMA_DISPLAYNAME",
      "title": "*utils.I18nValue"
     },
     "domain": {
      "description": "Domain that the resource belongs to",
      "type": "string"
     },
     "enddate": {
      "type": "object",
      "properties": {
       "ms": {
        "description": "Epoch time in milliseconds",
        "type": "integer",
        "format": "int64"
       },
       "tz": {
        "description": "Time zone name",
        "type": "string"
       }
      },
      "description": "The certificate's end date",
      "descriptionKey": "SCHEMA_CERTIFICATE_ENDDATE",
      "title": "*shared.Calendar"
     },
     "fingerprint": {
      "description": "The certificate's  fingerprint",
      "type": "string"
     },
     "issuer": {
      "description": "Issuer of the certificate",
      "type": "string"
     },
     "pem": {
      "description": "The certificate's PEM encoded string",
      "type": "string"
     },
     "serial": {
      "description": "The certificate's serial number",
      "type": "string"
     },
     "service": {
      "description": "The certificate's service name",
      "type": "string"
     },
     "signaturetype": {
      "description": "The certificate's signature type",
      "type": "string"
     },
     "startdate": {
      "type": "object",
      "properties": {
       "ms": {
        "description": "Epoch time in milliseconds",
        "type": "integer",
        "format": "int64"
       },
       "tz": {
        "description": "Time zone name",
        "type": "string"
       }
      },
      "description": "The certificate's start date",
      "descriptionKey": "SCHEMA_CERTIFICATE_STARTDATE",
      "title": "*shared.Calendar"
     },
     "subject": {
      "description": "The certificate's subject name",
      "type": "string"
     },
     "subjectaltname": {
      "description": "The certificate's subject alternative name",
      "type": "string"
     },
     "systemWWN": {
      "description": "WWN of the array",
      "type": "string"
     },
     "taskTags": {
      "description": "A list of tags used to filter tasks from resource updates",
      "type": "string"
     },
     "text": {
      "description": "The certificate's detailed textual description",
      "type": "string"
     },
     "type": {
      "description": "The certificate's type",
      "type": "string"
     },
     "uid": {
      "description": "Unique Identifier of the resource",
      "type": "string"
     },
     "uri": {
      "description": "URI of the resource",
      "type": "string"
     },
     "vcguid": {
      "description": "The GUID for a VASA related certificate",
      "type": "string"
     }
    }
   },
   "certificates.CreateCertificate": {
    "type": "object",
    "required": [
     "certificate",
     "authorityChain"
    ],
    "properties": {
     "authorityChain": {
      "description": "The authority chain for the new certificate.  Only applies if type is import",
      "type": "string"
     },
     "certificate": {
      "description": "The certificate that results from the Certificate Signing Request (CSR).  Only applies if type is import",
      "type": "string"
     },
     "commonName": {
      "description": "CommonName for the certificate.  Is required for selfsigned and csr types",
      "type": "string"
     },
     "country": {
      "description": "Country for the certificate",
      "type": "string"
     },
     "days": {
      "description": "Number of days valid for the certificate.  Only applies if type is selfsigned",
      "type": "integer",
      "format": "int"
     },
     "keyLength": {
      "description": "Key length for the certificate",
      "type": "integer",
      "format": "int"
     },
     "locality": {
      "description": "Locality for the certificate",
      "type": "string"
     },
     "organization": {
      "description": "Organization for the certificate",
      "type": "string"
     },
     "organizationUnit": {
      "description": "Organization Unit for the certificate",
      "type": "string"
     },
     "province": {
      "description": "Province for the certificate",
      "type": "string"
     },
     "service": {
      "description": "Name of service the certificate is for",
      "type": "string"
     },
     "subjectAlt": {
      "description": "Subject Alternative Name for the certificate",
      "type": "string"
     },
     "type": {
      "description": "Type of certificate to create; may be selfsigned, csr, import, ekm-server, or ekm-client",
      "type": "string"
     }
    },
    "example": {
     "type": "selfsigned",
     "service": "vasa",
     "keyLength": 2048,
     "commonName": "TestArray",
     "subjectAlt": "DNS:TestArray,IP:10.1.1.10",
     "organizationUnit": "Unit",
     "organization": "My Company",
     "days": 365,
     "locality": "My City",
     "province": "Colorado",
     "country": "US"
    }
   },
   "certificates.FinishCsr": {
    "type": "object",
    "required": [
     "certificate",
     "authorityChain"
    ],
    "properties": {
     "authorityChain": {
      "description": "The authority chain for the new certificate.  Only applies if type is import",
      "type": "string"
     },
     "certificate": {
      "description": "The certificate that results from the Certificate Signing Request (CSR).  Only applies if type is import",
      "type": "string"
     },
     "vcguid": {
      "description": "The GUID of the vCenter associated with a vasa certificate.  Only for vasa certificates",
      "type": "string"
     }
    },
    "example": {
     "authorityChain": "-----BEGIN CERTIFICATE-----\nMIIEOTCCAyGgAwIBAgIJANhlBLqBxkWPMA0GCSqGSIb3DQEBCwUAMIGnMQswCQYD\nVQQDDAJDQTEXMBUGCgmSJomT8ixkARkWB3ZzcGhlcmUxFTATBgoJkiaJk/IsZAEZ\nFgVsb2NhbDELMAkGA1UEBhMCVVMxEzARBgNVBAgMCkNhbGlmb3JuaWExKTAnBgNV\nBAoMIGMzLXZtNzgwLmN4by5zdG9yYWdlLmhwZWNvcnAubmV0MRswGQYDVQQLDBJW\nTXdhcmUgRW5naW5lZXJpbmcwHhcNMjEwNDMwMjMzMjI0WhcNMzEwNDI4MjMzMjI0\nWjCBpzELMAkGA1UEAwwCQ0ExFzAVBgoJkiaJk/IsZAEZFgd2c3BoZXJlMRUwEwYK\nCZImiZPyLGQBGRYFbG9jYWwxCzAJBgNVBAYTAlVTMRMwEQYDVQQIDApDYWxpZm9y\nbmlhMSkwJwYDVQQKDCBjMy12bTc4MC5jeG8uc3RvcmFnZS5ocGVjb3JwLm5ldDEb\nMBkGA1UECwwSVk13YXJlIEVuZ2luZWVyaW5nMIIBIjANBgkqhkiG9w0BAQEFAAOC\nAQ8AMIIBCgKCAQEAoRT+ZHZ8aVTM6qxHUIhg0E0I1lIkJZkY3JVJFGP3bIy5/bmr\nlFjKCJ5Ji9gXplWeOSjSJw2kbPU70K0Wj5EPS/fwzdSqXOA2GoK9fj+1sJMVyq66\nzL9ljomSRmT2iwnoaoQGkhVzstxn7LKF/IMhZURBNrA/Iw7TrAWeoOHvTaJJ4sUc\nbwSKL/9OQZppIHrQBi1Izu+LesvQEJ3DM2dBatxq7LXsdmEvS6diI+ubFvXXeicF\njeY4L6PoaByljCeZn1nK2pX6qy+iVF+4j1iJv8xiTKJByKKp6BFVGdswjJ5xVEP1\nLlmHT9OIglnII3l5eZx/zVq+YHINhUv0fsvAPQIDAQABo2YwZDAdBgNVHQ4EFgQU\nyvuKLUexOt28BzCpodi81+lHnXwwHwYDVR0RBBgwFoEOZW1haWxAYWNtZS5jb22H\nBH8AAAEwDgYDVR0PAQH/BAQDAgEGMBIGA1UdEwEB/wQIMAYBAf8CAQAwDQYJKoZI\nhvcNAQELBQADggEBAElsPrh39eO5/QviqVjTofJ2480YlFJIMwjc2oP9XhKszmyg\nNVuTd1gYhRYEtcVnJ8+lXH5xSgYp5Uc5dUShMv4gx98H6CFbTXYL21L03wl1oLfh\ncqd+HspFOCrqwJXhdX7+WxWNJ3EQbrw1d9kDg3u8r06MJlr99MJihDqjou7Bp9rv\n4JOrlKBA0Na5WYMd/u0wGuutMVH04enY8wuXclulVyA9/M2xdAJfx9beOP996ivx\n+ShEZ939UR4FmIwU7fy/eK5PLdJc8ObT9gp8cpiEwi2fc3dGsbrIDlAy3Y91XPSL\nThisIsNotAValidCertificate=\n-----END CERTIFICATE-----\n",
     "certificate": "-----BEGIN CERTIFICATE-----\nMIIEHDCCAwSgAwIBAgIJAMcr0W1PWbz8MA0GCSqGSIb3DQEBCwUAMIGpMQ0wCwYD\nVQQDDARWTUNBMRcwFQYKCZImiZPyLGQBGRYHdnNwaGVyZTEVMBMGCgmSJomT8ixk\nARkWBWxvY2FsMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEpMCcG\nA1UECgwgYzMtdm03ODAuY3hvLnN0b3JhZ2UuaHBlY29ycC5uZXQxGzAZBgNVBAsM\nElZNd2FyZSBFbmdpbmVlcmluZzAeFw0yMzA1MDcyMDI3NDhaFw0zMzA1MDQyMDI3\nNDhaMIGpMQ0wCwYDVQQDDARWTUNBMRcwFQYKCZImiZPyLGQBGRYHdnNwaGVyZTEV\nMBMGCgmSJomT8ixkARkWBWxvY2FsMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2Fs\naWZvcm5pYTEpMCcGA1UECgwgYzMtdm03ODAuY3hvLnN0b3JhZ2UuaHBlY29ycC5u\nZXQxGzAZBgNVBAsMElZNd2FyZSBFbmdpbmVlcmluZzCCASIwDQYJKoZIhvcNAQEB\nBQADggEPADCCAQoCggEBALMQJGGuhe3qh+P33+F+SVVoKXEDgELhZxr6gI1VdLVl\nwTwg80YxpjP6gMBWXxKN3SM2N2U0bzlUGf6FxkOwAM9tQnUIdlrIa0xKWk4cJWZv\n9EuSSlzj49Olmaxin9e/el6PKU+nHzbwZr0YogIueybg8rxdOdTZy76o9k++RDnY\n0HkpIunoSyeBFveN0xztRhrB4jqZDzn36/K5OkNgcuqPasWeil7RgJNyTbwtnKM1\n79IwI72nRo1tqp5ndrPRFytkg9O4KUjgj42ZJICf4whBxe+TYzxe1+/qeGk9enbj\nOAQJh9vvlil/NNAuaZvTGrn/+GVgF1OMMxfkgMo/t/kCAwEAAaNFMEMwHQYDVR0O\nBBYEFNjw5NPbAKOwsL1rfpMcxBSCD9vNMA4GA1UdDwEB/wQEAwIBBjASBgNVHRMB\nAf8ECDAGAQH/AgEAMA0GCSqGSIb3DQEBCwUAA4IBAQBhmbLYID9xXvnjG8FPEhJn\nzVmzyGtmPOHzYyo906qZcmGURcfhsUHujX7bDL25qBv07WgzHJM3f4LdmpkNEYV3\n88UFzjGQA/wY2mBnjSDwfD6M/EICreH5f4aDA9xF/DtFsVVannm6jiLxFx22sjyR\nFG9cLuO/3xzmQjPwHdcgvs6um0iHfaXjiza+W2Kq92LSEyB9dQZUDm1Bzft1VPxh\nLhKOcqNuTgNqVCN6nMm+GhFh7A6v7n4oi65PX16jVo8kWFsV035CKFlJs/xg5OiJ\nThisIsNotAValidCertificate=\n-----END CERTIFICATE-----\n"
    }
   },
   "controlsecurity.DhHmacChap": {
    "type": "object",
    "properties": {
     "hmacNum": {
      "description": "HMAC function to use for key transformation. Expected values are NONE | SHA256 | SHA384 | SHA512",
      "type": "string"
     },
     "keyLength": {
      "description": "Length of the resulting key. Expected values are 32 | 48 | 64",
      "type": "integer",
      "format": "int"
     },
     "nqn": {
      "description": "Host/Target NQN to use for key transformation",
      "type": "string"
     },
     "secret": {
      "description": "Optional secret (in hexadecimal characters) to be used to initialize the key",
      "type": "string"
     }
    }
   },
   "cpg.Bulk_delete_cpgs": {
    "type": "BULK_DELETE",
    "fullType": "httputils.BulkDeleteResource",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: BULK_DELETE",
      "type": "string"
     },
     "parameters": {
      "type": "object",
      "properties": {
       "uids": {
        "description": "UIDs for bulk action",
        "type": "array",
        "items": {
         "description": "",
         "type": "string"
        }
       }
      },
      "description": "Parameters for a custom action",
      "descriptionKey": "SCHEMA_CUSTOM_ACTION_PROPS"
     }
    },
    "description": "Used to delete multiple CPGS in one call",
    "descriptionKey": "BULK_DELETE_CPGS_DESCRIPTION",
    "title": "BULK_DELETE"
   },
   "cpg.Cpg": {
    "type": "object",
    "properties": {
     "alert": {
      "type": "object",
      "properties": {
       "fail": {
        "description": "Alert when there is a growth failure for admin/data space",
        "type": "string"
       },
       "limit": {
        "description": "Alert corresponding to limit for admin/data space",
        "type": "string"
       },
       "warn": {
        "description": "Alert corresponding to warning for admin/data space",
        "type": "string"
       },
       "warnPercent": {
        "description": "Alert corresponding to warning percentage for admin/data space",
        "type": "number",
        "format": "float32"
       }
      },
      "description": "Information for posted alerts",
      "descriptionKey": "SCHEMA_CPG_ALERT",
      "title": "*cpg.CpgAlert"
     },
     "allocGroupId": {
      "description": "Allocation group id",
      "type": "integer",
      "format": "int64"
     },
     "allocationSettings": {
      "type": "object",
      "properties": {
       "HA": {
        "type": "object",
        "properties": {
         "args": {
          "description": "Array of optional parameters to be used when formatting the text",
          "type": "array",
          "items": {
           "type": "AnyType"
          }
         },
         "default": {
          "description": "Text in the default language",
          "type": "string"
         },
         "key": {
          "description": "Key of the message in the i18n catalog",
          "type": "string"
         }
        },
        "description": "Current High Availability setting",
        "descriptionKey": "SCHEMA_LDALLOC_CURHA",
        "title": "*utils.I18nValue"
       },
       "RAIDType": {
        "description": "RAID type",
        "type": "string"
       },
       "deviceSpeed": {
        "type": "object",
        "properties": {
         "text": {
          "description": "Textual representation of the device speed",
          "type": "string"
         },
         "value": {
          "description": "Numeric value of the device speed",
          "type": "integer",
          "format": "int32"
         }
        },
        "description": "Device speed",
        "descriptionKey": "SCHEMA_LDALLOC_DEVSPEED",
        "title": "DeviceSpeed"
       },
       "deviceType": {
        "description": "Device type",
        "type": "string"
       },
       "diskFilter": {
        "description": "Disk filter",
        "type": "string"
       },
       "requestedHA": {
        "type": "object",
        "properties": {
         "args": {
          "description": "Array of optional parameters to be used when formatting the text",
          "type": "array",
          "items": {
           "type": "AnyType"
          }
         },
         "default": {
          "description": "Text in the default language",
          "type": "string"
         },
         "key": {
          "description": "Key of the message in the i18n catalog",
          "type": "string"
         }
        },
        "description": "Requested High Availability setting",
        "descriptionKey": "SCHEMA_LDALLOC_REQHA",
        "title": "*utils.I18nValue"
       },
       "setSize": {
        "description": "Set size",
        "type": "string"
       },
       "stepSize": {
        "description": "Step size",
        "type": "integer",
        "format": "int64"
       }
      },
      "description": "Device allocation settings such as RAID and device type information",
      "descriptionKey": "SCHEMA_CPG_ALLOCATION_SETTINGS",
      "title": "*shared.LdAllocation"
     },
     "aoConfigId": {
      "description": "Numeric ID of the AO config where the CPG is a member",
      "type": "integer",
      "format": "int64"
     },
     "baseSizeMiB": {
      "description": "Number of LD MiB used in base virtual volumes",
      "type": "integer",
      "format": "uint64"
     },
     "baseSizePrivateMiB": {
      "description": "Number of LD MiB private to individual base virtual volumes, not shared by deduplication",
      "type": "integer",
      "format": "uint64"
     },
     "baseSizeRawMiB": {
      "description": "Number of physical (raw) MiB used in base virtual volumes",
      "type": "integer",
      "format": "uint64"
     },
     "compressRatio": {
      "description": "Ratio between the amount of data written to Compressed Volumes and the amount of disk space it is actually using",
      "type": "number",
      "format": "float64"
     },
     "compressSaveMb": {
      "description": "Savings from compression in MiB",
      "type": "integer",
      "format": "int64"
     },
     "cpgDedupVersion": {
      "description": "Version of Dedup that is being used by volumes in the CPG",
      "title": "dedupversion.Enum",
      "enum": [
       "DEDUP_VERSION_1",
       "DEDUP_VERSION_2",
       "DEDUP_VERSION_3",
       "DEDUP_VERSION_UNKNOWN"
      ],
      "type": "string"
     },
     "dataReduceRatio": {
      "description": "Ratio between the amount written to all volumes in the CPG and the amount of disk space used after compression and deduplication",
      "type": "number",
      "format": "float64"
     },
     "dedupCapable": {
      "description": "Indicates whether the CPG supports dedup",
      "type": "boolean"
     },
     "dedupRatio": {
      "description": "Ratio between the amount of data written to Dedup Volumes and the amount that is not duplicated",
      "type": "number",
      "format": "float64"
     },
     "dedupSaveMb": {
      "description": "Savings from dedup in MiB",
      "type": "integer",
      "format": "int64"
     },
     "dedupVersion": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Version of Dedup that is being used by volumes in the CPG",
      "descriptionKey": "SCHEMA_CPG_DEDUP_VERSION",
      "title": "*utils.I18nValue"
     },
     "devtypeSA": {
      "description": "The class of drive used for admin LDs created within this CPG.",
      "title": "DevType.Type",
      "enum": [
       "UNKNOWN",
       "FC",
       "NL",
       "SSD",
       "QLC",
       "ALL",
       "IN_FILTER",
       "UNKNOWN_FC15",
       "VV",
       "UNKNOWN_SSD100",
       "SCM"
      ],
      "type": "int"
     },
     "devtypeSD": {
      "description": "The class of drive used for data LDs created within this CPG.",
      "type": "integer",
      "format": "uint64"
     },
     "displayname": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Name to be used for display purposes",
      "descriptionKey": "SCHEMA_DISPLAYNAME",
      "title": "*utils.I18nValue"
     },
     "domain": {
      "description": "Domain that the resource belongs to",
      "type": "string"
     },
     "freeForAllocationMiB": {
      "description": "Estimated free space for volume allocation (MiB)",
      "type": "integer",
      "format": "uint64"
     },
     "freeSizeMiB": {
      "description": "Number of LD MiB allocated and available in the CPG",
      "type": "integer",
      "format": "uint64"
     },
     "freeSizeRawMiB": {
      "description": "Number of physical (raw) MiB allocated and available in the CPG",
      "type": "integer",
      "format": "uint64"
     },
     "haLevelSA": {
      "description": "The availability of admin LDs created within this CPG.",
      "title": "halevelsa.Enum",
      "enum": [
       "HAJBOD_UNKNOWN",
       "HAJBOD_JBOD",
       "HAJBOD_DISK",
       "HAJBOD_CH"
      ],
      "type": "string"
     },
     "haLevelSD": {
      "description": "The availability of data LDs created within this CPG.",
      "type": "integer",
      "format": "uint64"
     },
     "hostWrtMb": {
      "description": "Host writes in MiB",
      "type": "integer",
      "format": "int64"
     },
     "id": {
      "description": "Numeric ID of the resource",
      "type": "integer",
      "format": "int64"
     },
     "name": {
      "description": "Name of the resource",
      "type": "string"
     },
     "nonReducibleMb": {
      "description": "Amount of data that could not be reduced",
      "type": "integer",
      "format": "int64"
     },
     "numberOfTDVV": {
      "description": "Number of TDVVs using the CPG",
      "type": "integer",
      "format": "uint32"
     },
     "numberOfTPVV": {
      "description": "Number of TPVVs using the CPG",
      "type": "integer",
      "format": "uint32"
     },
     "numberOfUserRC": {
      "description": "Number of VVs used for Remote copy user CPG usage",
      "type": "integer",
      "format": "uint32"
     },
     "overProvRatio": {
      "description": "Ratio between the virtual sizes of all volumes and the amount of used and free disk spaces",
      "type": "number",
      "format": "float64"
     },
     "raid6SszSD": {
      "description": "The setsize of the RAID6 data LDs created within this CPG.",
      "type": "integer",
      "format": "uint64"
     },
     "reduceHostWrtMiB": {
      "description": "Reduced host writes in MiB",
      "type": "number",
      "format": "float64"
     },
     "reduceSaveMb": {
      "description": "Savings from data reduction in MiB",
      "type": "integer",
      "format": "int64"
     },
     "reducibleReduceRatio": {
      "description": "Reducible reduction ratio",
      "type": "number",
      "format": "float64"
     },
     "reducibleReduceSaveMb": {
      "description": "Reducible reduction savings in Mb",
      "type": "integer",
      "format": "int64"
     },
     "saGrow": {
      "type": "object",
      "properties": {
       "args": {
        "description": "The admin/data LD creation arguments used by the CPG when growing new LDs",
        "type": "string"
       },
       "limitMiB": {
        "description": "Limit size in MiB beyond which the admin/data space will not grow",
        "type": "integer",
        "format": "uint64"
       },
       "sizeMiB": {
        "description": "Amount of admin/data LD storage in MiB created on each auto-grow",
        "type": "integer",
        "format": "uint64"
       },
       "warnMiB": {
        "description": "Size in MiB of the admin/data space at which a warning alert is generated",
        "type": "integer",
        "format": "uint64"
       }
      },
      "description": "Snapshot admin space autogrowth information",
      "descriptionKey": "SCHEMA_CPG_GROW_SA",
      "title": "*cpg.CpgGrow"
     },
     "sdGrow": {
      "type": "object",
      "properties": {
       "args": {
        "description": "The admin/data LD creation arguments used by the CPG when growing new LDs",
        "type": "string"
       },
       "limitMiB": {
        "description": "Limit size in MiB beyond which the admin/data space will not grow",
        "type": "integer",
        "format": "uint64"
       },
       "sizeMiB": {
        "description": "Amount of admin/data LD storage in MiB created on each auto-grow",
        "type": "integer",
        "format": "uint64"
       },
       "warnMiB": {
        "description": "Size in MiB of the admin/data space at which a warning alert is generated",
        "type": "integer",
        "format": "uint64"
       }
      },
      "description": "Snapshot data space autogrowth information",
      "descriptionKey": "SCHEMA_CPG_GROW_SD",
      "title": "*cpg.CpgGrow"
     },
     "sharedSizeMiB": {
      "description": "Number of LD MiB shared between volumes via deduplication",
      "type": "integer",
      "format": "uint64"
     },
     "shortName": {
      "description": "Short name of the CPG",
      "type": "string"
     },
     "snapSizePrivateMiB": {
      "description": "Number of LD MiB private to individual snapshot virtual volumes, not shared by deduplication",
      "type": "integer",
      "format": "uint64"
     },
     "snapSizeRawMiB": {
      "description": "Number of physical (raw) MiB used in snapshot virtual volumes",
      "type": "integer",
      "format": "uint64"
     },
     "snapSpaceAdmin": {
      "type": "object",
      "properties": {
       "ldCount": {
        "description": "Number of Logical Disks",
        "type": "integer",
        "format": "uint64"
       },
       "totalMiB": {
        "description": "Total logical capacity (MiB)",
        "type": "integer",
        "format": "uint64"
       },
       "totalRawMiB": {
        "description": "Total physical (raw) capacity (MiB)",
        "type": "integer",
        "format": "uint64"
       },
       "usedMiB": {
        "description": "Used logical capacity (MiB)",
        "type": "integer",
        "format": "uint64"
       },
       "usedRawMiB": {
        "description": "Used physical (raw) capacity (MiB)",
        "type": "integer",
        "format": "uint64"
       }
      },
      "description": "Capacity information for admin snap space",
      "descriptionKey": "SCHEMA_CPG_SNAP_SPACE_ADMIN",
      "title": "*cpg.Space"
     },
     "snapSpaceData": {
      "type": "object",
      "properties": {
       "ldCount": {
        "description": "Number of Logical Disks",
        "type": "integer",
        "format": "uint64"
       },
       "totalMiB": {
        "description": "Total logical capacity (MiB)",
        "type": "integer",
        "format": "uint64"
       },
       "totalRawMiB": {
        "description": "Total physical (raw) capacity (MiB)",
        "type": "integer",
        "format": "uint64"
       },
       "usedMiB": {
        "description": "Used logical capacity (MiB)",
        "type": "integer",
        "format": "uint64"
       },
       "usedRawMiB": {
        "description": "Used physical (raw) capacity (MiB)",
        "type": "integer",
        "format": "uint64"
       }
      },
      "description": "Capacity information for data snap space",
      "descriptionKey": "SCHEMA_CPG_SNAP_SPACE_DATA",
      "title": "*cpg.Space"
     },
     "state": {
      "type": "object",
      "properties": {
       "detailed": {
        "description": "Array of the detailed states of the resource",
        "type": "array",
        "items": {
         "type": "object",
         "properties": {
          "args": {
           "description": "Array of optional parameters to be used when formatting the text",
           "type": "array",
           "items": {
            "type": "AnyType"
           }
          },
          "default": {
           "description": "Text in the default language",
           "type": "string"
          },
          "key": {
           "description": "Key of the message in the i18n catalog",
           "type": "string"
          }
         },
         "title": "utils.I18nValue"
        }
       },
       "overall": {
        "description": "Overall state of the resource",
        "title": "overallstate.Enum",
        "enum": [
         "STATE_UNKNOWN",
         "STATE_NORMAL",
         "STATE_WARNING",
         "STATE_DEGRADED",
         "STATE_FAILED",
         "STATE_NOT_APPLICABLE",
         "STATE_NEW"
        ],
        "type": "string"
       }
      },
      "description": "State of the resource",
      "descriptionKey": "SCHEMA_STATE",
      "title": "shared.ResourceState"
     },
     "systemWWN": {
      "description": "WWN of the array",
      "type": "string"
     },
     "taskTags": {
      "description": "A list of tags used to filter tasks from resource updates",
      "type": "string"
     },
     "thinRatio": {
      "description": "Space savings from a fully allocated VV (CPVV) to a thinly allocated VV (TPVV)",
      "type": "number",
      "format": "float64"
     },
     "thinSaveMb": {
      "description": "Thin savings in MiB",
      "type": "integer",
      "format": "int64"
     },
     "totalRatio": {
      "description": "Total space savings from a fully allocated VV (CPVV) to a thinly allocated VV (TPVV), including thin, compression, dedup, clone, zero packing, and snaps, in MiB",
      "type": "number",
      "format": "float64"
     },
     "totalReservedMiB": {
      "description": "Total amount of space reserved by CPG  (MiB)",
      "type": "integer",
      "format": "uint64"
     },
     "totalSaveMb": {
      "description": "Total space savings, including thin, compression, dedup, clone, zero packing, and snaps, in MiB",
      "type": "integer",
      "format": "int64"
     },
     "totalSizeMiB": {
      "description": "Total logical capacity in the user/snapshot space (MiB)",
      "type": "integer",
      "format": "uint64"
     },
     "totalSizeRawMiB": {
      "description": "Total physical (raw) MiB in the user/snapshot space",
      "type": "integer",
      "format": "uint64"
     },
     "totalUsedSizeMiB": {
      "description": "Total Used Size",
      "type": "integer",
      "format": "uint64"
     },
     "uid": {
      "description": "Unique Identifier of the resource",
      "type": "string"
     },
     "uri": {
      "description": "URI of the resource",
      "type": "string"
     },
     "userSpace": {
      "type": "object",
      "properties": {
       "ldCount": {
        "description": "Number of Logical Disks",
        "type": "integer",
        "format": "uint64"
       },
       "totalMiB": {
        "description": "Total logical capacity (MiB)",
        "type": "integer",
        "format": "uint64"
       },
       "totalRawMiB": {
        "description": "Total physical (raw) capacity (MiB)",
        "type": "integer",
        "format": "uint64"
       },
       "usedMiB": {
        "description": "Used logical capacity (MiB)",
        "type": "integer",
        "format": "uint64"
       },
       "usedRawMiB": {
        "description": "Used physical (raw) capacity (MiB)",
        "type": "integer",
        "format": "uint64"
       }
      },
      "description": "Capacity information for user space",
      "descriptionKey": "SCHEMA_CPG_USER_SPACE",
      "title": "*cpg.Space"
     },
     "uuid": {
      "description": "Universal Unique Identifier of the resource",
      "type": "string"
     },
     "vasa": {
      "description": "Flag indicating that the CPG is associated with a Storage Container.",
      "type": "boolean"
     },
     "virtualSizeMiB": {
      "description": "Virtual Size",
      "type": "integer",
      "format": "uint64"
     },
     "warnPercent": {
      "description": "Allocation warning percentage",
      "type": "number",
      "format": "float32"
     }
    }
   },
   "cpg.CreateCpg": {
    "type": "object",
    "required": [
     "name"
    ],
    "properties": {
     "domain": {
      "description": "Name of the domain that the CPG belongs to",
      "type": "string"
     },
     "growthLimitMiB": {
      "description": "Limit size in MiB beyond which the admin/data space will not grow",
      "type": "integer",
      "format": "uint64"
     },
     "growthSizeMiB": {
      "description": "Amount of admin/data LD storage in MiB created on each auto-grow",
      "type": "integer",
      "format": "uint64"
     },
     "growthWarnMiB": {
      "description": "Size in MiB of the admin/data space at which a warning alert is generated",
      "type": "integer",
      "format": "uint64"
     },
     "ha": {
      "description": "Requested High Availability setting",
      "title": "halevelsa.Enum",
      "enum": [
       "HAJBOD_JBOD",
       "HAJBOD_DISK"
      ],
      "type": "string"
     },
     "name": {
      "description": "Name of the CPG",
      "type": "string"
     }
    },
    "example": {
     "name": "cpg_cage",
     "HA": "HAJBOD_JBOD"
    }
   },
   "cpg.PatchCpg": {
    "type": "object",
    "properties": {
     "growthLimitMiB": {
      "description": "Limit size in MiB beyond which the admin/data space will not grow",
      "type": "integer",
      "format": "uint64"
     },
     "growthSizeMiB": {
      "description": "Amount of admin/data LD storage in MiB created on each auto-grow",
      "type": "integer",
      "format": "uint64"
     },
     "growthWarnMiB": {
      "description": "Size in MiB of the admin/data space at which a warning alert is generated",
      "type": "integer",
      "format": "uint64"
     },
     "ha": {
      "description": "Requested High Availability setting",
      "title": "halevelsa.Enum",
      "enum": [
       "HAJBOD_JBOD",
       "HAJBOD_DISK"
      ],
      "type": "string"
     },
     "newName": {
      "description": "New name of the CPG",
      "type": "string"
     }
    },
    "example": {
     "newName": "mycpg"
    }
   },
   "domain.CreateDomain": {
    "type": "object",
    "properties": {
     "comment": {
      "description": "Additional comment for domain",
      "type": "string"
     },
     "maxVolumeRetention": {
      "description": "Max volume retention time in the domain in seconds",
      "type": "integer",
      "format": "int64"
     },
     "name": {
      "description": "Name of domain",
      "type": "string"
     }
    },
    "example": {
     "name": "edm",
     "comment": "test domain",
     "maxVolumeRetention": 86400
    }
   },
   "domain.EditDomain": {
    "type": "object",
    "properties": {
     "comment": {
      "description": "Change comment of domain, set to \"\" to remove",
      "type": "string"
     },
     "maxVolumeRetention": {
      "description": "Change max volume retention time in the domain in seconds, set to -1 to remove, 0 to disable",
      "type": "integer",
      "format": "int64"
     },
     "newName": {
      "description": "Change Name of domain",
      "type": "string"
     }
    },
    "example": {
     "newName": "edm",
     "comment": "test domain",
     "maxVolumeRetention": 86400
    }
   },
   "domain.MoveToDomain": {
    "type": "object",
    "properties": {
     "objectName": {
      "description": "Name of the object to move to a domain",
      "type": "string"
     },
     "objectType": {
      "description": "Type of object to move to a domain",
      "title": "domainobjecttype.Enum",
      "enum": [
       "DOMAIN_OBJECT_TYPE_UNKNOWN",
       "DOMAIN_OBJECT_TYPE_VV",
       "DOMAIN_OBJECT_TYPE_CPG",
       "DOMAIN_OBJECT_TYPE_HOST"
      ],
      "type": "string"
     },
     "targetDomain": {
      "description": "Name of the target domain for the move",
      "type": "string"
     }
    }
   },
   "domain.Move_an_object_to_a_domain": {
    "type": "MOVE_TO_DOMAIN",
    "fullType": "domain.MoveToDomain",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: MOVE_TO_DOMAIN",
      "type": "string"
     },
     "parameters": {
      "type": "object",
      "properties": {
       "objectName": {
        "description": "Name of the object to move to a domain",
        "type": "string"
       },
       "objectType": {
        "description": "Type of object to move to a domain",
        "title": "domainobjecttype.Enum",
        "enum": [
         "DOMAIN_OBJECT_TYPE_UNKNOWN",
         "DOMAIN_OBJECT_TYPE_VV",
         "DOMAIN_OBJECT_TYPE_CPG",
         "DOMAIN_OBJECT_TYPE_HOST"
        ],
        "type": "string"
       },
       "targetDomain": {
        "description": "Name of the target domain for the move",
        "type": "string"
       }
      },
      "description": "Parameters for a custom action",
      "descriptionKey": "SCHEMA_CUSTOM_ACTION_PROPS"
     }
    },
    "description": "Move an object to a domain",
    "descriptionKey": "MOVE_TO_DOMAIN_DESCRIPTION",
    "title": "MOVE_TO_DOMAIN",
    "example": {
     "action": "MOVE_TO_DOMAIN",
     "parameters": {
      "objectType": "DOMAIN_OBJECT_TYPE_HOST",
      "objectName": "edmhost",
      "targetDomain": "edm"
     }
    }
   },
   "domain.SysDomain": {
    "type": "object",
    "properties": {
     "comment": {
      "description": "Additional comment for domain",
      "type": "string"
     },
     "createdBy": {
      "description": "User who creates domain",
      "type": "string"
     },
     "creationTime": {
      "type": "object",
      "properties": {
       "ms": {
        "description": "Epoch time in milliseconds",
        "type": "integer",
        "format": "int64"
       },
       "tz": {
        "description": "Time zone name",
        "type": "string"
       }
      },
      "description": "Domain creation time in milliseconds",
      "descriptionKey": "SCHEMA_DOMAIN_CREATION_TIME",
      "title": "*shared.Calendar"
     },
     "displayname": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Name to be used for display purposes",
      "descriptionKey": "SCHEMA_DISPLAYNAME",
      "title": "*utils.I18nValue"
     },
     "id": {
      "description": "ID of domain. Not applicable when creating a user",
      "type": "integer",
      "format": "int64"
     },
     "maxVolumeRetention": {
      "description": "Max volume retention time in the domain in seconds",
      "type": "integer",
      "format": "int64"
     },
     "name": {
      "description": "Name of domain",
      "type": "string"
     },
     "systemWWN": {
      "description": "WWN of the array",
      "type": "string"
     },
     "taskTags": {
      "description": "A list of tags used to filter tasks from resource updates",
      "type": "string"
     },
     "uid": {
      "description": "Unique Identifier of the resource",
      "type": "string"
     },
     "uri": {
      "description": "URI of the resource",
      "type": "string"
     }
    }
   },
   "domainset.DomainSet": {
    "type": "object",
    "properties": {
     "comment": {
      "description": "Comments associated with the set",
      "type": "string"
     },
     "displayname": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Name to be used for display purposes",
      "descriptionKey": "SCHEMA_DISPLAYNAME",
      "title": "*utils.I18nValue"
     },
     "domain": {
      "description": "Domain that the resource belongs to",
      "type": "string"
     },
     "id": {
      "description": "Numeric id of the set",
      "type": "integer",
      "format": "int64"
     },
     "isHidden": {
      "description": "Is Virtual volume set hidden",
      "type": "boolean"
     },
     "members": {
      "description": "Names of set members.  In certain situations. when exported volumes have been removed from a Virtual volume set, members may be replaced with a \"--\" placeholder.",
      "type": "array",
      "items": {
       "description": "",
       "type": "string"
      }
     },
     "name": {
      "description": "Name of the set",
      "type": "string"
     },
     "shortName": {
      "description": "Short name of the object set",
      "type": "string"
     },
     "systemWWN": {
      "description": "WWN of the array",
      "type": "string"
     },
     "uid": {
      "description": "Unique Identifier of the resource",
      "type": "string"
     },
     "uri": {
      "description": "URI of the resource",
      "type": "string"
     },
     "uuid": {
      "description": "Array created unique identifier of the set",
      "type": "string"
     }
    }
   },
   "enclosure.EditEnclosure": {
    "type": "object",
    "properties": {
     "id": {
      "description": "Numeric ID of the resource",
      "type": "string"
     },
     "location": {
      "description": "User-specified location of the enclosure",
      "type": "string"
     }
    }
   },
   "hardware.EnableSwitchPort": {
    "type": "object",
    "properties": {
     "switchName": {
      "description": "Switch name for during enablement of switch port",
      "type": "string"
     },
     "switchPortId": {
      "description": "Switch port ID for during enablement of switch port",
      "type": "integer",
      "format": "uint32"
     }
    }
   },
   "hardware.Locate": {
    "type": "object",
    "properties": {
     "locateEnabled": {
      "description": "Indicates if the locate beacon should be enabled or not",
      "type": "boolean"
     }
    }
   },
   "hardware.RebootSwitch": {
    "type": "object",
    "properties": {
     "switchName": {
      "description": "Name of the switch to reboot",
      "type": "string"
     }
    },
    "example": {
     "action": "REBOOT_SWITCH",
     "parameters": {
      "switchName": "sw1"
     }
    }
   },
   "host.Bulk_delete_hosts": {
    "type": "BULK_DELETE",
    "fullType": "httputils.BulkDeleteResource",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: BULK_DELETE",
      "type": "string"
     },
     "parameters": {
      "type": "object",
      "properties": {
       "uids": {
        "description": "UIDs for bulk action",
        "type": "array",
        "items": {
         "description": "",
         "type": "string"
        }
       }
      },
      "description": "Parameters for a custom action",
      "descriptionKey": "SCHEMA_CUSTOM_ACTION_PROPS"
     }
    },
    "description": "Used to delete multiple hosts in one call",
    "descriptionKey": "BULK_DELETE_HOSTS_DESCRIPTION",
    "title": "BULK_DELETE"
   },
   "host.CreateHost": {
    "type": "object",
    "properties": {
     "addPath": {
      "description": "Flag to indicate if the create host command is being used to add a path",
      "type": "boolean"
     },
     "descriptors": {
      "type": "object",
      "properties": {
       "IPAddr": {
        "description": "IP Address of the host",
        "type": "string"
       },
       "comment": {
        "description": "Generic comments for the host",
        "type": "string"
       },
       "contact": {
        "description": "Contact information for the host",
        "type": "string"
       },
       "location": {
        "description": "Location information of the host",
        "type": "string"
       },
       "model": {
        "description": "Model of the host",
        "type": "string"
       },
       "os": {
        "description": "Operating System of the host",
        "type": "string"
       }
      },
      "description": "Descriptors required to create host",
      "descriptionKey": "SCHEMA_CREATE_HOST_DESCRIPTORS",
      "title": "*host.HostDescriptors"
     },
     "domain": {
      "description": "Domain to create host",
      "type": "string"
     },
     "fcPaths": {
      "description": "FC path list to create host",
      "type": "array",
      "items": {
       "description": "",
       "type": "string"
      }
     },
     "isVvolHost": {
      "description": "Is create host is vasa host",
      "type": "boolean"
     },
     "iscsiPaths": {
      "description": "iSCSI path list to create host",
      "type": "array",
      "items": {
       "description": "",
       "type": "string"
      }
     },
     "name": {
      "description": "Host name to create host",
      "type": "string"
     },
     "nvmePaths": {
      "description": "NVMe path list to create host",
      "type": "array",
      "items": {
       "description": "",
       "type": "string"
      }
     },
     "persona": {
      "description": "Persona id to create host",
      "type": "integer",
      "format": "int32"
     },
     "port": {
      "description": "Host port to create host",
      "type": "array",
      "items": {
       "description": "",
       "type": "string"
      }
     },
     "setName": {
      "description": "Host set to create host",
      "type": "string"
     },
     "transportType": {
      "description": "NVMe transport type to create host",
      "title": "transport.Enum",
      "enum": [
       "UNKNOWN",
       "FC",
       "TCP"
      ],
      "type": "string"
     }
    }
   },
   "host.Host": {
    "type": "object",
    "properties": {
     "agent": {
      "type": "object",
      "properties": {
       "IPAddr": {
        "description": "Primary IP address of the host",
        "type": "string"
       },
       "architecture": {
        "description": "Host architecture",
        "type": "string"
       },
       "bootFromSAN": {
        "description": "Reports if host is bootable from SAN",
        "type": "string"
       },
       "clusterId": {
        "description": "ID of the host cluster the host is a member of",
        "type": "string"
       },
       "clusterName": {
        "description": "Name of the host cluster the host is a member of",
        "type": "string"
       },
       "clusterSoftware": {
        "description": "Host clustering software in use on host",
        "type": "string"
       },
       "clusterVersion": {
        "description": "Version of the host clustering software in use",
        "type": "string"
       },
       "hostApps": {
        "description": "List of host applications",
        "type": "string"
       },
       "lastUpdated": {
        "type": "object",
        "properties": {
         "ms": {
          "description": "Epoch time in milliseconds",
          "type": "integer",
          "format": "int64"
         },
         "tz": {
          "description": "Time zone name",
          "type": "string"
         }
        },
        "description": "Last time the agent information was updated",
        "descriptionKey": "SCHEMA_HOST_AGENT_LASTUPD",
        "title": "*shared.Calendar"
       },
       "multiPathSoftware": {
        "description": "Multipathing software in use on host",
        "type": "string"
       },
       "multiPathSoftwareVersion": {
        "description": "Version of the multipathing software in use",
        "type": "string"
       },
       "os": {
        "description": "Operating System type (eg Solaris, Linux)",
        "type": "string"
       },
       "osPatch": {
        "description": "Operating System update level",
        "type": "string"
       },
       "osVersion": {
        "description": "Operating System version",
        "type": "string"
       },
       "reportedName": {
        "description": "Host name reported by the agent",
        "type": "string"
       }
      },
      "description": "Information about the host supplied by the agent",
      "descriptionKey": "SCHEMA_HOST_AGENT",
      "title": "*host.HostAgent"
     },
     "descriptors": {
      "type": "object",
      "properties": {
       "IPAddr": {
        "description": "IP Address of the host",
        "type": "string"
       },
       "comment": {
        "description": "Generic comments for the host",
        "type": "string"
       },
       "contact": {
        "description": "Contact information for the host",
        "type": "string"
       },
       "location": {
        "description": "Location information of the host",
        "type": "string"
       },
       "model": {
        "description": "Model of the host",
        "type": "string"
       },
       "os": {
        "description": "Operating System of the host",
        "type": "string"
       }
      },
      "description": "Host descriptors",
      "descriptionKey": "SCHEMA_HOST_DESCRIPTORS",
      "title": "*host.HostDescriptors"
     },
     "displayname": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Name to be used for display purposes",
      "descriptionKey": "SCHEMA_DISPLAYNAME",
      "title": "*utils.I18nValue"
     },
     "domain": {
      "description": "Domain that the resource belongs to",
      "type": "string"
     },
     "id": {
      "description": "Numeric ID of the resource",
      "type": "integer",
      "format": "int64"
     },
     "initiatorChapEnabled": {
      "description": "Reports if the initiator CHAP is enabled or not",
      "type": "boolean"
     },
     "initiatorChapName": {
      "description": "Initiator CHAP name",
      "type": "string"
     },
     "initiatorEncryptedChapSecret": {
      "description": "Encrypted initiator CHAP secret",
      "type": "string"
     },
     "isNvmfStretched": {
      "description": "Is given host is NVMe stretched",
      "type": "boolean"
     },
     "isVvolHost": {
      "description": "Is given host is vasa host",
      "type": "boolean"
     },
     "minLunId": {
      "description": "The minimum LUN ID supported by the host",
      "type": "integer",
      "format": "uint64"
     },
     "name": {
      "description": "Name of the resource",
      "type": "string"
     },
     "persona": {
      "type": "object",
      "properties": {
       "capabilities": {
        "description": "Array of capabilities of the host persona which are in effect",
        "type": "array",
        "items": {
         "type": "object",
         "properties": {
          "args": {
           "description": "Array of optional parameters to be used when formatting the text",
           "type": "array",
           "items": {
            "type": "AnyType"
           }
          },
          "default": {
           "description": "Text in the default language",
           "type": "string"
          },
          "key": {
           "description": "Key of the message in the i18n catalog",
           "type": "string"
          }
         },
         "title": "utils.I18nValue"
        }
       },
       "id": {
        "description": "Numeric ID of the host persona",
        "type": "integer",
        "format": "uint64"
       },
       "name": {
        "description": "Name of the host persona (generally an OS type)",
        "type": "string"
       }
      },
      "description": "Host persona",
      "descriptionKey": "SCHEMA_HOST_PERSONA",
      "title": "*shared.HostPersona"
     },
     "state": {
      "type": "object",
      "properties": {
       "detailed": {
        "description": "Array of the detailed states of the resource",
        "type": "array",
        "items": {
         "type": "object",
         "properties": {
          "args": {
           "description": "Array of optional parameters to be used when formatting the text",
           "type": "array",
           "items": {
            "type": "AnyType"
           }
          },
          "default": {
           "description": "Text in the default language",
           "type": "string"
          },
          "key": {
           "description": "Key of the message in the i18n catalog",
           "type": "string"
          }
         },
         "title": "utils.I18nValue"
        }
       },
       "overall": {
        "description": "Overall state of the resource",
        "title": "overallstate.Enum",
        "enum": [
         "STATE_UNKNOWN",
         "STATE_NORMAL",
         "STATE_WARNING",
         "STATE_DEGRADED",
         "STATE_FAILED",
         "STATE_NOT_APPLICABLE",
         "STATE_NEW"
        ],
        "type": "string"
       }
      },
      "description": "State of the resource",
      "descriptionKey": "SCHEMA_STATE",
      "title": "shared.ResourceState"
     },
     "stateDescription": {
      "description": "Detailed descriptions of the host state",
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "args": {
         "description": "Array of optional parameters to be used when formatting the text",
         "type": "array",
         "items": {
          "type": "AnyType"
         }
        },
        "default": {
         "description": "Text in the default language",
         "type": "string"
        },
        "key": {
         "description": "Key of the message in the i18n catalog",
         "type": "string"
        }
       },
       "title": "utils.I18nValue"
      }
     },
     "systemWWN": {
      "description": "WWN of the array",
      "type": "string"
     },
     "targetChapEnabled": {
      "description": "Reports if the target CHAP is enabled or not",
      "type": "boolean"
     },
     "targetChapName": {
      "description": "Target CHAP name",
      "type": "string"
     },
     "targetEncryptedChapSecret": {
      "description": "Encrypted target CHAP secret",
      "type": "string"
     },
     "taskTags": {
      "description": "A list of tags used to filter tasks from resource updates",
      "type": "string"
     },
     "uaRepLun": {
      "description": "UARepLun",
      "type": "boolean"
     },
     "uid": {
      "description": "Unique Identifier of the resource",
      "type": "string"
     },
     "uri": {
      "description": "URI of the resource",
      "type": "string"
     }
    }
   },
   "host.PatchHost": {
    "type": "object",
    "properties": {
     "chap": {
      "type": "object",
      "properties": {
       "initiatorChapEnabled": {
        "description": "Reports if the initiator CHAP is enabled or not",
        "type": "boolean"
       },
       "initiatorChapName": {
        "description": "Initiator CHAP name",
        "type": "string"
       },
       "initiatorEncryptedChapSecret": {
        "description": "Encrypted initiator CHAP secret",
        "type": "string"
       },
       "targetChapEnabled": {
        "description": "Reports if the target CHAP is enabled or not",
        "type": "boolean"
       },
       "targetChapName": {
        "description": "Target CHAP name",
        "type": "string"
       },
       "targetEncryptedChapSecret": {
        "description": "Encrypted target CHAP secret",
        "type": "string"
       }
      },
      "description": "Specifies CHAP setting",
      "descriptionKey": "SCHEMA_UPDATE_HOST_CHAP",
      "title": "*host.CHAPSettings"
     },
     "descriptors": {
      "type": "object",
      "properties": {
       "IPAddr": {
        "description": "IP Address of the host",
        "type": "string"
       },
       "comment": {
        "description": "Generic comments for the host",
        "type": "string"
       },
       "contact": {
        "description": "Contact information for the host",
        "type": "string"
       },
       "location": {
        "description": "Location information of the host",
        "type": "string"
       },
       "model": {
        "description": "Model of the host",
        "type": "string"
       },
       "os": {
        "description": "Operating System of the host",
        "type": "string"
       }
      },
      "description": "Specifies host descriptors for the host",
      "descriptionKey": "SCHEMA_UPDATE_HOST_DESCRIPTORS",
      "title": "*host.HostDescriptors"
     },
     "hostPaths": {
      "type": "object",
      "properties": {
       "iscsiNames": {
        "description": "List of iSCSI path names",
        "type": "array",
        "items": {
         "description": "",
         "type": "string"
        }
       },
       "nvmeNames": {
        "description": "List of NVMe path names",
        "type": "array",
        "items": {
         "description": "",
         "type": "string"
        }
       },
       "wwns": {
        "description": "List of FC path WWNs",
        "type": "array",
        "items": {
         "description": "",
         "type": "string"
        }
       }
      },
      "description": "Specifies updated host paths for the host",
      "descriptionKey": "SCHEMA_UPDATE_HOST_PATH",
      "title": "*host.HostPaths"
     },
     "hostPathsWithPorts": {
      "description": "Specifies updated system ports of a path for a smartsan host",
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "systemPorts": {
         "description": "List of updated system ports for a smartsan host path zoning",
         "type": "array",
         "items": {
          "description": "",
          "type": "string"
         }
        },
        "wwn": {
         "description": "List of FC path WWNs",
         "type": "string"
        }
       },
       "title": "host.HostPathsWithPorts"
      }
     },
     "name": {
      "description": "Specifies the name to be given to the host",
      "type": "string"
     },
     "proximity": {
      "description": "Proximity specified for adding hosts to a Remote Copy group",
      "title": "proximity.Enum",
      "enum": [
       "PRIMARY",
       "SECONDARY",
       "ALL"
      ],
      "type": "string"
     },
     "rcopyGroupNames": {
      "description": "List of rcopy group names to set the host proximity",
      "type": "array",
      "items": {
       "description": "",
       "type": "string"
      }
     }
    }
   },
   "hostpath.HostPath": {
    "type": "object",
    "properties": {
     "IPAddr": {
      "description": "IP address for host if iSCSI",
      "type": "string"
     },
     "address": {
      "description": "Address of the path based on the type (FC - WWN, iSCSI - iSCSI Name, SAS - SAS address)",
      "type": "string"
     },
     "displayname": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Name to be used for display purposes",
      "descriptionKey": "SCHEMA_DISPLAYNAME",
      "title": "*utils.I18nValue"
     },
     "domain": {
      "description": "Domain that the resource belongs to",
      "type": "string"
     },
     "driverVersion": {
      "description": "Driver version",
      "type": "string"
     },
     "firmwareVersion": {
      "description": "Firmware version of the HBA",
      "type": "string"
     },
     "hostId": {
      "description": "ID of the host this path belongs to",
      "type": "integer",
      "format": "int64"
     },
     "hostName": {
      "description": "Name of the host this path belongs to",
      "type": "string"
     },
     "hostSpeed": {
      "description": "Speed the host reports for this path",
      "type": "integer",
      "format": "uint32"
     },
     "model": {
      "description": "Model of the HBA",
      "type": "string"
     },
     "nvmfSubsystemNQN": {
      "description": "NVMe namespace to a subsystem",
      "type": "string"
     },
     "pathType": {
      "description": "Type of the path",
      "title": "hostpathtype.Enum",
      "enum": [
       "UNKNOWN",
       "FC",
       "iSCSI",
       "SAS",
       "NVMe",
       "NVMe/TCP"
      ],
      "type": "string"
     },
     "portPos": {
      "type": "object",
      "properties": {
       "node": {
        "description": "Port position node number",
        "type": "integer",
        "format": "int64"
       },
       "port": {
        "description": "Port position port number",
        "type": "integer",
        "format": "int64"
       },
       "slot": {
        "description": "Port position slot number",
        "type": "integer",
        "format": "int64"
       }
      },
      "description": "Storage system port host is visible on",
      "descriptionKey": "SCHEMA_HPATH_POS",
      "title": "*shared.PortPosition"
     },
     "switchPortWWN": {
      "description": "WWN of the switch if this path is connected through it",
      "type": "string"
     },
     "systemWWN": {
      "description": "WWN of the array",
      "type": "string"
     },
     "uid": {
      "description": "Unique Identifier of the resource",
      "type": "string"
     },
     "uri": {
      "description": "URI of the resource",
      "type": "string"
     },
     "vendor": {
      "description": "Vendor name of the HBA",
      "type": "string"
     }
    }
   },
   "hostset.Bulk_delete_volume": {
    "type": "BULK_DELETE",
    "fullType": "httputils.BulkDeleteResource",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: BULK_DELETE",
      "type": "string"
     },
     "parameters": {
      "type": "object",
      "properties": {
       "uids": {
        "description": "UIDs for bulk action",
        "type": "array",
        "items": {
         "description": "",
         "type": "string"
        }
       }
      },
      "description": "Parameters for a custom action",
      "descriptionKey": "SCHEMA_CUSTOM_ACTION_PROPS"
     }
    },
    "description": "Delete a number of host sets at once",
    "descriptionKey": "BULK_DELETE_HOSTSET_DESCRIPTION",
    "title": "BULK_DELETE",
    "example": {
     "action": "BULK_DELETE",
     "parameters": {
      "uuids": [
       "4d140ed2c9c98d9e61a66ebd5ad0812d",
       "761a2470264027e11cea6ae7faac22ca"
      ]
     }
    }
   },
   "hostset.HostSet": {
    "type": "object",
    "properties": {
     "comment": {
      "description": "Comments associated with the set",
      "type": "string"
     },
     "displayname": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Name to be used for display purposes",
      "descriptionKey": "SCHEMA_DISPLAYNAME",
      "title": "*utils.I18nValue"
     },
     "domain": {
      "description": "Domain that the resource belongs to",
      "type": "string"
     },
     "hostSetType": {
      "description": "Host set type",
      "title": "hosttype.Enum",
      "enum": [
       "//",
       "RCHOST",
       "UNKNOWN"
      ],
      "type": "string"
     },
     "id": {
      "description": "Numeric id of the set",
      "type": "integer",
      "format": "int64"
     },
     "isHidden": {
      "description": "Is Virtual volume set hidden",
      "type": "boolean"
     },
     "members": {
      "description": "Names of set members.  In certain situations. when exported volumes have been removed from a Virtual volume set, members may be replaced with a \"--\" placeholder.",
      "type": "array",
      "items": {
       "description": "",
       "type": "string"
      }
     },
     "name": {
      "description": "Name of the set",
      "type": "string"
     },
     "shortName": {
      "description": "Short name of the object set",
      "type": "string"
     },
     "systemWWN": {
      "description": "WWN of the array",
      "type": "string"
     },
     "taskTags": {
      "description": "A list of tags used to filter tasks from resource updates",
      "type": "string"
     },
     "uid": {
      "description": "Unique Identifier of the resource",
      "type": "string"
     },
     "uri": {
      "description": "URI of the resource",
      "type": "string"
     },
     "uuid": {
      "description": "Array created unique identifier of the set",
      "type": "string"
     }
    }
   },
   "httputils.BatchAction": {
    "type": "object",
    "required": [
     "batch",
     "operations"
    ],
    "properties": {
     "batch": {
      "description": "Batch action name",
      "type": "string"
     },
     "operations": {
      "description": "List of operations to perform",
      "type": "array",
      "items": {
       "type": "object",
       "required": [
        "action"
       ],
       "properties": {
        "action": {
         "description": "Action name",
         "type": "string"
        },
        "parameters": {
         "description": "Action parameters",
         "type": "AnyType"
        }
       },
       "title": "httputils.CustomAction"
      }
     },
     "ordered": {
      "description": "Indicates if the operations should be executed in the order specified, otherwise the order is at the discretion of the server",
      "type": "boolean"
     },
     "uuid": {
      "description": "Unique UID of the object that will be used to perform the operations",
      "type": "string"
     }
    }
   },
   "httputils.CustomAction": {
    "type": "object",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Action name",
      "type": "string"
     },
     "parameters": {
      "description": "Action parameters",
      "type": "AnyType"
     }
    }
   },
   "hw_disk.PhysicalDisk": {
    "type": "object",
    "properties": {
     "admitTime": {
      "type": "object",
      "properties": {
       "ms": {
        "description": "Epoch time in milliseconds",
        "type": "integer",
        "format": "int64"
       },
       "tz": {
        "description": "Time zone name",
        "type": "string"
       }
      },
      "description": "Time when the disk was admitted",
      "descriptionKey": "SCHEMA_PHYSICALDISK_ADMIT_TIME",
      "title": "*shared.Calendar"
     },
     "capacity": {
      "type": "object",
      "properties": {
       "allocatedMiB": {
        "description": "Allocated capacity in MiB",
        "type": "integer",
        "format": "uint64"
       },
       "failedMiB": {
        "description": "Failed capacity in MiB",
        "type": "integer",
        "format": "uint64"
       },
       "freeMiB": {
        "description": "Free capacity in MiB",
        "type": "integer",
        "format": "uint64"
       },
       "totalMiB": {
        "description": "Total capacity in MiB",
        "type": "integer",
        "format": "uint64"
       },
       "unavailableMiB": {
        "description": "Unavailable capacity in MiB",
        "type": "integer",
        "format": "uint64"
       }
      },
      "description": "Detailed capacity information",
      "descriptionKey": "SCHEMA_PHYSICALDISK_CAPACITY",
      "title": "*hw_disk.DiskCapacity"
     },
     "consumableSizeMiB": {
      "description": "Consumable size in MiB",
      "type": "integer",
      "format": "uint64"
     },
     "devType": {
      "description": "Device type",
      "title": "devtype.Enum",
      "enum": [
       "DEVTYPE_UNKNOWN",
       "DEVTYPE_FC",
       "DEVTYPE_NL",
       "DEVTYPE_SSD",
       "DEVTYPE_QLC"
      ],
      "type": "string"
     },
     "displayname": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Name to be used for display purposes",
      "descriptionKey": "SCHEMA_DISPLAYNAME",
      "title": "*utils.I18nValue"
     },
     "domain": {
      "description": "Domain that the resource belongs to",
      "type": "string"
     },
     "enclosureUid": {
      "description": "Unique Identifier of the enclosure",
      "type": "string"
     },
     "fwStatus": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Firmware status",
      "descriptionKey": "SCHEMA_PHYSICALDISK_FWSTATUS",
      "title": "*utils.I18nValue"
     },
     "fwVersion": {
      "description": "Firmware version",
      "type": "string"
     },
     "id": {
      "description": "Numeric ID of the resource",
      "type": "integer",
      "format": "int64"
     },
     "insertTime": {
      "type": "object",
      "properties": {
       "ms": {
        "description": "Epoch time in milliseconds",
        "type": "integer",
        "format": "int64"
       },
       "tz": {
        "description": "Time zone name",
        "type": "string"
       }
      },
      "description": "Time when the disk was inserted",
      "descriptionKey": "SCHEMA_PHYSICALDISK_INSERT_TIME",
      "title": "*shared.Calendar"
     },
     "lifeLeftPCT": {
      "description": "Life Left Percent - only applies to solid state drives",
      "type": "number",
      "format": "float32"
     },
     "manufacturing": {
      "type": "object",
      "properties": {
       "assemblyRev": {
        "description": "Assembly revision",
        "type": "string"
       },
       "checkSum": {
        "description": "Checksum",
        "type": "string"
       },
       "hpeModelName": {
        "description": "{vendor} model name",
        "type": "string"
       },
       "manufacturer": {
        "description": "Manufacturer name",
        "type": "string"
       },
       "model": {
        "description": "Model name",
        "type": "string"
       },
       "saleablePartNumber": {
        "description": "Saleable part number",
        "type": "string"
       },
       "saleableSerialNumber": {
        "description": "Saleable serial number",
        "type": "string"
       },
       "serialNumber": {
        "description": "Serial number",
        "type": "string"
       },
       "sparePartNumber": {
        "description": "Spare part number",
        "type": "string"
       }
      },
      "description": "Manufacturing data of the physical disk",
      "descriptionKey": "SCHEMA_PHYSICALDISK_MANUFACTURING",
      "title": "*shared.ManufacturingData"
     },
     "mediaType": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Disk media",
      "descriptionKey": "SCHEMA_PHYSICALDISK_MEDIATYPE",
      "title": "*utils.I18nValue"
     },
     "mfgCapacityGB": {
      "description": "Capacity as reported by manufacturer in GB",
      "type": "integer",
      "format": "uint64"
     },
     "paths": {
      "description": "Path information for disk",
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "degraded": {
         "description": "Indicates if this is a degraded path for the disk",
         "type": "boolean"
        },
        "disabled": {
         "description": "Indicates if this is a disabled path for the disk",
         "type": "boolean"
        },
        "port": {
         "type": "object",
         "properties": {
          "node": {
           "description": "Port position node number",
           "type": "integer",
           "format": "int64"
          },
          "port": {
           "description": "Port position port number",
           "type": "integer",
           "format": "int64"
          },
          "slot": {
           "description": "Port position slot number",
           "type": "integer",
           "format": "int64"
          }
         },
         "description": "A port that disk loop is connected to",
         "descriptionKey": "SCHEMA_DISKLOOP_PORT",
         "title": "*shared.PortPosition"
        },
        "primary": {
         "description": "Indicates if this is a primary path for the disk",
         "type": "boolean"
        }
       },
       "title": "hw_disk.DiskLoop"
      }
     },
     "positionLast": {
      "type": "object",
      "properties": {
       "cage": {
        "description": "Disk position cage number",
        "type": "integer",
        "format": "int64"
       },
       "sled": {
        "description": "Disk position sled number",
        "type": "integer",
        "format": "int64"
       }
      },
      "description": "Last position of the disk in the cage",
      "descriptionKey": "SCHEMA_PHYSICALDISK_POSITIONLAST",
      "title": "*shared.DiskPosition"
     },
     "positionNow": {
      "type": "object",
      "properties": {
       "cage": {
        "description": "Disk position cage number",
        "type": "integer",
        "format": "int64"
       },
       "sled": {
        "description": "Disk position sled number",
        "type": "integer",
        "format": "int64"
       }
      },
      "description": "Current position of the disk in the cage",
      "descriptionKey": "SCHEMA_PHYSICALDISK_POSITIONNOW",
      "title": "*shared.DiskPosition"
     },
     "protocol": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Disk protocol",
      "descriptionKey": "SCHEMA_PHYSICALDISK_PROTOCOL",
      "title": "*utils.I18nValue"
     },
     "rawSizeMiB": {
      "description": "Raw size in MiB",
      "type": "integer",
      "format": "uint64"
     },
     "readErrors": {
      "type": "object",
      "properties": {
       "correctable": {
        "description": "Number of correctable errors",
        "type": "integer",
        "format": "uint32"
       },
       "uncorrectable": {
        "description": "Number of uncorrectable errors",
        "type": "integer",
        "format": "uint32"
       }
      },
      "description": "Read errors counts",
      "descriptionKey": "SCHEMA_PHYSICALDISK_READ_ERRORS",
      "title": "*hw_disk.ErrorCount"
     },
     "sedStatus": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "SED state of disk",
      "descriptionKey": "SCHEMA_PHYSICALDISK_SEDSTATUS",
      "title": "*utils.I18nValue"
     },
     "slogger": {
      "description": "Indicates if a physical disk has been reserved for debug logging",
      "type": "boolean"
     },
     "state": {
      "type": "object",
      "properties": {
       "detailed": {
        "description": "Array of the detailed states of the resource",
        "type": "array",
        "items": {
         "type": "object",
         "properties": {
          "args": {
           "description": "Array of optional parameters to be used when formatting the text",
           "type": "array",
           "items": {
            "type": "AnyType"
           }
          },
          "default": {
           "description": "Text in the default language",
           "type": "string"
          },
          "key": {
           "description": "Key of the message in the i18n catalog",
           "type": "string"
          }
         },
         "title": "utils.I18nValue"
        }
       },
       "overall": {
        "description": "Overall state of the resource",
        "title": "overallstate.Enum",
        "enum": [
         "STATE_UNKNOWN",
         "STATE_NORMAL",
         "STATE_WARNING",
         "STATE_DEGRADED",
         "STATE_FAILED",
         "STATE_NOT_APPLICABLE",
         "STATE_NEW"
        ],
        "type": "string"
       }
      },
      "description": "State of the resource",
      "descriptionKey": "SCHEMA_STATE",
      "title": "shared.ResourceState"
     },
     "systemWWN": {
      "description": "WWN of the array",
      "type": "string"
     },
     "uid": {
      "description": "Unique Identifier of the resource",
      "type": "string"
     },
     "uri": {
      "description": "URI of the resource",
      "type": "string"
     },
     "writeErrors": {
      "type": "object",
      "properties": {
       "correctable": {
        "description": "Number of correctable errors",
        "type": "integer",
        "format": "uint32"
       },
       "uncorrectable": {
        "description": "Number of uncorrectable errors",
        "type": "integer",
        "format": "uint32"
       }
      },
      "description": "Write errors counts",
      "descriptionKey": "SCHEMA_PHYSICALDISK_WRITE_ERRORS",
      "title": "*hw_disk.ErrorCount"
     },
     "wwn": {
      "description": "WWN of the physical disk",
      "type": "string"
     }
    }
   },
   "info.ServerInfo": {
    "type": "object",
    "properties": {
     "allCountries": {
      "description": "List of all countries",
      "type": "string"
     },
     "allTimeZoneRegions": {
      "description": "List of all time zone regions",
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "localizedRegion": {
         "description": "Localized timezone region",
         "type": "string"
        },
        "region": {
         "description": "Timezone region",
         "type": "string"
        }
       },
       "title": "shared.TimezoneRegion"
      }
     },
     "allTimeZonesByOffset": {
      "description": "List of timezones by hour offset from UTC",
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "localizedTz": {
         "description": "Localized Timezone name with offset",
         "type": "string"
        },
        "offset": {
         "description": "Timezone offset",
         "type": "integer",
         "format": "int"
        },
        "region": {
         "description": "Timezone region",
         "type": "string"
        },
        "timezone": {
         "description": "Timezone name",
         "type": "string"
        }
       },
       "title": "shared.TimezoneOffset"
      }
     },
     "catalog": {
      "description": "The localization catalog",
      "type": "string"
     },
     "catalogLoadComplete": {
      "description": "If false, the localization catalog has not been fully loaded yet.  The client should wait a few seconds and try again.",
      "type": "boolean"
     },
     "cloudCsiDisabled": {
      "description": "Is Cloud CSI disabled",
      "type": "string"
     },
     "concordeDisplayVersion": {
      "description": "Display version of the UI installed on the array",
      "type": "string"
     },
     "concordeVersion": {
      "description": "Version of the UI installed on the array",
      "type": "string"
     },
     "currentTime": {
      "type": "object",
      "properties": {
       "ms": {
        "description": "Epoch time in milliseconds",
        "type": "integer",
        "format": "int64"
       },
       "tz": {
        "description": "Time zone name",
        "type": "string"
       }
      },
      "description": "current time of array",
      "descriptionKey": "SCHEMA_SERVERINFO_CURRENTTIME",
      "title": "*shared.Calendar"
     },
     "formatLocale": {
      "description": "Locale used for formatting numbers",
      "type": "string"
     },
     "hasCertificate": {
      "description": "Is a certificate available for authentication",
      "type": "boolean"
     },
     "hwmodel": {
      "description": "Hardware model name for branding",
      "type": "string"
     },
     "hwproduct": {
      "description": "Hardware product name for branding",
      "type": "string"
     },
     "hwproductfull": {
      "description": "Hardware product full name for branding",
      "type": "string"
     },
     "initialized": {
      "description": "Is system initialized?",
      "type": "boolean"
     },
     "initializedTaskUri": {
      "description": "Initialized task URI",
      "type": "string"
     },
     "isDarkSite": {
      "description": "Does Air Gap license feature exist?",
      "type": "boolean"
     },
     "lastTclServerError": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Last error from the TCL server",
      "descriptionKey": "SCHEMA_SERVERINFO_LASTTCLSERVERERROR",
      "title": "*utils.I18nValue"
     },
     "locale": {
      "description": "Locale used for text values",
      "type": "string"
     },
     "loginBanner": {
      "description": "Login banner text",
      "type": "string"
     },
     "maxMigrationSources": {
      "description": "Max migration sources",
      "type": "integer",
      "format": "int"
     },
     "notificationSeverities": {
      "type": "object",
      "properties": {
       "map": {
        "description": "A map of severity and its message catalog key",
        "type": "string"
       },
       "order": {
        "description": "An array of severity ordered by the notificate severity:  An array of number: 0 - Fatal, 1 - Critical, 2 - Major, 3 - Minor, 4 - Degraded, 5 - Info, 6 - Debug",
        "type": "array",
        "items": {
         "type": "integer",
         "format": "int"
        }
       }
      },
      "description": "List of Notification severities",
      "descriptionKey": "SCHEMA_SERVERINFO_NOTIFICATIONSERVERITIES",
      "title": "*contacts.NotificationSeverities"
     },
     "osVersion": {
      "type": "object",
      "properties": {
       "Feature": {
        "description": "APIDOC_TBD",
        "type": "integer",
        "format": "int"
       },
       "Full": {
        "description": "Representation of the version that includes everything",
        "type": "string"
       },
       "IsLegacy": {
        "description": "APIDOC_TBD",
        "type": "boolean"
       },
       "Major": {
        "description": "APIDOC_TBD",
        "type": "integer",
        "format": "int"
       },
       "Minor": {
        "description": "APIDOC_TBD",
        "type": "integer",
        "format": "int"
       },
       "Patches": {
        "description": "APIDOC_TBD",
        "type": "string"
       },
       "QualityPack": {
        "description": "APIDOC_TBD",
        "type": "integer",
        "format": "int"
       },
       "Release": {
        "description": "APIDOC_TBD",
        "type": "string"
       },
       "Rev": {
        "description": "APIDOC_TBD",
        "type": "integer",
        "format": "int"
       }
      },
      "description": "The OS version installed on the array",
      "descriptionKey": "SCHEMA_SERVERINFO_OSVERSION",
      "title": "*tcl_monster.Version"
     },
     "osfull": {
      "description": "OS full name for branding",
      "type": "string"
     },
     "osname": {
      "description": "OS name for branding",
      "type": "string"
     },
     "partiallyInit": {
      "description": "Is partially initialized",
      "type": "boolean"
     },
     "product": {
      "description": "Product name for branding",
      "type": "string"
     },
     "productfull": {
      "description": "Product full name for branding",
      "type": "string"
     },
     "productnospace": {
      "description": "Product name with no spaces for branding",
      "type": "string"
     },
     "softproduct": {
      "description": "Software product name for branding",
      "type": "string"
     },
     "softproductfull": {
      "description": "Software product full name for branding",
      "type": "string"
     },
     "systemModel": {
      "description": "The system's model",
      "type": "string"
     },
     "systemModelInternal": {
      "description": "The system's branded model",
      "type": "string"
     },
     "systemName": {
      "description": "The system's name",
      "type": "string"
     },
     "systemSerial": {
      "description": "The system's serial number",
      "type": "string"
     },
     "systemWwn": {
      "description": "The system's WWN",
      "type": "string"
     },
     "tclServerReady": {
      "description": "Is TCL server ready",
      "type": "boolean"
     },
     "timeZone": {
      "description": "The array's timezone",
      "type": "string"
     },
     "timeout": {
      "description": "Idle session timeout",
      "type": "integer",
      "format": "int32"
     },
     "totalDrives": {
      "description": "Total number of physical drives",
      "type": "integer",
      "format": "int"
     },
     "totalEnclosures": {
      "description": "Total number of enclosures",
      "type": "integer",
      "format": "int"
     },
     "totalNodes": {
      "description": "Total number of nodes",
      "type": "integer",
      "format": "int"
     },
     "tunnelSetupTaskUri": {
      "description": "Tunnel setup task URI",
      "type": "string"
     },
     "tunnelSetupUserAgent": {
      "description": "The user agent of the client who initiates the tunnel setup",
      "type": "string"
     },
     "uiname": {
      "description": "UI name for branding",
      "type": "string"
     },
     "uinamefull": {
      "description": "UI full name for branding",
      "type": "string"
     },
     "vendor": {
      "description": "Vendor for branding",
      "type": "string"
     },
     "wsApiVersion": {
      "description": "WSAPI version installed on the array",
      "type": "string"
     }
    }
   },
   "objectset.CreateObjectSet": {
    "type": "object",
    "required": [
     "name"
    ],
    "properties": {
     "comment": {
      "description": "Comments associated with the set",
      "type": "string"
     },
     "domain": {
      "description": "Domain that the resource belongs to",
      "type": "string"
     },
     "members": {
      "description": "Names of the set members",
      "type": "array",
      "items": {
       "description": "",
       "type": "string"
      }
     },
     "name": {
      "description": "Name of the set",
      "type": "string"
     }
    },
    "example": {
     "name": "exampleSet",
     "comment": "example comment",
     "domain": "exampleDomain",
     "members": [
      "exampleHost"
     ]
    }
   },
   "objectset.PatchObjectSet": {
    "type": "object",
    "required": [
     "name"
    ],
    "properties": {
     "comment": {
      "description": "Comments for the object set to be modified",
      "type": "string"
     },
     "hostProximity": {
      "description": "List of member object to set proximity for host and rcopy groups",
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "host": {
         "description": "Host names which are exporting a remote copy group",
         "type": "string"
        },
        "proximity": {
         "description": "Host Proximity to be set",
         "title": "proximity.Enum",
         "enum": [
          "PRIMARY",
          "SECONDARY",
          "ALL"
         ],
         "type": "string"
        },
        "rcopyGroup": {
         "description": "List of rcopy group names to set the host proximity",
         "type": "array",
         "items": {
          "description": "",
          "type": "string"
         }
        }
       },
       "title": "objectset.RCopyGroupProximity"
      }
     },
     "members": {
      "description": "List of members of the object set to be modified",
      "type": "array",
      "items": {
       "description": "",
       "type": "string"
      }
     },
     "name": {
      "description": "Name of the object set to be modified",
      "type": "string"
     }
    },
    "example": {
     "name": "exampleSet",
     "comment": "example comment"
    }
   },
   "osinfo.FVars": {
    "type": "object",
    "properties": {
     "fileDefaultBwLimit": {
      "description": "Default values for bandwidth limit on FileServices VVset",
      "type": "integer",
      "format": "int64"
     },
     "fileDefaultIopsLimit": {
      "description": "Default values for IOPS limit on FileServices VVset",
      "type": "integer",
      "format": "int64"
     },
     "isFileServiceSupported": {
      "description": "Is Fileservice supported on the system",
      "type": "boolean"
     }
    }
   },
   "osinfo.MVars": {
    "type": "object",
    "properties": {
     "maxRCGroupVolumes": {
      "description": "Maximum number of volumes per Remote Copy group supported by the system",
      "type": "integer",
      "format": "int64"
     },
     "netccEnableRCIPv6": {
      "description": "RCIP IPv6 enablement status",
      "type": "boolean"
     },
     "nvmeFcNamespaceLimit": {
      "description": "Maximum number of vluns that can be created for a nvme fc host",
      "type": "integer",
      "format": "int64"
     },
     "rcVvsetSupported": {
      "description": "Maximum number of volumes per Remote Copy group supported by the system",
      "type": "integer",
      "format": "int64"
     },
     "rmMinPeriod": {
      "description": "Async replication period minimum value",
      "type": "integer",
      "format": "int64"
     }
    }
   },
   "osinfo.OsInfo": {
    "type": "object",
    "properties": {
     "OsFVars": {
      "type": "object",
      "properties": {
       "fileDefaultBwLimit": {
        "description": "Default values for bandwidth limit on FileServices VVset",
        "type": "integer",
        "format": "int64"
       },
       "fileDefaultIopsLimit": {
        "description": "Default values for IOPS limit on FileServices VVset",
        "type": "integer",
        "format": "int64"
       },
       "isFileServiceSupported": {
        "description": "Is Fileservice supported on the system",
        "type": "boolean"
       }
      },
      "description": "OS related fvars",
      "descriptionKey": "SCHEMA_OS_FVARS",
      "title": "*osinfo.FVars"
     },
     "displayname": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Name to be used for display purposes",
      "descriptionKey": "SCHEMA_DISPLAYNAME",
      "title": "*utils.I18nValue"
     },
     "domain": {
      "description": "Domain that the resource belongs to",
      "type": "string"
     },
     "hostOsPersonas": {
      "description": "SUPPORTED HOST OS PERSONAS",
      "type": "integer",
      "format": "uint64"
     },
     "maxLunID": {
      "description": "Maximum LUN ID supported by the system",
      "type": "integer",
      "format": "int64"
     },
     "osMVars": {
      "type": "object",
      "properties": {
       "maxRCGroupVolumes": {
        "description": "Maximum number of volumes per Remote Copy group supported by the system",
        "type": "integer",
        "format": "int64"
       },
       "netccEnableRCIPv6": {
        "description": "RCIP IPv6 enablement status",
        "type": "boolean"
       },
       "nvmeFcNamespaceLimit": {
        "description": "Maximum number of vluns that can be created for a nvme fc host",
        "type": "integer",
        "format": "int64"
       },
       "rcVvsetSupported": {
        "description": "Maximum number of volumes per Remote Copy group supported by the system",
        "type": "integer",
        "format": "int64"
       },
       "rmMinPeriod": {
        "description": "Async replication period minimum value",
        "type": "integer",
        "format": "int64"
       }
      },
      "description": "OS related mvars",
      "descriptionKey": "SCHEMA_OS_MVARS",
      "title": "*osinfo.MVars"
     },
     "systemWWN": {
      "description": "WWN of the array",
      "type": "string"
     },
     "tpdConstants": {
      "description": "OS related TPD constants",
      "type": "string"
     },
     "uid": {
      "description": "Unique Identifier of the resource",
      "type": "string"
     },
     "uri": {
      "description": "URI of the resource",
      "type": "string"
     },
     "v3Constants": {
      "type": "object",
      "properties": {
       "maxMigrationNameLength": {
        "description": "Maximum length of migration name",
        "type": "integer",
        "format": "int64"
       },
       "maxVMESettingDescriptionLength": {
        "description": "Maximum length of VME setting description",
        "type": "integer",
        "format": "int"
       },
       "maxVMESettingNameLength": {
        "description": "Maximum length of VME setting name",
        "type": "integer",
        "format": "int"
       },
       "migrationVVsetSizeLimitTb": {
        "description": "Maximum size of a VVset that can be migrated.",
        "type": "integer",
        "format": "int64"
       }
      },
      "description": "Concorde related constants",
      "descriptionKey": "SCHEMA_V3_CONSTANTS",
      "title": "*osinfo.V3Constants"
     }
    }
   },
   "port.BulkEditPort": {
    "type": "object",
    "required": [
     "portType"
    ],
    "properties": {
     "editISCSIPorts": {
      "description": "Edit ISCSI ports",
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "enablePeer": {
         "description": "Indicates if the port is enabled for peer persistence",
         "type": "boolean"
        },
        "label": {
         "description": "Label",
         "type": "string"
        },
        "mtu": {
         "description": "Maximum transmission unit (MTU) size",
         "type": "string"
        },
        "pfc": {
         "description": "Flow control setting of the port",
         "title": "flowcontrol.Enum",
         "enum": [
          "PORT_PFC_NONE",
          "PORT_PFC_ETH_PAUSE",
          "PORT_PFC_DCB"
         ],
         "type": "string"
        },
        "uid": {
         "description": "Unique Identifier of the resource",
         "type": "string"
        },
        "vlans": {
         "description": "Port VLANs information",
         "type": "array",
         "items": {
          "type": "object",
          "required": [
           "vlanId"
          ],
          "properties": {
           "gatewayAddress": {
            "description": "VLAN Gateway address for the iSCSI port",
            "type": "string"
           },
           "ipAddress": {
            "description": "VLAN IP address for the iSCSI port",
            "type": "string"
           },
           "sendTargetGroupTag": {
            "description": "The SendTargets Group Tag (STGT) for the iSCSI port",
            "type": "integer",
            "format": "int32"
           },
           "subnetMask": {
            "description": "VLAN Subnet mask for the iSCSI port",
            "type": "string"
           },
           "vlanId": {
            "description": "VLAN id for the iSCSI port",
            "type": "string"
           }
          },
          "title": "port.EditISCSIVLAN"
         }
        }
       },
       "title": "port.EditISCSIPortWithUid"
      }
     },
     "portType": {
      "description": "Edit port type based on the device it is connected to",
      "title": "bulkeditporttype.Enum",
      "enum": [
       "ISCSI"
      ],
      "type": "string"
     }
    }
   },
   "port.Bulk_edit_ports": {
    "type": "BULK_EDIT",
    "fullType": "port.BulkEditPort",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: BULK_EDIT",
      "type": "string"
     },
     "parameters": {
      "type": "object",
      "required": [
       "portType"
      ],
      "properties": {
       "editISCSIPorts": {
        "description": "Edit ISCSI ports",
        "type": "array",
        "items": {
         "type": "object",
         "properties": {
          "enablePeer": {
           "description": "Indicates if the port is enabled for peer persistence",
           "type": "boolean"
          },
          "label": {
           "description": "Label",
           "type": "string"
          },
          "mtu": {
           "description": "Maximum transmission unit (MTU) size",
           "type": "string"
          },
          "pfc": {
           "description": "Flow control setting of the port",
           "title": "flowcontrol.Enum",
           "enum": [
            "PORT_PFC_NONE",
            "PORT_PFC_ETH_PAUSE",
            "PORT_PFC_DCB"
           ],
           "type": "string"
          },
          "uid": {
           "description": "Unique Identifier of the resource",
           "type": "string"
          },
          "vlans": {
           "description": "Port VLANs information",
           "type": "array",
           "items": {
            "type": "object",
            "required": [
             "vlanId"
            ],
            "properties": {
             "gatewayAddress": {
              "description": "VLAN Gateway address for the iSCSI port",
              "type": "string"
             },
             "ipAddress": {
              "description": "VLAN IP address for the iSCSI port",
              "type": "string"
             },
             "sendTargetGroupTag": {
              "description": "The SendTargets Group Tag (STGT) for the iSCSI port",
              "type": "integer",
              "format": "int32"
             },
             "subnetMask": {
              "description": "VLAN Subnet mask for the iSCSI port",
              "type": "string"
             },
             "vlanId": {
              "description": "VLAN id for the iSCSI port",
              "type": "string"
             }
            },
            "title": "port.EditISCSIVLAN"
           }
          }
         },
         "title": "port.EditISCSIPortWithUid"
        }
       },
       "portType": {
        "description": "Edit port type based on the device it is connected to",
        "title": "bulkeditporttype.Enum",
        "enum": [
         "ISCSI"
        ],
        "type": "string"
       }
      },
      "description": "Parameters for a custom action",
      "descriptionKey": "SCHEMA_CUSTOM_ACTION_PROPS"
     }
    },
    "description": "Bulk edit provided ports",
    "descriptionKey": "BULK_EDIT_PORT_DESCRIPTION",
    "title": "BULK_EDIT",
    "example": {
     "action": "BULK_EDIT",
     "parameters": {
      "editISCSIPorts": [
       {
        "enablePeer": false,
        "label": "testing",
        "mtu": "9000",
        "pfc": "PORT_PFC_ETH_PAUSE",
        "uid": "a45deab3c9350428a35ed03d487c7f72",
        "vlans": [
         {
          "gatewayAddress": "10.20.30.1",
          "ipAddress": "10.20.30.47",
          "sendTargetGroupTag": 500,
          "subnetMask": "255.255.248.0",
          "vlanId": "100"
         }
        ]
       },
       {
        "enablePeer": false,
        "label": "testing",
        "mtu": "9000",
        "pfc": "PORT_PFC_ETH_PAUSE",
        "uid": "579d23d9cdbefea427a710bf5aae5634",
        "vlans": [
         {
          "ipAddress": "10.20.30.70",
          "sendTargetGroupTag": 100,
          "subnetMask": "255.255.248.0",
          "vlanId": ""
         }
        ]
       }
      ],
      "portType": "ISCSI"
     }
    }
   },
   "port.ClearPortRCIP": {
    "type": "object",
    "properties": {
     "ipType": {
      "description": "IP type of RCIP port",
      "type": "string"
     }
    }
   },
   "port.Clear_Port": {
    "type": "CLEAR",
    "fullType": "shared.EmptyBody",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: CLEAR",
      "type": "string"
     }
    },
    "description": "Clear a port",
    "descriptionKey": "PORT_CLEAR_DESCRIPTION",
    "title": "CLEAR",
    "example": {
     "action": "CLEAR"
    }
   },
   "port.Disable_Port": {
    "type": "DISABLE",
    "fullType": "shared.EmptyBody",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: DISABLE",
      "type": "string"
     }
    },
    "description": "Disable a port",
    "descriptionKey": "PORT_DISABLE_DESCRIPTION",
    "title": "DISABLE",
    "example": {
     "action": "DISABLE"
    }
   },
   "port.EditPortFC": {
    "type": "object",
    "properties": {
     "configMode": {
      "description": "Connection mode of the port",
      "type": "string"
     },
     "connectionType": {
      "description": "port connection type",
      "type": "string"
     },
     "interuptCoalesce": {
      "description": "Interupt Coalesce",
      "type": "string"
     },
     "label": {
      "description": "Label",
      "type": "string"
     },
     "speedConfigured": {
      "description": "Speed that is configured to run as",
      "type": "string"
     },
     "uniqueWWN": {
      "description": "Unique WWN setting",
      "type": "string"
     },
     "vcn": {
      "description": "VLUN change notification",
      "type": "string"
     }
    }
   },
   "port.EditPortISCSI": {
    "type": "object",
    "required": [
     "vlans"
    ],
    "properties": {
     "enablePeer": {
      "description": "Indicates if the port is enabled for peer persistence",
      "type": "boolean"
     },
     "label": {
      "description": "Label",
      "type": "string"
     },
     "mtu": {
      "description": "Maximum transmission unit (MTU) size",
      "type": "string"
     },
     "pfc": {
      "description": "Flow control setting of the port",
      "title": "flowcontrol.Enum",
      "enum": [
       "PORT_PFC_NONE",
       "PORT_PFC_ETH_PAUSE",
       "PORT_PFC_DCB"
      ],
      "type": "string"
     },
     "vlans": {
      "description": "Port VLANs information",
      "type": "array",
      "items": {
       "type": "object",
       "required": [
        "vlanId"
       ],
       "properties": {
        "gatewayAddress": {
         "description": "VLAN Gateway address for the iSCSI port",
         "type": "string"
        },
        "ipAddress": {
         "description": "VLAN IP address for the iSCSI port",
         "type": "string"
        },
        "sendTargetGroupTag": {
         "description": "The SendTargets Group Tag (STGT) for the iSCSI port",
         "type": "integer",
         "format": "int32"
        },
        "subnetMask": {
         "description": "VLAN Subnet mask for the iSCSI port",
         "type": "string"
        },
        "vlanId": {
         "description": "VLAN id for the iSCSI port",
         "type": "string"
        }
       },
       "title": "port.EditISCSIVLAN"
      }
     }
    },
    "example": {
     "label": "testLabel",
     "mtu": "1500",
     "pfc": "PORT_PFC_ETH_PAUSE",
     "enablePeer": false,
     "vlans": [
      {
       "ipAddress": "10.20.30.40",
       "subnetMask": "255.255.248.0",
       "gatewayAddress": "10.20.30.1",
       "sendTargetGroupTag": 222,
       "vlanId": ""
      },
      {
       "ipAddress": "10.20.30.50",
       "subnetMask": "255.255.248.0",
       "gatewayAddress": "10.20.30.1",
       "vlanId": "100"
      }
     ]
    }
   },
   "port.EditPortNVMF": {
    "type": "object",
    "required": [
     "vlans"
    ],
    "properties": {
     "label": {
      "description": "Label",
      "type": "string"
     },
     "mtu": {
      "description": "Maximum transmission unit (MTU) size",
      "type": "string"
     },
     "pfc": {
      "description": "Flow control setting of the port",
      "title": "flowcontrol.Enum",
      "enum": [
       "PORT_PFC_NONE",
       "PORT_PFC_ETH_PAUSE",
       "PORT_PFC_DCB"
      ],
      "type": "string"
     },
     "vlans": {
      "description": "Port VLANs information",
      "type": "array",
      "items": {
       "type": "object",
       "required": [
        "vlanId"
       ],
       "properties": {
        "eth": {
         "description": "Ethernet name used by the NVMe port",
         "type": "string"
        },
        "flowControl": {
         "description": "Flow control setting of the port",
         "type": "string"
        },
        "gatewayAddress": {
         "description": "VLAN Gateway address for the iSCSI port",
         "type": "string"
        },
        "ipAddress": {
         "description": "VLAN IP address for the iSCSI port",
         "type": "string"
        },
        "mtu": {
         "description": "Maximum transmission unit (MTU) size",
         "type": "string"
        },
        "nqn": {
         "description": "NVMe qualified name of the NVMe port",
         "type": "string"
        },
        "prefixLength": {
         "description": "Prefix length of the NVMe port",
         "type": "integer",
         "format": "int32"
        },
        "vlanId": {
         "description": "VLAN id for the iSCSI port",
         "type": "string"
        }
       },
       "title": "port.NVMFVLAN"
      }
     }
    }
   },
   "port.EditPortRCIP": {
    "type": "object",
    "properties": {
     "gatewayAddress": {
      "description": "Gateway Address of IP port",
      "type": "string"
     },
     "gatewayAddressV6": {
      "description": "IPV6 Gateway Address of IP port",
      "type": "string"
     },
     "ipAddress": {
      "description": "IP address of IP port",
      "type": "string"
     },
     "ipAddressV6": {
      "description": "IPV6 address of IP port",
      "type": "string"
     },
     "mtu": {
      "description": "Maximum transmission unit (MTU) size",
      "type": "string"
     },
     "netMask": {
      "description": "NetMask of IP port",
      "type": "string"
     },
     "netMaskV6": {
      "description": "IPV6 NetMask of IP port",
      "type": "string"
     },
     "speedConfigured": {
      "description": "Speed that is configured to run as",
      "type": "string"
     }
    }
   },
   "port.Enable_Port": {
    "type": "ENABLE",
    "fullType": "shared.EmptyBody",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: ENABLE",
      "type": "string"
     }
    },
    "description": "Enable a port",
    "descriptionKey": "PORT_ENABLE_DESCRIPTION",
    "title": "ENABLE",
    "example": {
     "action": "ENABLE"
    }
   },
   "port.Init_Port": {
    "type": "INIT",
    "fullType": "shared.EmptyBody",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: INIT",
      "type": "string"
     }
    },
    "description": "Initialize a port",
    "descriptionKey": "PORT_INIT_DESCRIPTION",
    "title": "INIT",
    "example": {
     "action": "INIT"
    }
   },
   "port.PingPortISCSI": {
    "type": "object",
    "properties": {
     "ipAddress": {
      "description": "IP address of iSCSI port",
      "type": "string"
     },
     "pingCount": {
      "description": "Count for the iSCSI ping operation",
      "type": "string"
     },
     "vlanId": {
      "description": "VLAN id for the iSCSI port",
      "type": "string"
     }
    }
   },
   "port.PingPortNVMF": {
    "type": "object",
    "properties": {
     "ipAddress": {
      "description": "IP address to be pinged on this NVMe port",
      "type": "string"
     },
     "pingCount": {
      "description": "Number of ping attempts on this NVMe port",
      "type": "integer",
      "format": "int32"
     },
     "pingSize": {
      "description": "Packet size to use for this ping request",
      "type": "integer",
      "format": "int32"
     },
     "pingWait": {
      "description": "Wait for replies time on this NVMe port",
      "type": "integer",
      "format": "int32"
     },
     "vlanId": {
      "description": "VLAN id for the iSCSI port",
      "type": "string"
     }
    }
   },
   "port.PingPortRCIP": {
    "type": "object",
    "properties": {
     "ipAddress": {
      "description": "IP address of RCIP port",
      "type": "string"
     },
     "packetSize": {
      "description": "Packet size for the RCIP ping operation",
      "type": "string"
     },
     "pingCount": {
      "description": "Count for the RCIP ping operation",
      "type": "string"
     },
     "waitTime": {
      "description": "Wait time for the RCIP ping operation",
      "type": "string"
     }
    }
   },
   "port.Ping_RCIP_Port": {
    "type": "PING",
    "fullType": "port.PingPortRCIP",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: PING",
      "type": "string"
     },
     "parameters": {
      "type": "object",
      "properties": {
       "ipAddress": {
        "description": "IP address of RCIP port",
        "type": "string"
       },
       "packetSize": {
        "description": "Packet size for the RCIP ping operation",
        "type": "string"
       },
       "pingCount": {
        "description": "Count for the RCIP ping operation",
        "type": "string"
       },
       "waitTime": {
        "description": "Wait time for the RCIP ping operation",
        "type": "string"
       }
      },
      "description": "Parameters for a custom action",
      "descriptionKey": "SCHEMA_CUSTOM_ACTION_PROPS"
     }
    },
    "description": "Ping a port\u003cbr\u003e\u003cbr\u003eBody of the request should contain parameters that are specific to the type of the port",
    "descriptionKey": "PORT_PING_DESCRIPTION",
    "title": "PING",
    "example": {
     "action": "PING",
     "parameters": {
      "ipAddress": "10.10.10.20",
      "pingCount": "1",
      "waitTime": "1",
      "packetSize": "56"
     }
    }
   },
   "port.Port": {
    "type": "object",
    "properties": {
     "cardType": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Type of the PCI card this port is on",
      "descriptionKey": "SCHEMA_PORT_CARDTYPE",
      "title": "*utils.I18nValue"
     },
     "class": {
      "description": "Fibre Channel class (can be either 2 or 3)",
      "type": "integer",
      "format": "int16"
     },
     "class2": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Class2 state and configuration",
      "descriptionKey": "SCHEMA_PORT_CLASS2",
      "title": "*utils.I18nValue"
     },
     "config": {
      "description": "Configuration state of port",
      "type": "string"
     },
     "configMode": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Connection mode of the port",
      "descriptionKey": "SCHEMA_PORT_CONFIGMODE",
      "title": "*utils.I18nValue"
     },
     "connectionType": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "port connection type",
      "descriptionKey": "SCHEMA_PORT_CONNECTIONTYPE",
      "title": "*utils.I18nValue"
     },
     "devices": {
      "description": "List of the connected devices",
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "name": {
         "description": "Name of the device",
         "type": "string"
        },
        "position": {
         "description": "Position of the device",
         "type": "integer",
         "format": "int32"
        }
       },
       "title": "port.ConnectedDevice"
      }
     },
     "displayname": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Name to be used for display purposes",
      "descriptionKey": "SCHEMA_DISPLAYNAME",
      "title": "*utils.I18nValue"
     },
     "domain": {
      "description": "Domain that the resource belongs to",
      "type": "string"
     },
     "enclosureCardId": {
      "description": "ID of the enclosure card",
      "type": "integer",
      "format": "int64"
     },
     "enclosureCardPCIUid": {
      "description": "UID of the enclosure card PCI card",
      "type": "string"
     },
     "enclosureCardUid": {
      "description": "Unique Identifier of the enclosure card",
      "type": "string"
     },
     "enclosureId": {
      "description": "ID of the enclosure",
      "type": "integer",
      "format": "int64"
     },
     "enclosureUid": {
      "description": "Unique Identifier of the enclosure",
      "type": "string"
     },
     "fcData": {
      "type": "object",
      "properties": {
       "nodeWWN": {
        "description": "nodeWWN of the FC port",
        "type": "string"
       },
       "portWWN": {
        "description": "portWWN of the FC port",
        "type": "string"
       }
      },
      "description": "FC port data",
      "descriptionKey": "SCHEMA_PORT_FCDATA",
      "title": "*port.PortFC"
     },
     "fileData": {
      "type": "object",
      "properties": {
       "failoverIPs": {
        "description": "Failover IP addresses of the File port",
        "type": "string"
       },
       "ipDisabled": {
        "description": "Indicates if the IP is disabled on the File port",
        "type": "boolean"
       },
       "linkState": {
        "description": "State of the resource",
        "type": "string"
       },
       "prefixLength": {
        "description": "Prefix length of File port",
        "type": "integer",
        "format": "int32"
       },
       "vlanId": {
        "description": "VLAN id for the iSCSI port",
        "type": "integer",
        "format": "int32"
       }
      },
      "description": "File port information",
      "descriptionKey": "SCHEMA_PORT_FILEDATA",
      "title": "*port.PortFile"
     },
     "fwVersion": {
      "description": "Firmware version",
      "type": "string"
     },
     "hostVirtualPorts": {
      "description": "Host virtual ports",
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "nodeWWN": {
         "description": "Node WWN of the virtual port",
         "type": "string"
        },
        "portLinkState": {
         "description": "Port link state",
         "title": "portlinkstate.Enum",
         "enum": [
          "LINK_STATE_CONFIG_WAIT",
          "LINK_STATE_ALPA_WAIT",
          "LINK_STATE_LOGIN_WAIT",
          "LINK_STATE_READY",
          "LINK_STATE_LOSS_SYNC",
          "LINK_STATE_ERROR",
          "LINK_STATE_XXX",
          "LINK_STATE_NONPARTICIPATE",
          "LINK_STATE_COREDUMP",
          "LINK_STATE_OFFLINE",
          "LINK_STATE_FWDEAD",
          "LINK_STATE_LINK_IDLE_FOR_RESET",
          "LINK_STATE_DHCP_IN_PROGRESS",
          "LINK_STATE_PENDING_RESET",
          "LINK_STATE_UNKNOWN"
         ],
         "type": "string"
        },
        "portType": {
         "description": "Virtual port type",
         "title": "porttype.Enum",
         "enum": [
          "PORT_TYPE_FREE",
          "PORT_TYPE_HOST",
          "PORT_TYPE_DISK",
          "PORT_TYPE_IPORT",
          "PORT_TYPE_RCFC",
          "PORT_TYPE_RCIP",
          "PORT_TYPE_ISCSI",
          "PORT_TYPE_PEER",
          "PORT_TYPE_CNA",
          "PORT_TYPE_FS",
          "PORT_TYPE_UNKNOWN"
         ],
         "type": "string"
        },
        "portWWN": {
         "description": "Port WWN of the virtual port",
         "type": "string"
        },
        "protocol": {
         "description": "Protocol of the Virtual port",
         "title": "portprotocol.Enum",
         "enum": [
          "PORT_PROTOCOL_UNKNOWN",
          "PORT_PROTOCOL_FC",
          "PORT_PROTOCOL_ISCSCI",
          "PORT_PROTOCOL_FCOE",
          "PORT_PROTOCOL_IP",
          "PORT_PROTOCOL_SAS",
          "PORT_PROTOCOL_NVME"
         ],
         "type": "string"
        },
        "vpi": {
         "description": "Virtual port index",
         "type": "integer",
         "format": "int32"
        }
       },
       "title": "port.HostVPort"
      }
     },
     "interuptCoalesce": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Interupt Coalesce",
      "descriptionKey": "SCHEMA_PORT_INTERUPTCOALESCE",
      "title": "*utils.I18nValue"
     },
     "ipData": {
      "type": "object",
      "properties": {
       "autoneg": {
        "description": "Auto negotiation state of IP port",
        "type": "boolean"
       },
       "delimitedMacAddress": {
        "description": "IP address of IP port",
        "type": "string"
       },
       "duplex": {
        "description": "Duplex state of IP port",
        "type": "string"
       },
       "gatewayAddress": {
        "description": "Gateway Address of IP port",
        "type": "string"
       },
       "gatewayAddressV6": {
        "description": "IPV6 Gateway Address of IP port",
        "type": "string"
       },
       "ipAddress": {
        "description": "IP address of IP port",
        "type": "string"
       },
       "ipAddressV6": {
        "description": "IPV6 address of IP port",
        "type": "string"
       },
       "macAddress": {
        "description": "IP address of IP port",
        "type": "string"
       },
       "mtu": {
        "description": "Maximum transmission unit (MTU) size",
        "type": "string"
       },
       "subnetMask": {
        "description": "NetMask of IP port",
        "type": "string"
       },
       "subnetMaskV6": {
        "description": "IPV6 NetMask of IP port",
        "type": "string"
       }
      },
      "description": "RCIP port data",
      "descriptionKey": "SCHEMA_PORT_IPDATA",
      "title": "*port.PortIP"
     },
     "iscsiData": {
      "type": "object",
      "properties": {
       "delimitedMacAddress": {
        "description": "MAC address of iSCSI port",
        "type": "string"
       },
       "eth": {
        "description": "iSCSI port Ethernet name",
        "type": "string"
       },
       "flowControl": {
        "description": "Flow control setting of the port",
        "type": "string"
       },
       "gatewayAddress": {
        "description": "Gateway Address of iSCSI port",
        "type": "string"
       },
       "iSNSPrimaryAddress": {
        "description": "Primary iSNS address",
        "type": "string"
       },
       "iSNSTcpPort": {
        "description": "iSNS TCP port",
        "type": "integer",
        "format": "int32"
       },
       "initName": {
        "description": "iSCSI name of iSCSI initiator",
        "type": "string"
       },
       "ipAddress": {
        "description": "IP address of iSCSI port",
        "type": "string"
       },
       "iscsiName": {
        "description": "iSCSI name of iSCSI port",
        "type": "string"
       },
       "lldpData": {
        "type": "object",
        "properties": {
         "chassisId": {
          "description": "Mac address of connected system",
          "type": "string"
         },
         "portDescription": {
          "description": "Description of port on connected system",
          "type": "string"
         },
         "portId": {
          "description": "Port id on connected system",
          "type": "string"
         },
         "systemDescription": {
          "description": "Description of system on connected port",
          "type": "string"
         },
         "systemName": {
          "description": "Name of connected system",
          "type": "string"
         }
        },
        "description": "Link Layer Discovery Protocol Data",
        "descriptionKey": "SCHEMA_PORT_LLDPD",
        "title": "*port.LLDPInfo"
       },
       "macAddress": {
        "description": "MAC address of iSCSI port",
        "type": "string"
       },
       "mtu": {
        "description": "Maximum transmission unit (MTU) size",
        "type": "string"
       },
       "peerEnabled": {
        "description": "Indicates if the port is enabled for peer persistence",
        "type": "boolean"
       },
       "sendTargetGroupTag": {
        "description": "Send target group of the iSCSI port",
        "type": "integer",
        "format": "int32"
       },
       "subnetMask": {
        "description": "NetMask of iSCSI port",
        "type": "string"
       },
       "supportsVlan": {
        "description": "Indicates if the port support VLAN",
        "type": "boolean"
       },
       "targetPortalGroupTag": {
        "description": "Target portal group of the iSCSI port",
        "type": "integer",
        "format": "int32"
       }
      },
      "description": "iSCSI port data",
      "descriptionKey": "SCHEMA_PORT_ISCSIDATA",
      "title": "*port.PortISCSI"
     },
     "label": {
      "description": "Label",
      "type": "string"
     },
     "manufacturing": {
      "type": "object",
      "properties": {
       "assemblyRev": {
        "description": "Assembly revision",
        "type": "string"
       },
       "checkSum": {
        "description": "Checksum",
        "type": "string"
       },
       "hpeModelName": {
        "description": "{vendor} model name",
        "type": "string"
       },
       "manufacturer": {
        "description": "Manufacturer name",
        "type": "string"
       },
       "model": {
        "description": "Model name",
        "type": "string"
       },
       "saleablePartNumber": {
        "description": "Saleable part number",
        "type": "string"
       },
       "saleableSerialNumber": {
        "description": "Saleable serial number",
        "type": "string"
       },
       "serialNumber": {
        "description": "Serial number",
        "type": "string"
       },
       "sparePartNumber": {
        "description": "Spare part number",
        "type": "string"
       }
      },
      "description": "Manufacturing information",
      "descriptionKey": "SCHEMA_MFG",
      "title": "*shared.ManufacturingData"
     },
     "mode": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Current mode the port is in",
      "descriptionKey": "SCHEMA_PORT_MODE",
      "title": "*utils.I18nValue"
     },
     "modeChange": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Indicates if the mode change is allowed or prohibited",
      "descriptionKey": "SCHEMA_PORT_MODE_CHANGE",
      "title": "*utils.I18nValue"
     },
     "name": {
      "description": "Name of the resource",
      "type": "string"
     },
     "nvmfData": {
      "type": "object",
      "properties": {
       "delimitedMacAddress": {
        "description": "MAC address of the NVMe port",
        "type": "string"
       },
       "eth": {
        "description": "Ethernet name used by the NVMe port",
        "type": "string"
       },
       "flowControl": {
        "description": "Flow control setting of the port",
        "type": "string"
       },
       "gatewayAddress": {
        "description": "Gateway of the NVMe port",
        "type": "string"
       },
       "ipAddress": {
        "description": "IP address of the NVMe port",
        "type": "string"
       },
       "lldpData": {
        "type": "object",
        "properties": {
         "chassisId": {
          "description": "Mac address of connected system",
          "type": "string"
         },
         "portDescription": {
          "description": "Description of port on connected system",
          "type": "string"
         },
         "portId": {
          "description": "Port id on connected system",
          "type": "string"
         },
         "systemDescription": {
          "description": "Description of system on connected port",
          "type": "string"
         },
         "systemName": {
          "description": "Name of connected system",
          "type": "string"
         }
        },
        "description": "Link Layer Discovery Protocol Data",
        "descriptionKey": "SCHEMA_PORT_LLDPD",
        "title": "*port.LLDPInfo"
       },
       "macAddress": {
        "description": "MAC address of the NVMe port",
        "type": "string"
       },
       "mode": {
        "type": "object",
        "properties": {
         "args": {
          "description": "Array of optional parameters to be used when formatting the text",
          "type": "array",
          "items": {
           "type": "AnyType"
          }
         },
         "default": {
          "description": "Text in the default language",
          "type": "string"
         },
         "key": {
          "description": "Key of the message in the i18n catalog",
          "type": "string"
         }
        },
        "description": "Current mode the port is in",
        "descriptionKey": "SCHEMA_PORT_MODE",
        "title": "*utils.I18nValue"
       },
       "mtu": {
        "description": "Maximum transmission unit (MTU) size",
        "type": "string"
       },
       "nqn": {
        "description": "NVMe qualified name of the NVMe port",
        "type": "string"
       },
       "pciDev": {
        "description": "PCI device used by the NVMe port",
        "type": "string"
       },
       "prefixLength": {
        "description": "Prefix length of the NVMe port",
        "type": "integer",
        "format": "int32"
       },
       "protocol": {
        "description": "Current protocol the port is in",
        "title": "portprotocol.Enum",
        "enum": [
         "PORT_PROTOCOL_UNKNOWN",
         "PORT_PROTOCOL_FC",
         "PORT_PROTOCOL_ISCSCI",
         "PORT_PROTOCOL_FCOE",
         "PORT_PROTOCOL_IP",
         "PORT_PROTOCOL_SAS",
         "PORT_PROTOCOL_NVME"
        ],
        "type": "string"
       },
       "rate": {
        "type": "object",
        "properties": {
         "args": {
          "description": "Array of optional parameters to be used when formatting the text",
          "type": "array",
          "items": {
           "type": "AnyType"
          }
         },
         "default": {
          "description": "Text in the default language",
          "type": "string"
         },
         "key": {
          "description": "Key of the message in the i18n catalog",
          "type": "string"
         }
        },
        "description": "Configured speed of the NVMe port",
        "descriptionKey": "SCHEMA_PORTNVMF_RATE",
        "title": "*utils.I18nValue"
       },
       "state": {
        "description": "State of the resource",
        "title": "portlinkstate.Enum",
        "enum": [
         "LINK_STATE_CONFIG_WAIT",
         "LINK_STATE_ALPA_WAIT",
         "LINK_STATE_LOGIN_WAIT",
         "LINK_STATE_READY",
         "LINK_STATE_LOSS_SYNC",
         "LINK_STATE_ERROR",
         "LINK_STATE_XXX",
         "LINK_STATE_NONPARTICIPATE",
         "LINK_STATE_COREDUMP",
         "LINK_STATE_OFFLINE",
         "LINK_STATE_FWDEAD",
         "LINK_STATE_LINK_IDLE_FOR_RESET",
         "LINK_STATE_DHCP_IN_PROGRESS",
         "LINK_STATE_PENDING_RESET",
         "LINK_STATE_UNKNOWN"
        ],
        "type": "string"
       },
       "transport": {
        "type": "object",
        "properties": {
         "args": {
          "description": "Array of optional parameters to be used when formatting the text",
          "type": "array",
          "items": {
           "type": "AnyType"
          }
         },
         "default": {
          "description": "Text in the default language",
          "type": "string"
         },
         "key": {
          "description": "Key of the message in the i18n catalog",
          "type": "string"
         }
        },
        "description": "Transport type of the NVMe port",
        "descriptionKey": "SCHEMA_PORTNVMF_TRANSPORT",
        "title": "*utils.I18nValue"
       },
       "vlanCount": {
        "description": "Number of configured VLANs on this NVMe port",
        "type": "integer",
        "format": "int32"
       },
       "vlans": {
        "description": "Port VLANs information",
        "type": "array",
        "items": {
         "type": "object",
         "required": [
          "vlanId"
         ],
         "properties": {
          "eth": {
           "description": "Ethernet name used by the NVMe port",
           "type": "string"
          },
          "flowControl": {
           "description": "Flow control setting of the port",
           "type": "string"
          },
          "gatewayAddress": {
           "description": "VLAN Gateway address for the iSCSI port",
           "type": "string"
          },
          "ipAddress": {
           "description": "VLAN IP address for the iSCSI port",
           "type": "string"
          },
          "mtu": {
           "description": "Maximum transmission unit (MTU) size",
           "type": "string"
          },
          "nqn": {
           "description": "NVMe qualified name of the NVMe port",
           "type": "string"
          },
          "prefixLength": {
           "description": "Prefix length of the NVMe port",
           "type": "integer",
           "format": "int32"
          },
          "vlanId": {
           "description": "VLAN id for the iSCSI port",
           "type": "string"
          }
         },
         "title": "port.NVMFVLAN"
        }
       }
      },
      "description": "NVMe/TCP information for the port",
      "descriptionKey": "SCHEMA_PORT_NVMFDATA",
      "title": "*port.PortNVMF"
     },
     "partner": {
      "type": "object",
      "properties": {
       "nodeWwnOrName": {
        "description": "Node WWN (for FC) or iSCSI name (for iSCSI)",
        "type": "string"
       },
       "portWwnOrIp": {
        "description": "Port WWN (for FC) or IP address (for iSCSI)",
        "type": "string"
       },
       "position": {
        "type": "object",
        "properties": {
         "node": {
          "description": "Port position node number",
          "type": "integer",
          "format": "int64"
         },
         "port": {
          "description": "Port position port number",
          "type": "integer",
          "format": "int64"
         },
         "slot": {
          "description": "Port position slot number",
          "type": "integer",
          "format": "int64"
         }
        },
        "description": "Partner port position in the node",
        "descriptionKey": "SCHEMA_PARTNERPORT_POSITION",
        "title": "*shared.PortPosition"
       },
       "state": {
        "description": "State of the RC port",
        "type": "string"
       }
      },
      "description": "Partner port information",
      "descriptionKey": "SCHEMA_PORT_PARTNER",
      "title": "*port.PartnerPort"
     },
     "portLinkState": {
      "description": "Port link state",
      "title": "portlinkstate.Enum",
      "enum": [
       "LINK_STATE_CONFIG_WAIT",
       "LINK_STATE_ALPA_WAIT",
       "LINK_STATE_LOGIN_WAIT",
       "LINK_STATE_READY",
       "LINK_STATE_LOSS_SYNC",
       "LINK_STATE_ERROR",
       "LINK_STATE_XXX",
       "LINK_STATE_NONPARTICIPATE",
       "LINK_STATE_COREDUMP",
       "LINK_STATE_OFFLINE",
       "LINK_STATE_FWDEAD",
       "LINK_STATE_LINK_IDLE_FOR_RESET",
       "LINK_STATE_DHCP_IN_PROGRESS",
       "LINK_STATE_PENDING_RESET",
       "LINK_STATE_UNKNOWN"
      ],
      "type": "string"
     },
     "portMode": {
      "description": "Current mode the port is in",
      "title": "portmode.Enum",
      "enum": [
       "PORT_MODE_SUSPENDED",
       "PORT_MODE_TARGET",
       "PORT_MODE_INITIATOR",
       "PORT_MODE_PEER",
       "PORT_MODE_UNKNOWN"
      ],
      "type": "string"
     },
     "portProtocol": {
      "description": "Current protocol the port is in",
      "title": "portprotocol.Enum",
      "enum": [
       "PORT_PROTOCOL_UNKNOWN",
       "PORT_PROTOCOL_FC",
       "PORT_PROTOCOL_ISCSCI",
       "PORT_PROTOCOL_FCOE",
       "PORT_PROTOCOL_IP",
       "PORT_PROTOCOL_SAS",
       "PORT_PROTOCOL_NVME"
      ],
      "type": "string"
     },
     "portSfp": {
      "type": "object",
      "properties": {
       "fwVersion": {
        "description": "Firmware version",
        "type": "string"
       },
       "manufacturing": {
        "type": "object",
        "properties": {
         "assemblyRev": {
          "description": "Assembly revision",
          "type": "string"
         },
         "checkSum": {
          "description": "Checksum",
          "type": "string"
         },
         "hpeModelName": {
          "description": "{vendor} model name",
          "type": "string"
         },
         "manufacturer": {
          "description": "Manufacturer name",
          "type": "string"
         },
         "model": {
          "description": "Model name",
          "type": "string"
         },
         "saleablePartNumber": {
          "description": "Saleable part number",
          "type": "string"
         },
         "saleableSerialNumber": {
          "description": "Saleable serial number",
          "type": "string"
         },
         "serialNumber": {
          "description": "Serial number",
          "type": "string"
         },
         "sparePartNumber": {
          "description": "Spare part number",
          "type": "string"
         }
        },
        "description": "Manufacturing information",
        "descriptionKey": "SCHEMA_MFG",
        "title": "*shared.ManufacturingData"
       },
       "qualified": {
        "description": "Indicates if the SFP is qualified or not",
        "type": "boolean"
       },
       "rxLossPin": {
        "type": "object",
        "properties": {
         "args": {
          "description": "Array of optional parameters to be used when formatting the text",
          "type": "array",
          "items": {
           "type": "AnyType"
          }
         },
         "default": {
          "description": "Text in the default language",
          "type": "string"
         },
         "key": {
          "description": "Key of the message in the i18n catalog",
          "type": "string"
         }
        },
        "description": "RX loss pin position.  If position is HI, RX loss of signal",
        "descriptionKey": "SCHEMA_PORTSFP_RXLOSSPIN",
        "title": "*utils.I18nValue"
       },
       "rxPowerLow": {
        "description": "Indicates if RX power is low or not",
        "type": "boolean"
       },
       "speed": {
        "description": "Speed in bits per second",
        "type": "integer",
        "format": "int64"
       },
       "state": {
        "type": "object",
        "properties": {
         "detailed": {
          "type": "object",
          "properties": {
           "args": {
            "description": "Array of optional parameters to be used when formatting the text",
            "type": "array",
            "items": {
             "type": "AnyType"
            }
           },
           "default": {
            "description": "Text in the default language",
            "type": "string"
           },
           "key": {
            "description": "Key of the message in the i18n catalog",
            "type": "string"
           }
          }
         },
         "overall": {
          "description": "Overall state of the resource",
          "title": "overallstate.Enum",
          "enum": [
           "STATE_UNKNOWN",
           "STATE_NORMAL",
           "STATE_WARNING",
           "STATE_DEGRADED",
           "STATE_FAILED",
           "STATE_NOT_APPLICABLE",
           "STATE_NEW"
          ],
          "type": "string"
         }
        },
        "description": "State of the resource",
        "descriptionKey": "SCHEMA_STATE",
        "title": "shared.ResourceState"
       },
       "supportDDM": {
        "description": "Indicates if the SFP supports DDM",
        "type": "boolean"
       },
       "txDisablePin": {
        "type": "object",
        "properties": {
         "args": {
          "description": "Array of optional parameters to be used when formatting the text",
          "type": "array",
          "items": {
           "type": "AnyType"
          }
         },
         "default": {
          "description": "Text in the default language",
          "type": "string"
         },
         "key": {
          "description": "Key of the message in the i18n catalog",
          "type": "string"
         }
        },
        "description": "TX disable pin position.  If position is HI, TX laser is disabled",
        "descriptionKey": "SCHEMA_PORTSFP_TXDISABLEPIN",
        "title": "*utils.I18nValue"
       },
       "txFaultPin": {
        "type": "object",
        "properties": {
         "args": {
          "description": "Array of optional parameters to be used when formatting the text",
          "type": "array",
          "items": {
           "type": "AnyType"
          }
         },
         "default": {
          "description": "Text in the default language",
          "type": "string"
         },
         "key": {
          "description": "Key of the message in the i18n catalog",
          "type": "string"
         }
        },
        "description": "TX fault pin position.  If position is HI, TX fault",
        "descriptionKey": "SCHEMA_PORTSFP_TXFAULTPIN",
        "title": "*utils.I18nValue"
       }
      },
      "description": "Port SFP information",
      "descriptionKey": "SCHEMA_PORTSFP",
      "title": "*port.PortSfp"
     },
     "portType": {
      "description": "Type of the port based on the device it is connected to",
      "title": "porttype.Enum",
      "enum": [
       "PORT_TYPE_FREE",
       "PORT_TYPE_HOST",
       "PORT_TYPE_DISK",
       "PORT_TYPE_IPORT",
       "PORT_TYPE_RCFC",
       "PORT_TYPE_RCIP",
       "PORT_TYPE_ISCSI",
       "PORT_TYPE_PEER",
       "PORT_TYPE_CNA",
       "PORT_TYPE_FS",
       "PORT_TYPE_UNKNOWN"
      ],
      "type": "string"
     },
     "position": {
      "type": "object",
      "properties": {
       "node": {
        "description": "Port position node number",
        "type": "integer",
        "format": "int64"
       },
       "port": {
        "description": "Port position port number",
        "type": "integer",
        "format": "int64"
       },
       "slot": {
        "description": "Port position slot number",
        "type": "integer",
        "format": "int64"
       }
      },
      "description": "Port position in the node",
      "descriptionKey": "SCHEMA_PORT_POSITION",
      "title": "*shared.PortPosition"
     },
     "protocol": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Current protocol the port is in",
      "descriptionKey": "SCHEMA_PORT_PROTOCOL",
      "title": "*utils.I18nValue"
     },
     "revision": {
      "description": "Revision of the Host Bus Adapter",
      "type": "string"
     },
     "smartSAN": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Smart SAN status",
      "descriptionKey": "SCHEMA_SMART_SAN",
      "title": "*utils.I18nValue"
     },
     "speedActual": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Actual speed that port is running at",
      "descriptionKey": "SCHEMA_PORT_SPEEDACTUAL",
      "title": "*utils.I18nValue"
     },
     "speedConfigured": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Speed that is configured to run as",
      "descriptionKey": "SCHEMA_PORT_SPEEDCONFIGURED",
      "title": "*utils.I18nValue"
     },
     "speedMax": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Maximum speed that port can run at",
      "descriptionKey": "SCHEMA_PORT_SPEEDMAX",
      "title": "*utils.I18nValue"
     },
     "speedMin": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Minimum speed that port can run at",
      "descriptionKey": "SCHEMA_PORT_SPEEDMIN",
      "title": "*utils.I18nValue"
     },
     "state": {
      "type": "object",
      "properties": {
       "detailed": {
        "description": "Array of the detailed states of the resource",
        "type": "array",
        "items": {
         "type": "object",
         "properties": {
          "args": {
           "description": "Array of optional parameters to be used when formatting the text",
           "type": "array",
           "items": {
            "type": "AnyType"
           }
          },
          "default": {
           "description": "Text in the default language",
           "type": "string"
          },
          "key": {
           "description": "Key of the message in the i18n catalog",
           "type": "string"
          }
         },
         "title": "utils.I18nValue"
        }
       },
       "overall": {
        "description": "Overall state of the resource",
        "title": "overallstate.Enum",
        "enum": [
         "STATE_UNKNOWN",
         "STATE_NORMAL",
         "STATE_WARNING",
         "STATE_DEGRADED",
         "STATE_FAILED",
         "STATE_NOT_APPLICABLE",
         "STATE_NEW"
        ],
        "type": "string"
       }
      },
      "description": "State of the resource",
      "descriptionKey": "SCHEMA_STATE",
      "title": "shared.ResourceState"
     },
     "stateDescription": {
      "description": "Detailed descriptions of the port state",
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "args": {
         "description": "Array of optional parameters to be used when formatting the text",
         "type": "array",
         "items": {
          "type": "AnyType"
         }
        },
        "default": {
         "description": "Text in the default language",
         "type": "string"
        },
        "key": {
         "description": "Key of the message in the i18n catalog",
         "type": "string"
        }
       },
       "title": "utils.I18nValue"
      }
     },
     "systemWWN": {
      "description": "WWN of the array",
      "type": "string"
     },
     "tgtModeWriteOpt": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Target mode write optimization setting",
      "descriptionKey": "SCHEMA_PORT_TMWO",
      "title": "*utils.I18nValue"
     },
     "type": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Type of the port based on the device it is connected to",
      "descriptionKey": "SCHEMA_PORT_TYPE",
      "title": "*utils.I18nValue"
     },
     "uid": {
      "description": "Unique Identifier of the resource",
      "type": "string"
     },
     "uniqueWWN": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Unique WWN setting",
      "descriptionKey": "SCHEMA_PORT_UNIQUEWWN",
      "title": "*utils.I18nValue"
     },
     "uri": {
      "description": "URI of the resource",
      "type": "string"
     },
     "vcn": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "VLUN change notification",
      "descriptionKey": "SCHEMA_PORT_VCN",
      "title": "*utils.I18nValue"
     },
     "virtualPorts": {
      "description": "Virtual ports",
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "nodeWWN": {
         "description": "Node WWN of the virtual port",
         "type": "string"
        },
        "portLinkState": {
         "description": "Port link state",
         "title": "portlinkstate.Enum",
         "enum": [
          "LINK_STATE_CONFIG_WAIT",
          "LINK_STATE_ALPA_WAIT",
          "LINK_STATE_LOGIN_WAIT",
          "LINK_STATE_READY",
          "LINK_STATE_LOSS_SYNC",
          "LINK_STATE_ERROR",
          "LINK_STATE_XXX",
          "LINK_STATE_NONPARTICIPATE",
          "LINK_STATE_COREDUMP",
          "LINK_STATE_OFFLINE",
          "LINK_STATE_FWDEAD",
          "LINK_STATE_LINK_IDLE_FOR_RESET",
          "LINK_STATE_DHCP_IN_PROGRESS",
          "LINK_STATE_PENDING_RESET",
          "LINK_STATE_UNKNOWN"
         ],
         "type": "string"
        },
        "portWWN": {
         "description": "Port WWN of the virtual port",
         "type": "string"
        }
       },
       "title": "port.NPIVPort"
      }
     },
     "vlans": {
      "description": "Port VLANs information",
      "type": "array",
      "items": {
       "type": "object",
       "required": [
        "vlanId"
       ],
       "properties": {
        "flowControl": {
         "description": "Flow control setting of the port",
         "type": "string"
        },
        "gatewayAddress": {
         "description": "VLAN Gateway address for the iSCSI port",
         "type": "string"
        },
        "iSNSPrimaryAddress": {
         "description": "The iSNS server IP address",
         "type": "string"
        },
        "iSNSTcpPort": {
         "description": "TCP port number for the iSNS server",
         "type": "string"
        },
        "ipAddress": {
         "description": "VLAN IP address for the iSCSI port",
         "type": "string"
        },
        "mtu": {
         "description": "Maximum transmission unit (MTU) size",
         "type": "string"
        },
        "sendTargetGroupTag": {
         "description": "The SendTargets Group Tag (STGT) for the iSCSI port",
         "type": "integer",
         "format": "int32"
        },
        "subnetMask": {
         "description": "VLAN Subnet mask for the iSCSI port",
         "type": "string"
        },
        "targetPortalGroupTag": {
         "description": "The Target portal Group Tag (TPGT) for the iSCSI port",
         "type": "integer",
         "format": "int32"
        },
        "vlanId": {
         "description": "VLAN id for the iSCSI port",
         "type": "string"
        }
       },
       "title": "port.VLAN"
      }
     }
    }
   },
   "port_internal.InternalPort": {
    "type": "object",
    "properties": {
     "cardType": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Type of the PCI card this port is on",
      "descriptionKey": "SCHEMA_PORT_CARDTYPE",
      "title": "*utils.I18nValue"
     },
     "config": {
      "description": "Configuration state of port",
      "type": "string"
     },
     "configMode": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Connection mode of the port",
      "descriptionKey": "SCHEMA_PORT_CONFIGMODE",
      "title": "*utils.I18nValue"
     },
     "connectionType": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "port connection type",
      "descriptionKey": "SCHEMA_PORT_CONNECTIONTYPE",
      "title": "*utils.I18nValue"
     },
     "displayname": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Name to be used for display purposes",
      "descriptionKey": "SCHEMA_DISPLAYNAME",
      "title": "*utils.I18nValue"
     },
     "domain": {
      "description": "Domain that the resource belongs to",
      "type": "string"
     },
     "enclosureCardId": {
      "description": "ID of the enclosure card",
      "type": "integer",
      "format": "int64"
     },
     "enclosureCardUid": {
      "description": "Unique Identifier of the enclosure card",
      "type": "string"
     },
     "enclosureId": {
      "description": "ID of the enclosure",
      "type": "integer",
      "format": "int64"
     },
     "enclosureUid": {
      "description": "Unique Identifier of the enclosure",
      "type": "string"
     },
     "fwVersion": {
      "description": "Firmware version",
      "type": "string"
     },
     "ipData": {
      "type": "object",
      "properties": {
       "autoneg": {
        "description": "Auto negotiation state of IP port",
        "type": "boolean"
       },
       "delimitedMacAddress": {
        "description": "IP address of IP port",
        "type": "string"
       },
       "duplex": {
        "description": "Duplex state of IP port",
        "type": "string"
       },
       "gatewayAddress": {
        "description": "Gateway Address of IP port",
        "type": "string"
       },
       "gatewayAddressV6": {
        "description": "IPV6 Gateway Address of IP port",
        "type": "string"
       },
       "ipAddress": {
        "description": "IP address of IP port",
        "type": "string"
       },
       "ipAddressV6": {
        "description": "IPV6 address of IP port",
        "type": "string"
       },
       "macAddress": {
        "description": "IP address of IP port",
        "type": "string"
       },
       "mtu": {
        "description": "Maximum transmission unit (MTU) size",
        "type": "string"
       },
       "subnetMask": {
        "description": "NetMask of IP port",
        "type": "string"
       },
       "subnetMaskV6": {
        "description": "IPV6 NetMask of IP port",
        "type": "string"
       }
      },
      "description": "RCIP port data",
      "descriptionKey": "SCHEMA_PORT_IPDATA",
      "title": "*port_internal.PortIP"
     },
     "manufacturing": {
      "type": "object",
      "properties": {
       "assemblyRev": {
        "description": "Assembly revision",
        "type": "string"
       },
       "checkSum": {
        "description": "Checksum",
        "type": "string"
       },
       "hpeModelName": {
        "description": "{vendor} model name",
        "type": "string"
       },
       "manufacturer": {
        "description": "Manufacturer name",
        "type": "string"
       },
       "model": {
        "description": "Model name",
        "type": "string"
       },
       "saleablePartNumber": {
        "description": "Saleable part number",
        "type": "string"
       },
       "saleableSerialNumber": {
        "description": "Saleable serial number",
        "type": "string"
       },
       "serialNumber": {
        "description": "Serial number",
        "type": "string"
       },
       "sparePartNumber": {
        "description": "Spare part number",
        "type": "string"
       }
      },
      "description": "Manufacturing information",
      "descriptionKey": "SCHEMA_MFG",
      "title": "*shared.ManufacturingData"
     },
     "mode": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Current mode the port is in",
      "descriptionKey": "SCHEMA_PORT_MODE",
      "title": "*utils.I18nValue"
     },
     "modeChange": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Indicates if the mode change is allowed or prohibited",
      "descriptionKey": "SCHEMA_PORT_MODE_CHANGE",
      "title": "*utils.I18nValue"
     },
     "name": {
      "description": "Name of the resource",
      "type": "string"
     },
     "portLinkState": {
      "description": "Port link state",
      "title": "portlinkstate.Enum",
      "enum": [
       "LINK_STATE_CONFIG_WAIT",
       "LINK_STATE_ALPA_WAIT",
       "LINK_STATE_LOGIN_WAIT",
       "LINK_STATE_READY",
       "LINK_STATE_LOSS_SYNC",
       "LINK_STATE_ERROR",
       "LINK_STATE_XXX",
       "LINK_STATE_NONPARTICIPATE",
       "LINK_STATE_COREDUMP",
       "LINK_STATE_OFFLINE",
       "LINK_STATE_FWDEAD",
       "LINK_STATE_LINK_IDLE_FOR_RESET",
       "LINK_STATE_DHCP_IN_PROGRESS",
       "LINK_STATE_PENDING_RESET",
       "LINK_STATE_UNKNOWN"
      ],
      "type": "string"
     },
     "portMode": {
      "description": "Current mode the port is in",
      "title": "portmode.Enum",
      "enum": [
       "PORT_MODE_SUSPENDED",
       "PORT_MODE_TARGET",
       "PORT_MODE_INITIATOR",
       "PORT_MODE_PEER",
       "PORT_MODE_UNKNOWN"
      ],
      "type": "string"
     },
     "portProtocol": {
      "description": "Current protocol the port is in",
      "title": "portprotocol.Enum",
      "enum": [
       "PORT_PROTOCOL_UNKNOWN",
       "PORT_PROTOCOL_FC",
       "PORT_PROTOCOL_ISCSCI",
       "PORT_PROTOCOL_FCOE",
       "PORT_PROTOCOL_IP",
       "PORT_PROTOCOL_SAS",
       "PORT_PROTOCOL_NVME"
      ],
      "type": "string"
     },
     "portType": {
      "description": "Type of the port based on the device it is connected to",
      "title": "porttype.Enum",
      "enum": [
       "PORT_TYPE_FREE",
       "PORT_TYPE_HOST",
       "PORT_TYPE_DISK",
       "PORT_TYPE_IPORT",
       "PORT_TYPE_RCFC",
       "PORT_TYPE_RCIP",
       "PORT_TYPE_ISCSI",
       "PORT_TYPE_PEER",
       "PORT_TYPE_CNA",
       "PORT_TYPE_FS",
       "PORT_TYPE_UNKNOWN"
      ],
      "type": "string"
     },
     "position": {
      "type": "object",
      "properties": {
       "node": {
        "description": "Port position node number",
        "type": "integer",
        "format": "int64"
       },
       "port": {
        "description": "Port position port number",
        "type": "integer",
        "format": "int64"
       },
       "slot": {
        "description": "Port position slot number",
        "type": "integer",
        "format": "int64"
       }
      },
      "description": "Port position in the node",
      "descriptionKey": "SCHEMA_PORT_POSITION",
      "title": "*shared.PortPosition"
     },
     "protocol": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Current protocol the port is in",
      "descriptionKey": "SCHEMA_PORT_PROTOCOL",
      "title": "*utils.I18nValue"
     },
     "revision": {
      "description": "Revision of the Host Bus Adapter",
      "type": "string"
     },
     "speedActual": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Actual speed that port is running at",
      "descriptionKey": "SCHEMA_PORT_SPEEDACTUAL",
      "title": "*utils.I18nValue"
     },
     "state": {
      "type": "object",
      "properties": {
       "detailed": {
        "description": "Array of the detailed states of the resource",
        "type": "array",
        "items": {
         "type": "object",
         "properties": {
          "args": {
           "description": "Array of optional parameters to be used when formatting the text",
           "type": "array",
           "items": {
            "type": "AnyType"
           }
          },
          "default": {
           "description": "Text in the default language",
           "type": "string"
          },
          "key": {
           "description": "Key of the message in the i18n catalog",
           "type": "string"
          }
         },
         "title": "utils.I18nValue"
        }
       },
       "overall": {
        "description": "Overall state of the resource",
        "title": "overallstate.Enum",
        "enum": [
         "STATE_UNKNOWN",
         "STATE_NORMAL",
         "STATE_WARNING",
         "STATE_DEGRADED",
         "STATE_FAILED",
         "STATE_NOT_APPLICABLE",
         "STATE_NEW"
        ],
        "type": "string"
       }
      },
      "description": "State of the resource",
      "descriptionKey": "SCHEMA_STATE",
      "title": "shared.ResourceState"
     },
     "stateDescription": {
      "description": "Detailed descriptions of the port state",
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "args": {
         "description": "Array of optional parameters to be used when formatting the text",
         "type": "array",
         "items": {
          "type": "AnyType"
         }
        },
        "default": {
         "description": "Text in the default language",
         "type": "string"
        },
        "key": {
         "description": "Key of the message in the i18n catalog",
         "type": "string"
        }
       },
       "title": "utils.I18nValue"
      }
     },
     "systemWWN": {
      "description": "WWN of the array",
      "type": "string"
     },
     "type": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Type of the port based on the device it is connected to",
      "descriptionKey": "SCHEMA_PORT_TYPE",
      "title": "*utils.I18nValue"
     },
     "uid": {
      "description": "Unique Identifier of the resource",
      "type": "string"
     },
     "uri": {
      "description": "URI of the resource",
      "type": "string"
     }
    }
   },
   "port_mgmt.MgmtPort": {
    "type": "object",
    "properties": {
     "authenticationRequired": {
      "description": "Is authentication required. Allowed values: enabled or disabled.",
      "type": "string"
     },
     "defaultRouteIPv4": {
      "description": "Default IPV4 route address of the network port",
      "type": "string"
     },
     "defaultRouteIPv6": {
      "description": "Default IPV6 route address of the network port",
      "type": "string"
     },
     "displayname": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Name to be used for display purposes",
      "descriptionKey": "SCHEMA_DISPLAYNAME",
      "title": "*utils.I18nValue"
     },
     "dnsServer": {
      "description": "DNS Server of the network port",
      "type": "string"
     },
     "domain": {
      "description": "Domain that the resource belongs to",
      "type": "string"
     },
     "ipV4Data": {
      "type": "object",
      "properties": {
       "activeNode": {
        "description": "Active node ID",
        "type": "integer",
        "format": "int32"
       },
       "autoSense": {
        "description": "Specifies if the autosense is enabled for network port",
        "type": "boolean"
       },
       "fullDuplex": {
        "description": "Is network port full duplex",
        "type": "boolean"
       },
       "ipAddress": {
        "description": "IP Address of the network port",
        "type": "string"
       },
       "isDHCP": {
        "description": "A true value means the address is a DHCP address",
        "type": "boolean"
       },
       "netMask": {
        "description": "Net mask of the network port",
        "type": "string"
       },
       "speed": {
        "description": "Speed of the network port",
        "type": "integer",
        "format": "int32"
       },
       "state": {
        "type": "object",
        "properties": {
         "detailed": {
          "type": "object",
          "properties": {
           "args": {
            "description": "Array of optional parameters to be used when formatting the text",
            "type": "array",
            "items": {
             "type": "AnyType"
            }
           },
           "default": {
            "description": "Text in the default language",
            "type": "string"
           },
           "key": {
            "description": "Key of the message in the i18n catalog",
            "type": "string"
           }
          }
         },
         "overall": {
          "description": "Overall state of the resource",
          "title": "overallstate.Enum",
          "enum": [
           "STATE_UNKNOWN",
           "STATE_NORMAL",
           "STATE_WARNING",
           "STATE_DEGRADED",
           "STATE_FAILED",
           "STATE_NOT_APPLICABLE",
           "STATE_NEW"
          ],
          "type": "string"
         }
        },
        "description": "State of the network port",
        "descriptionKey": "SCHEMA_ADDRESS_STATE",
        "title": "shared.ResourceState"
       },
       "status": {
        "description": "Status of the network port",
        "type": "string"
       }
      },
      "description": "IPV4 details of the network port",
      "descriptionKey": "SCHEMA_MGMTPORT_IPV4DATA",
      "title": "*port_mgmt.Address"
     },
     "ipV6Data": {
      "type": "object",
      "properties": {
       "activeNode": {
        "description": "Active node ID",
        "type": "integer",
        "format": "int32"
       },
       "autoSense": {
        "description": "Specifies if the autosense is enabled for network port",
        "type": "boolean"
       },
       "fullDuplex": {
        "description": "Is network port full duplex",
        "type": "boolean"
       },
       "ipAddress": {
        "description": "IP Address of the network port",
        "type": "string"
       },
       "isDHCP": {
        "description": "A true value means the address is a DHCP address",
        "type": "boolean"
       },
       "netMask": {
        "description": "Net mask of the network port",
        "type": "string"
       },
       "speed": {
        "description": "Speed of the network port",
        "type": "integer",
        "format": "int32"
       },
       "state": {
        "type": "object",
        "properties": {
         "detailed": {
          "type": "object",
          "properties": {
           "args": {
            "description": "Array of optional parameters to be used when formatting the text",
            "type": "array",
            "items": {
             "type": "AnyType"
            }
           },
           "default": {
            "description": "Text in the default language",
            "type": "string"
           },
           "key": {
            "description": "Key of the message in the i18n catalog",
            "type": "string"
           }
          }
         },
         "overall": {
          "description": "Overall state of the resource",
          "title": "overallstate.Enum",
          "enum": [
           "STATE_UNKNOWN",
           "STATE_NORMAL",
           "STATE_WARNING",
           "STATE_DEGRADED",
           "STATE_FAILED",
           "STATE_NOT_APPLICABLE",
           "STATE_NEW"
          ],
          "type": "string"
         }
        },
        "description": "State of the network port",
        "descriptionKey": "SCHEMA_ADDRESS_STATE",
        "title": "shared.ResourceState"
       },
       "status": {
        "description": "Status of the network port",
        "type": "string"
       }
      },
      "description": "IPV6 details of the network port",
      "descriptionKey": "SCHEMA_MGMTPORT_IPV6DATA",
      "title": "*port_mgmt.Address"
     },
     "newDefaultRouteIPv4": {
      "description": "New default IPV4 route address of the network port",
      "type": "string"
     },
     "newDefaultRouteIPv6": {
      "description": "New default IPV6 route address of the network port",
      "type": "string"
     },
     "newIpV4Data": {
      "type": "object",
      "properties": {
       "activeNode": {
        "description": "Active node ID",
        "type": "integer",
        "format": "int32"
       },
       "autoSense": {
        "description": "Specifies if the autosense is enabled for network port",
        "type": "boolean"
       },
       "fullDuplex": {
        "description": "Is network port full duplex",
        "type": "boolean"
       },
       "ipAddress": {
        "description": "IP Address of the network port",
        "type": "string"
       },
       "isDHCP": {
        "description": "A true value means the address is a DHCP address",
        "type": "boolean"
       },
       "netMask": {
        "description": "Net mask of the network port",
        "type": "string"
       },
       "speed": {
        "description": "Speed of the network port",
        "type": "integer",
        "format": "int32"
       },
       "state": {
        "type": "object",
        "properties": {
         "detailed": {
          "type": "object",
          "properties": {
           "args": {
            "description": "Array of optional parameters to be used when formatting the text",
            "type": "array",
            "items": {
             "type": "AnyType"
            }
           },
           "default": {
            "description": "Text in the default language",
            "type": "string"
           },
           "key": {
            "description": "Key of the message in the i18n catalog",
            "type": "string"
           }
          }
         },
         "overall": {
          "description": "Overall state of the resource",
          "title": "overallstate.Enum",
          "enum": [
           "STATE_UNKNOWN",
           "STATE_NORMAL",
           "STATE_WARNING",
           "STATE_DEGRADED",
           "STATE_FAILED",
           "STATE_NOT_APPLICABLE",
           "STATE_NEW"
          ],
          "type": "string"
         }
        },
        "description": "State of the network port",
        "descriptionKey": "SCHEMA_ADDRESS_STATE",
        "title": "shared.ResourceState"
       },
       "status": {
        "description": "Status of the network port",
        "type": "string"
       }
      },
      "description": "New IPV4 details of the network port",
      "descriptionKey": "SCHEMA_MGMTPORT_NEWIPV4DATA",
      "title": "*port_mgmt.Address"
     },
     "newIpv6Data": {
      "type": "object",
      "properties": {
       "activeNode": {
        "description": "Active node ID",
        "type": "integer",
        "format": "int32"
       },
       "autoSense": {
        "description": "Specifies if the autosense is enabled for network port",
        "type": "boolean"
       },
       "fullDuplex": {
        "description": "Is network port full duplex",
        "type": "boolean"
       },
       "ipAddress": {
        "description": "IP Address of the network port",
        "type": "string"
       },
       "isDHCP": {
        "description": "A true value means the address is a DHCP address",
        "type": "boolean"
       },
       "netMask": {
        "description": "Net mask of the network port",
        "type": "string"
       },
       "speed": {
        "description": "Speed of the network port",
        "type": "integer",
        "format": "int32"
       },
       "state": {
        "type": "object",
        "properties": {
         "detailed": {
          "type": "object",
          "properties": {
           "args": {
            "description": "Array of optional parameters to be used when formatting the text",
            "type": "array",
            "items": {
             "type": "AnyType"
            }
           },
           "default": {
            "description": "Text in the default language",
            "type": "string"
           },
           "key": {
            "description": "Key of the message in the i18n catalog",
            "type": "string"
           }
          }
         },
         "overall": {
          "description": "Overall state of the resource",
          "title": "overallstate.Enum",
          "enum": [
           "STATE_UNKNOWN",
           "STATE_NORMAL",
           "STATE_WARNING",
           "STATE_DEGRADED",
           "STATE_FAILED",
           "STATE_NOT_APPLICABLE",
           "STATE_NEW"
          ],
          "type": "string"
         }
        },
        "description": "State of the network port",
        "descriptionKey": "SCHEMA_ADDRESS_STATE",
        "title": "shared.ResourceState"
       },
       "status": {
        "description": "Status of the network port",
        "type": "string"
       }
      },
      "description": "New IPV6 details of the network port",
      "descriptionKey": "SCHEMA_MGMTPORT_NEWIPV6DATA",
      "title": "*port_mgmt.Address"
     },
     "ntpServer": {
      "description": "NTP Server of the network port",
      "type": "string"
     },
     "proxyPort": {
      "description": "Proxy server port. Allowed values: 1-65535.",
      "type": "integer",
      "format": "int"
     },
     "proxyProtocol": {
      "description": "Supported proxy protocols are HTTP, SOCKS4 and SOCKS5.",
      "type": "string"
     },
     "proxyServer": {
      "description": "Proxy server hostname/IP.",
      "type": "string"
     },
     "proxyUser": {
      "description": "Username for authentication. (Required only if Authentication required is enabled)",
      "type": "string"
     },
     "proxyUserDomain": {
      "description": "User's domain for NTLM authentication (Required only if Authentication required is enabled)",
      "type": "string"
     },
     "slaacAddress": {
      "description": "IPv6 Stateless Address",
      "type": "string"
     },
     "systemWWN": {
      "description": "WWN of the array",
      "type": "string"
     },
     "uid": {
      "description": "Unique Identifier of the resource",
      "type": "string"
     },
     "uri": {
      "description": "URI of the resource",
      "type": "string"
     },
     "vpIPlist": {
      "description": "Vasa Provider IP list",
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "ipv4Address": {
         "description": "Vasa Provider IPV4 address",
         "type": "string"
        },
        "ipv4NetMask": {
         "description": "Vasa Provider IPV4 netmask",
         "type": "string"
        },
        "ipv6Address": {
         "description": "Vasa Provider IPV6 address",
         "type": "string"
        },
        "ipv6PrefixLen": {
         "description": "Vasa Provider IPV6 prefix length",
         "type": "string"
        },
        "nodeId": {
         "description": "Vasa Provider IP node ID",
         "type": "integer",
         "format": "int32"
        }
       },
       "title": "port_mgmt.VpAddr"
      }
     }
    }
   },
   "provisioning.CREATE_COMPLEX_APPSET_CREATE_APPSET_SNAPSHOT_SCHEDULE_subaction": {
    "type": "CREATE_APPSET_SNAPSHOT_SCHEDULE",
    "fullType": "provisioning.CreateAppSetSnapshotSchedule",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: CREATE_APPSET_SNAPSHOT_SCHEDULE",
      "type": "string"
     },
     "parameters": {
      "type": "object",
      "required": [
       "snapshotNamePattern"
      ],
      "properties": {
       "RetentionTime": {
        "description": "Specifies the amount of time, relative to the current time, that the  volume will be retained. Time is a positive integer value and in the  range of 1 minute - 1825 days.  \u003cBR\u003e Note: If the volume is not in any domain, then its retention time  cannot exceed the value of the system's VVRetentionTimeMax. The default  value for the system's VVRetentionTimeMax is 14 days. If the volume  belongs to a domain, then its retention time cannot exceed the value of  the domain's VVRetentionTimeMax, if set. The retention time cannot be  removed or reduced once it is set. If the volume has its retention time  set, it cannot be removed within its retention time. If both expiration  time and retention time are specified, then the retention time cannot  be longer than the expiration time.",
        "type": "integer",
        "format": "int64"
       },
       "command": {
        "description": "Specifies the cli command to be scheduled. This is ignored if createsv field is present. Either this or createsv has to be specified. \u003cbr\u003e  Please refer to the CLI documentation for a list of supported commands.",
        "type": "string"
       },
       "createsv": {
        "type": "object",
        "required": [
         "namePattern",
         "vvOrVvset"
        ],
        "properties": {
         "addToSet": {
          "description": "Adds the volume snapshot to the specified volume set. The set will be created if it does not exist.",
          "type": "string"
         },
         "comment": {
          "description": "Free-form comments about volume snapshot",
          "type": "string"
         },
         "customName": {
          "description": "Specifies the snapshot name, using up to 255 characters in length.",
          "type": "string"
         },
         "expireSecs": {
          "description": "Expiration value specified for volume snapshot. Expected range [60-157680000].",
          "type": "integer",
          "format": "uint64"
         },
         "id": {
          "description": "ID of the snapshot to be created. Expected range [1-131071].",
          "type": "integer",
          "format": "uint64"
         },
         "namePattern": {
          "description": "Pattern that will be used to generate the name of snapshot",
          "title": "snapshotnamepattern.Enum",
          "enum": [
           "PARENT_TIMESTAMP",
           "PARENT_SEC_SINCE_EPOCH",
           "CUSTOM"
          ],
          "type": "string"
         },
         "rcopy": {
          "description": "Specifies that synchronous snapshots be taken of a volume in a remote copy group. The same snapshot will be applied on both the primary and secondary arrays.",
          "type": "boolean"
         },
         "readOnly": {
          "description": "If true snapshot mode is read only else read/write",
          "type": "boolean"
         },
         "retainSecs": {
          "description": "Retention value specified for volume snapshot. Expected range [60-157680000].",
          "type": "integer",
          "format": "uint64"
         },
         "vvOrVvset": {
          "description": "Specifies the parent volume name or volume set name, using up to 255 characters. The vvset name must start with \"set:\". When creating snapshots of a vvset, customName can contain various patterns that are used to form the snapshot volume name. For remote copy groups, the group name should begin with \"rcgroup:\". For this setting, @vvname@ replacements can be used. If a pattern is not given, the customName field is used as a prefix, to which the vvOrVvset is appended. This should be used in conjunction with the rcopy flag.",
          "type": "string"
         }
        },
        "description": "Parameters needed for the snapshot creation request. When this is specified, a createsv schedule is created; for other kinds of schedule please use command field instead. command field is ignored if this is present. Either this or command has to be specified.",
        "descriptionKey": "SCHEMA_CREATE_SCHED_CREATESV_PARAM",
        "title": "*schedule.CreateSnapshotParameters"
       },
       "dayofmonth": {
        "description": "Day of month that a scheduled task will execute. Allowed values are * or 1-31.",
        "type": "string"
       },
       "dayofweek": {
        "description": "Day of the week that a scheduled task will execute. Allowed values are 0-6. Sunday is 0.",
        "type": "string"
       },
       "expirationTime": {
        "description": "Specifies the relative time from the current time that volume will expire. Time is a positive integer value and in the range of 1 minute - 1825 days",
        "type": "integer",
        "format": "int64"
       },
       "expirationUnits": {
        "description": "Expiration units for the generated snapshots (MINUTES, HOURS, or DAYS)",
        "title": "snapshotscheduleexpirationunits.Enum",
        "enum": [
         "DAYS",
         "HOURS",
         "MINUTES"
        ],
        "type": "string"
       },
       "hour": {
        "description": "Hour that a scheduled task will execute. Allowed values are * or 0-23.",
        "type": "string"
       },
       "interval": {
        "description": "Interval that a scheduled task will execute. Allowed values are 15-1440.",
        "type": "string"
       },
       "minute": {
        "description": "Minute that a scheduled task will execute. Allowed values are 0-59.",
        "type": "string"
       },
       "month": {
        "description": "Month that a scheduled task will execute. Allowed values are * or 1-12.",
        "type": "string"
       },
       "name": {
        "description": "Specifies the name given to the schedule. The name can be up to 127 characters in length.",
        "type": "string"
       },
       "noalert": {
        "description": "Failure of tasks created with 'no_alert' will not generate alert if the task fails.",
        "type": "boolean"
       },
       "readOnly": {
        "description": "Read/write access provided while creating appset snapshot",
        "type": "boolean"
       },
       "retentionUnits": {
        "description": "Retention units for the generated snapshots (MINUTES, HOURS, or DAYS)",
        "title": "snapshotscheduleexpirationunits.Enum",
        "enum": [
         "DAYS",
         "HOURS",
         "MINUTES"
        ],
        "type": "string"
       },
       "runonce": {
        "description": "The task will only run once, at the specified time.",
        "type": "boolean"
       },
       "snapshotNamePattern": {
        "description": "Volume name pattern to use for snapshots (PARENT_TIMESTAMP, PARENT_SEC_SINCE_EPOCH, or CUSTOM)",
        "title": "snapshotnamepattern.Enum",
        "enum": [
         "PARENT_TIMESTAMP",
         "PARENT_SEC_SINCE_EPOCH",
         "CUSTOM"
        ],
        "type": "string"
       },
       "year": {
        "description": "Year that a scheduled task will execute.",
        "type": "string"
       }
      },
      "description": "Parameters for a custom action",
      "descriptionKey": "SCHEMA_CUSTOM_ACTION_PROPS"
     }
    },
    "description": "CREATE_APPSET_SNAPSHOT_SCHEDULE is a subaction to CREATE_COMPLEX_APPSET that is used to schedule snapshots while creating a virtual volume set",
    "descriptionKey": "CREATECOMPLEXAPPSET_ACTION_DESCRIPTION_CREATE_SCHEDULE",
    "title": "CREATE_APPSET_SNAPSHOT_SCHEDULE",
    "example": {
     "batch": "CREATE_COMPLEX_APPSET",
     "ordered": true,
     "operations": [
      {
       "action": "CREATE_VOLUME",
       "parameters": {
        "name": "vvsetvv",
        "sizeMiB": 16384,
        "userCpg": "SSD_r6",
        "snapCpg": "SSD_r6",
        "dataReduction": true,
        "count": 5,
        "ransomWare": false
       }
      },
      {
       "action": "CREATE_APPSET",
       "parameters": {
        "appSetName": "vvset",
        "appSetType": "Other",
        "appSetBusinessUnit": "",
        "appSetComments": "",
        "appSetExcludeAIQoS": "yes",
        "ransomWare": false,
        "members": [
         "vvsetvv.0",
         "vvsetvv.1",
         "vvsetvv.2",
         "vvsetvv.3",
         "vvsetvv.4"
        ]
       }
      },
      {
       "action": "CREATE_APPSET_SNAPSHOT_SCHEDULE",
       "parameters": {
        "name": "vvset_schedule",
        "readOnly": false,
        "expirationTime": 0,
        "expirationUnits": "MINUTES",
        "retentionTime": 0,
        "retentionUnits": "MINUTES",
        "snapshotNamePattern": "PARENT_TIMESTAMP",
        "runonce": false,
        "noalert": false,
        "minute": "0",
        "hour": "13",
        "dayofweek": "*",
        "dayofmonth": "*",
        "month": "*",
        "year": "*"
       }
      }
     ]
    }
   },
   "provisioning.CREATE_COMPLEX_APPSET_CREATE_APPSET_subaction": {
    "type": "CREATE_APPSET",
    "fullType": "applicationset.CreateApplicationSet",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: CREATE_APPSET",
      "type": "string"
     },
     "parameters": {
      "type": "object",
      "required": [
       "appSetName"
      ],
      "properties": {
       "appSetBusinessUnit": {
        "description": "Business unit for an application that is using this set",
        "type": "string"
       },
       "appSetComments": {
        "description": "Free-form comments about virtual volume set",
        "type": "string"
       },
       "appSetExcludeAIQoS": {
        "description": "Indicates if to exclude the virtual volume set from aiqos or not.",
        "title": "excludeaiqos.Enum",
        "enum": [
         "yes",
         "no"
        ],
        "type": "string"
       },
       "appSetImportance": {
        "description": "Virtual volume set importance",
        "type": "string"
       },
       "appSetName": {
        "description": "Create Virtual volume Set name",
        "type": "string"
       },
       "appSetType": {
        "description": "Type of the application using this set",
        "type": "string"
       },
       "domain": {
        "description": "Domain that the resource belongs to",
        "type": "string"
       },
       "members": {
        "description": "Names of the set members",
        "type": "array",
        "items": {
         "description": "",
         "type": "string"
        }
       },
       "ransomWare": {
        "description": "Indicates if ransomware detection policy is set",
        "type": "boolean"
       }
      },
      "description": "Parameters for a custom action",
      "descriptionKey": "SCHEMA_CUSTOM_ACTION_PROPS",
      "example": {
       "appSetName": "Appset_Ransomware",
       "appSetType": "Other",
       "ransomWare": true,
       "members": [
        "vv1",
        "vv2"
       ]
      }
     }
    },
    "description": "CREATE_APPSET is a subactin to CREATE_COMPLEX_APPSET that is used to define the attributes of a new virtual volume set",
    "descriptionKey": "CREATECOMPLEXAPPSET_ACTION_DESCRIPTION_CREATE_APPSET",
    "title": "CREATE_APPSET",
    "example": {
     "batch": "CREATE_COMPLEX_APPSET",
     "ordered": true,
     "operations": [
      {
       "action": "CREATE_VOLUME",
       "parameters": {
        "name": "vvsetvv",
        "sizeMiB": 16384,
        "userCpg": "SSD_r6",
        "snapCpg": "SSD_r6",
        "dataReduction": false,
        "ransomware": false,
        "count": 5
       }
      },
      {
       "action": "CREATE_APPSET",
       "parameters": {
        "appSetName": "vvset",
        "appSetType": "Other",
        "appSetBusinessUnit": "",
        "appSetComments": "",
        "appSetExcludeAIQoS": "no",
        "appSetImportance": "MEDIUM",
        "ransomware": true,
        "members": [
         "vvsetvv.0",
         "vvsetvv.1",
         "vvsetvv.2",
         "vvsetvv.3",
         "vvsetvv.4"
        ]
       }
      }
     ]
    }
   },
   "provisioning.CREATE_COMPLEX_APPSET_CREATE_VOLUME_subaction": {
    "type": "CREATE_VOLUME",
    "fullType": "volume.CreateVolume",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: CREATE_VOLUME",
      "type": "string"
     },
     "parameters": {
      "type": "object",
      "required": [
       "name",
       "userCpg",
       "sizeMiB"
      ],
      "properties": {
       "comments": {
        "description": "Comments of the volume to be created",
        "type": "string"
       },
       "count": {
        "description": "Count of volumes to be created",
        "type": "integer",
        "format": "int32"
       },
       "dataReduction": {
        "description": "Data reduction setting of the volume to be created",
        "type": "boolean"
       },
       "expireSecs": {
        "description": "Expiration value specified for volume snapshot",
        "type": "integer",
        "format": "uint64"
       },
       "name": {
        "description": "Name of the volume to be created",
        "type": "string"
       },
       "ransomWare": {
        "description": "Enable/disabled the ransomware policy for the volume",
        "type": "boolean"
       },
       "retainSecs": {
        "description": "Retention value specified for volume snapshot",
        "type": "integer",
        "format": "uint64"
       },
       "sizeMiB": {
        "description": "Size of the volume to be created",
        "type": "integer",
        "format": "int64"
       },
       "userAllocWarning": {
        "description": "User allocation warning value of the volume to be created",
        "type": "integer",
        "format": "int64"
       },
       "userCpg": {
        "description": "User CPG of the volume to be created",
        "type": "string"
       }
      },
      "description": "Parameters for a custom action",
      "descriptionKey": "SCHEMA_CUSTOM_ACTION_PROPS",
      "example": {
       "name": "exampleVolume",
       "sizeMiB": 16384,
       "userCpg": "SSD_r6",
       "dataReduction": false,
       "ransomware": false,
       "count": 10
      }
     }
    },
    "description": "CREATE_VOLUME is a subaction to CREATE_COMPLEX_APPSET that is used to create volumes to be added to a new virtual volume set",
    "descriptionKey": "CREATECOMPLEXAPPSET_ACTION_DESCRIPTION_CREATE_VOLUME",
    "title": "CREATE_VOLUME",
    "example": {
     "batch": "CREATE_COMPLEX_APPSET",
     "ordered": true,
     "operations": [
      {
       "action": "CREATE_VOLUME",
       "parameters": {
        "name": "vvsetvv",
        "sizeMiB": 16384,
        "userCpg": "SSD_r6",
        "snapCpg": "SSD_r6",
        "dataReduction": false,
        "ransomware": false,
        "count": 5
       }
      }
     ]
    }
   },
   "provisioning.CREATE_COMPLEX_APPSET_EXPORT_APPSET_subaction": {
    "type": "EXPORT_APPSET",
    "fullType": "provisioning.CreateAppSetExport",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: EXPORT_APPSET",
      "type": "string"
     },
     "parameters": {
      "type": "object",
      "required": [
       "startingLuns",
       "hostNames"
      ],
      "properties": {
       "hostNames": {
        "description": "Host and host set names to be exported to. Host set names should start with \"set:\"",
        "type": "array",
        "items": {
         "description": "",
         "type": "string"
        }
       },
       "startingLuns": {
        "description": "List of starting LUN numbers for the specified hosts; ordered",
        "type": "array",
        "items": {
         "type": "integer",
         "format": "int64"
        }
       }
      },
      "description": "Parameters for a custom action",
      "descriptionKey": "SCHEMA_CUSTOM_ACTION_PROPS"
     }
    },
    "description": "EXPORT_APPSET is a subaction to CREATE_COMPLEX_APPSET that is used to export volumes while creating a virtual volume set",
    "descriptionKey": "CREATECOMPLEXAPPSET_ACTION_DESCRIPTION_EXPORT_MEMBERS",
    "title": "EXPORT_APPSET",
    "example": {
     "batch": "CREATE_COMPLEX_APPSET",
     "ordered": true,
     "operations": [
      {
       "action": "CREATE_VOLUME",
       "parameters": {
        "name": "vvsetvv",
        "sizeMiB": 16384,
        "userCpg": "SSD_r6",
        "snapCpg": "SSD_r6",
        "dataReduction": true,
        "count": 5,
        "ransomWare": false
       }
      },
      {
       "action": "CREATE_APPSET",
       "parameters": {
        "appSetName": "vvset",
        "appSetType": "Other",
        "appSetBusinessUnit": "",
        "appSetComments": "",
        "appSetExcludeAIQoS": "yes",
        "ransomWare": false,
        "members": [
         "vvsetvv.0",
         "vvsetvv.1",
         "vvsetvv.2",
         "vvsetvv.3",
         "vvsetvv.4"
        ]
       }
      },
      {
       "action": "EXPORT_APPSET",
       "parameters": {
        "hostNames": [
         "set:myhostset"
        ],
        "startingLuns": [
         0
        ]
       }
      }
     ]
    }
   },
   "provisioning.CREATE_COMPLEX_HOSTSET_CREATE_HOSTSET_subaction": {
    "type": "CREATE_HOSTSET",
    "fullType": "objectset.CreateObjectSet",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: CREATE_HOSTSET",
      "type": "string"
     },
     "parameters": {
      "type": "object",
      "required": [
       "name"
      ],
      "properties": {
       "comment": {
        "description": "Comments associated with the set",
        "type": "string"
       },
       "domain": {
        "description": "Domain that the resource belongs to",
        "type": "string"
       },
       "members": {
        "description": "Names of the set members",
        "type": "array",
        "items": {
         "description": "",
         "type": "string"
        }
       },
       "name": {
        "description": "Name of the set",
        "type": "string"
       }
      },
      "description": "Parameters for a custom action",
      "descriptionKey": "SCHEMA_CUSTOM_ACTION_PROPS",
      "example": {
       "name": "exampleSet",
       "comment": "example comment",
       "domain": "exampleDomain",
       "members": [
        "exampleHost"
       ]
      }
     }
    },
    "description": "CREATE_HOSTSET is a subaction to CREATE_COMPLEX_HOSTSET that is used to define the attributes of a new host set",
    "descriptionKey": "CREATECOMPLEXHOSTSET_ACTION_DESCRIPTION_CREATE_HOSTSET",
    "title": "CREATE_HOSTSET",
    "example": {
     "batch": "CREATE_COMPLEX_HOSTSET",
     "ordered": true,
     "operations": [
      {
       "action": "CREATE_HOST",
       "parameters": {
        "name": "myhost",
        "descriptors": {
         "os": "HP-UX",
         "IPAddr": "",
         "location": "",
         "model": "",
         "contact": "",
         "comment": ""
        },
        "fcPaths": [
         "100008F1EABF52AC"
        ]
       }
      },
      {
       "action": "CREATE_HOSTSET",
       "parameters": {
        "name": "newhostset",
        "comment": "new set",
        "members": [
         "myhost"
        ]
       }
      }
     ]
    }
   },
   "provisioning.CREATE_COMPLEX_HOSTSET_CREATE_HOST_subaction": {
    "type": "CREATE_HOST",
    "fullType": "host.CreateHost",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: CREATE_HOST",
      "type": "string"
     },
     "parameters": {
      "type": "object",
      "properties": {
       "addPath": {
        "description": "Flag to indicate if the create host command is being used to add a path",
        "type": "boolean"
       },
       "descriptors": {
        "type": "object",
        "properties": {
         "IPAddr": {
          "description": "IP Address of the host",
          "type": "string"
         },
         "comment": {
          "description": "Generic comments for the host",
          "type": "string"
         },
         "contact": {
          "description": "Contact information for the host",
          "type": "string"
         },
         "location": {
          "description": "Location information of the host",
          "type": "string"
         },
         "model": {
          "description": "Model of the host",
          "type": "string"
         },
         "os": {
          "description": "Operating System of the host",
          "type": "string"
         }
        },
        "description": "Descriptors required to create host",
        "descriptionKey": "SCHEMA_CREATE_HOST_DESCRIPTORS",
        "title": "*host.HostDescriptors"
       },
       "domain": {
        "description": "Domain to create host",
        "type": "string"
       },
       "fcPaths": {
        "description": "FC path list to create host",
        "type": "array",
        "items": {
         "description": "",
         "type": "string"
        }
       },
       "isVvolHost": {
        "description": "Is create host is vasa host",
        "type": "boolean"
       },
       "iscsiPaths": {
        "description": "iSCSI path list to create host",
        "type": "array",
        "items": {
         "description": "",
         "type": "string"
        }
       },
       "name": {
        "description": "Host name to create host",
        "type": "string"
       },
       "nvmePaths": {
        "description": "NVMe path list to create host",
        "type": "array",
        "items": {
         "description": "",
         "type": "string"
        }
       },
       "persona": {
        "description": "Persona id to create host",
        "type": "integer",
        "format": "int32"
       },
       "port": {
        "description": "Host port to create host",
        "type": "array",
        "items": {
         "description": "",
         "type": "string"
        }
       },
       "setName": {
        "description": "Host set to create host",
        "type": "string"
       },
       "transportType": {
        "description": "NVMe transport type to create host",
        "title": "transport.Enum",
        "enum": [
         "UNKNOWN",
         "FC",
         "TCP"
        ],
        "type": "string"
       }
      },
      "description": "Parameters for a custom action",
      "descriptionKey": "SCHEMA_CUSTOM_ACTION_PROPS"
     }
    },
    "description": "CREATE_HOST is a subaction to CREATE_COMPLEX_HOSTSET that is used to create a host to add to a new host set",
    "descriptionKey": "CREATECOMPLEXHOSTSET_ACTION_DESCRIPTION_CREATE_HOST",
    "title": "CREATE_HOST",
    "example": {
     "batch": "CREATE_COMPLEX_HOSTSET",
     "ordered": true,
     "operations": [
      {
       "action": "CREATE_HOST",
       "parameters": {
        "name": "myhost",
        "descriptors": {
         "os": "HP-UX",
         "IPAddr": "",
         "location": "",
         "model": "",
         "contact": "",
         "comment": ""
        },
        "fcPaths": [
         "100008F1EABF52AC"
        ]
       }
      },
      {
       "action": "CREATE_HOSTSET",
       "parameters": {
        "name": "newhostset",
        "comment": "new set",
        "members": [
         "myhost"
        ]
       }
      }
     ]
    }
   },
   "provisioning.CreateAppSetExport": {
    "type": "object",
    "required": [
     "startingLuns",
     "hostNames"
    ],
    "properties": {
     "hostNames": {
      "description": "Host and host set names to be exported to. Host set names should start with \"set:\"",
      "type": "array",
      "items": {
       "description": "",
       "type": "string"
      }
     },
     "startingLuns": {
      "description": "List of starting LUN numbers for the specified hosts; ordered",
      "type": "array",
      "items": {
       "type": "integer",
       "format": "int64"
      }
     }
    }
   },
   "provisioning.CreateAppSetExportMembers": {
    "type": "object",
    "required": [
     "hostNames",
     "members",
     "startingLuns"
    ],
    "properties": {
     "hostNames": {
      "description": "Host and host set names to be exported to. Host set names should start with \"set:\"",
      "type": "array",
      "items": {
       "description": "",
       "type": "string"
      }
     },
     "members": {
      "description": "List of virtual volume set members to be exported",
      "type": "array",
      "items": {
       "description": "",
       "type": "string"
      }
     },
     "startingLuns": {
      "description": "List of starting LUN numbers for the specified hosts; ordered",
      "type": "array",
      "items": {
       "type": "integer",
       "format": "int64"
      }
     }
    }
   },
   "provisioning.CreateAppSetSnapshotSchedule": {
    "type": "object",
    "required": [
     "snapshotNamePattern"
    ],
    "properties": {
     "RetentionTime": {
      "description": "Specifies the amount of time, relative to the current time, that the  volume will be retained. Time is a positive integer value and in the  range of 1 minute - 1825 days.  \u003cBR\u003e Note: If the volume is not in any domain, then its retention time  cannot exceed the value of the system's VVRetentionTimeMax. The default  value for the system's VVRetentionTimeMax is 14 days. If the volume  belongs to a domain, then its retention time cannot exceed the value of  the domain's VVRetentionTimeMax, if set. The retention time cannot be  removed or reduced once it is set. If the volume has its retention time  set, it cannot be removed within its retention time. If both expiration  time and retention time are specified, then the retention time cannot  be longer than the expiration time.",
      "type": "integer",
      "format": "int64"
     },
     "command": {
      "description": "Specifies the cli command to be scheduled. This is ignored if createsv field is present. Either this or createsv has to be specified. \u003cbr\u003e  Please refer to the CLI documentation for a list of supported commands.",
      "type": "string"
     },
     "createsv": {
      "type": "object",
      "required": [
       "namePattern",
       "vvOrVvset"
      ],
      "properties": {
       "addToSet": {
        "description": "Adds the volume snapshot to the specified volume set. The set will be created if it does not exist.",
        "type": "string"
       },
       "comment": {
        "description": "Free-form comments about volume snapshot",
        "type": "string"
       },
       "customName": {
        "description": "Specifies the snapshot name, using up to 255 characters in length.",
        "type": "string"
       },
       "expireSecs": {
        "description": "Expiration value specified for volume snapshot. Expected range [60-157680000].",
        "type": "integer",
        "format": "uint64"
       },
       "id": {
        "description": "ID of the snapshot to be created. Expected range [1-131071].",
        "type": "integer",
        "format": "uint64"
       },
       "namePattern": {
        "description": "Pattern that will be used to generate the name of snapshot",
        "title": "snapshotnamepattern.Enum",
        "enum": [
         "PARENT_TIMESTAMP",
         "PARENT_SEC_SINCE_EPOCH",
         "CUSTOM"
        ],
        "type": "string"
       },
       "rcopy": {
        "description": "Specifies that synchronous snapshots be taken of a volume in a remote copy group. The same snapshot will be applied on both the primary and secondary arrays.",
        "type": "boolean"
       },
       "readOnly": {
        "description": "If true snapshot mode is read only else read/write",
        "type": "boolean"
       },
       "retainSecs": {
        "description": "Retention value specified for volume snapshot. Expected range [60-157680000].",
        "type": "integer",
        "format": "uint64"
       },
       "vvOrVvset": {
        "description": "Specifies the parent volume name or volume set name, using up to 255 characters. The vvset name must start with \"set:\". When creating snapshots of a vvset, customName can contain various patterns that are used to form the snapshot volume name. For remote copy groups, the group name should begin with \"rcgroup:\". For this setting, @vvname@ replacements can be used. If a pattern is not given, the customName field is used as a prefix, to which the vvOrVvset is appended. This should be used in conjunction with the rcopy flag.",
        "type": "string"
       }
      },
      "description": "Parameters needed for the snapshot creation request. When this is specified, a createsv schedule is created; for other kinds of schedule please use command field instead. command field is ignored if this is present. Either this or command has to be specified.",
      "descriptionKey": "SCHEMA_CREATE_SCHED_CREATESV_PARAM",
      "title": "*schedule.CreateSnapshotParameters"
     },
     "dayofmonth": {
      "description": "Day of month that a scheduled task will execute. Allowed values are * or 1-31.",
      "type": "string"
     },
     "dayofweek": {
      "description": "Day of the week that a scheduled task will execute. Allowed values are 0-6. Sunday is 0.",
      "type": "string"
     },
     "expirationTime": {
      "description": "Specifies the relative time from the current time that volume will expire. Time is a positive integer value and in the range of 1 minute - 1825 days",
      "type": "integer",
      "format": "int64"
     },
     "expirationUnits": {
      "description": "Expiration units for the generated snapshots (MINUTES, HOURS, or DAYS)",
      "title": "snapshotscheduleexpirationunits.Enum",
      "enum": [
       "DAYS",
       "HOURS",
       "MINUTES"
      ],
      "type": "string"
     },
     "hour": {
      "description": "Hour that a scheduled task will execute. Allowed values are * or 0-23.",
      "type": "string"
     },
     "interval": {
      "description": "Interval that a scheduled task will execute. Allowed values are 15-1440.",
      "type": "string"
     },
     "minute": {
      "description": "Minute that a scheduled task will execute. Allowed values are 0-59.",
      "type": "string"
     },
     "month": {
      "description": "Month that a scheduled task will execute. Allowed values are * or 1-12.",
      "type": "string"
     },
     "name": {
      "description": "Specifies the name given to the schedule. The name can be up to 127 characters in length.",
      "type": "string"
     },
     "noalert": {
      "description": "Failure of tasks created with 'no_alert' will not generate alert if the task fails.",
      "type": "boolean"
     },
     "readOnly": {
      "description": "Read/write access provided while creating appset snapshot",
      "type": "boolean"
     },
     "retentionUnits": {
      "description": "Retention units for the generated snapshots (MINUTES, HOURS, or DAYS)",
      "title": "snapshotscheduleexpirationunits.Enum",
      "enum": [
       "DAYS",
       "HOURS",
       "MINUTES"
      ],
      "type": "string"
     },
     "runonce": {
      "description": "The task will only run once, at the specified time.",
      "type": "boolean"
     },
     "snapshotNamePattern": {
      "description": "Volume name pattern to use for snapshots (PARENT_TIMESTAMP, PARENT_SEC_SINCE_EPOCH, or CUSTOM)",
      "title": "snapshotnamepattern.Enum",
      "enum": [
       "PARENT_TIMESTAMP",
       "PARENT_SEC_SINCE_EPOCH",
       "CUSTOM"
      ],
      "type": "string"
     },
     "year": {
      "description": "Year that a scheduled task will execute.",
      "type": "string"
     }
    }
   },
   "provisioning.CreateReplicationApplicationSet": {
    "type": "object",
    "required": [
     "importDetails"
    ],
    "properties": {
     "importDetails": {
      "description": "List of remote copy groups which require import replication",
      "type": "array",
      "items": {
       "type": "object",
       "required": [
        "groupName",
        "targets"
       ],
       "properties": {
        "groupName": {
         "description": "List of Remote Copy group UIDs.",
         "type": "string"
        },
        "targets": {
         "type": "object",
         "required": [
          "targetName",
          "mode",
          "userCPG",
          "partnerSerial"
         ],
         "properties": {
          "hostProximity": {
           "description": "Specify object containing Host Proximity and host names",
           "type": "groups.AdmitGroupHost",
           "Array": true
          },
          "mode": {
           "description": "Specifies the volume group mode. Set to 1 for Sync, 2 for Periodic.",
           "title": "groupmode.Enum",
           "enum": [
            "1",
            "2",
            "3",
            "4"
           ],
           "type": "int"
          },
          "partnerSerial": {
           "description": "Specifies the serial number of the Remote Copy partner system.",
           "type": "string"
          },
          "period": {
           "type": "object",
           "properties": {
            "rmSyncPeriod": {
             "description": "Enables (true) or disables (false) resetting the syncPeriod time to 0 (zero). If false, and the syncPeriod value is positive, the synchronization period is set.",
             "type": "boolean"
            },
            "syncPeriodSecs": {
             "description": "Specifies periodic synchronization of asynchronous periodic Remote Copy groups to the period value. Range is 60-31622400 seconds (1 year).",
             "type": "integer",
             "format": "int64"
            }
           },
           "description": "The period assigned to the Remote Copy group with Async (Periodic) mode.",
           "descriptionKey": "SCHEMA_REPLICATION_PERIOD",
           "title": "*provisioning.ReplicationPeriod"
          },
          "policies": {
           "description": "The policy assigned to the Remote Copy group with Sync mode.",
           "type": "groups.ModifyRCPolicy",
           "Array": false
          },
          "remoteCPG": {
           "description": "Specifies the remote CPG used for auto-created target volumes.",
           "type": "string"
          },
          "targetName": {
           "description": "Specifies the attributes of the target of the Remote Copy group.",
           "type": "string"
          },
          "userCPG": {
           "description": "Specifies the user CPG used for auto-created target volumes.",
           "type": "string"
          },
          "version": {
           "type": "object",
           "properties": {
            "base": {
             "description": "Representation of the version that only includes Major.Minor.Rev (Release)",
             "type": "string"
            },
            "display": {
             "description": "Representation of the version that should be used for display purposes",
             "type": "string"
            },
            "full": {
             "description": "Representation of the version that includes everything",
             "type": "string"
            },
            "fullWithoutPatches": {
             "description": "Representation of the version that includes everything except updates",
             "type": "string"
            }
           },
           "description": "System OS version",
           "descriptionKey": "SCHEMA_SYSTEM_VERSION",
           "title": "*shared.Version"
          }
         }
        }
       },
       "title": "provisioning.ImportProperty"
      }
     }
    }
   },
   "provisioning.DeleteAppSetExport": {
    "type": "object",
    "required": [
     "hostNames"
    ],
    "properties": {
     "hostNames": {
      "description": "Host and host set names to be unexported from. Host set names should start with \"set:\"",
      "type": "array",
      "items": {
       "description": "",
       "type": "string"
      }
     }
    }
   },
   "provisioning.DeleteAppSetExportMembers": {
    "type": "object",
    "required": [
     "hostNames",
     "members"
    ],
    "properties": {
     "hostNames": {
      "description": "Host and host set names to be unexported from. Host set names should start with \"set:\"",
      "type": "array",
      "items": {
       "description": "",
       "type": "string"
      }
     },
     "members": {
      "description": "List of virtual volume set members to be unexported",
      "type": "array",
      "items": {
       "description": "",
       "type": "string"
      }
     }
    }
   },
   "provisioning.DeleteAppSetSnapshotSchedule": {
    "type": "object",
    "required": [
     "name"
    ],
    "properties": {
     "name": {
      "description": "The name of the snapshot schedule",
      "type": "string"
     }
    }
   },
   "provisioning.DeleteLocalAndRemoteAppSetExport": {
    "type": "object",
    "required": [
     "partnerSerial"
    ],
    "properties": {
     "hostNames": {
      "description": "Host and host set names to be unexported from. Host set names should start with \"set:\"",
      "type": "array",
      "items": {
       "description": "",
       "type": "string"
      }
     },
     "partnerSerial": {
      "description": "Specifies the serial number of the Remote Copy partner system.",
      "type": "string"
     }
    }
   },
   "provisioning.DisableAppSetReplicationMembers": {
    "type": "object",
    "required": [
     "targets"
    ],
    "properties": {
     "removeSecondaryVolume": {
      "description": "Specify if corresponding volumes on the remote system to be deleted",
      "type": "boolean"
     },
     "targets": {
      "description": "Specifies the target attributes to create the Remote Copy group.",
      "type": "array",
      "items": {
       "type": "object",
       "required": [
        "targetName",
        "mode",
        "userCPG",
        "partnerSerial"
       ],
       "properties": {
        "hostProximity": {
         "description": "Specify object containing Host Proximity and host names",
         "type": "groups.AdmitGroupHost",
         "Array": true
        },
        "mode": {
         "description": "Specifies the volume group mode. Set to 1 for Sync, 2 for Periodic.",
         "title": "groupmode.Enum",
         "enum": [
          "1",
          "2",
          "3",
          "4"
         ],
         "type": "int"
        },
        "partnerSerial": {
         "description": "Specifies the serial number of the Remote Copy partner system.",
         "type": "string"
        },
        "period": {
         "type": "object",
         "properties": {
          "rmSyncPeriod": {
           "description": "Enables (true) or disables (false) resetting the syncPeriod time to 0 (zero). If false, and the syncPeriod value is positive, the synchronization period is set.",
           "type": "boolean"
          },
          "syncPeriodSecs": {
           "description": "Specifies periodic synchronization of asynchronous periodic Remote Copy groups to the period value. Range is 60-31622400 seconds (1 year).",
           "type": "integer",
           "format": "int64"
          }
         },
         "description": "The period assigned to the Remote Copy group with Async (Periodic) mode.",
         "descriptionKey": "SCHEMA_REPLICATION_PERIOD",
         "title": "*provisioning.ReplicationPeriod"
        },
        "policies": {
         "description": "The policy assigned to the Remote Copy group with Sync mode.",
         "type": "groups.ModifyRCPolicy",
         "Array": false
        },
        "remoteCPG": {
         "description": "Specifies the remote CPG used for auto-created target volumes.",
         "type": "string"
        },
        "targetName": {
         "description": "Specifies the attributes of the target of the Remote Copy group.",
         "type": "string"
        },
        "userCPG": {
         "description": "Specifies the user CPG used for auto-created target volumes.",
         "type": "string"
        },
        "version": {
         "type": "object",
         "properties": {
          "base": {
           "description": "Representation of the version that only includes Major.Minor.Rev (Release)",
           "type": "string"
          },
          "display": {
           "description": "Representation of the version that should be used for display purposes",
           "type": "string"
          },
          "full": {
           "description": "Representation of the version that includes everything",
           "type": "string"
          },
          "fullWithoutPatches": {
           "description": "Representation of the version that includes everything except updates",
           "type": "string"
          }
         },
         "description": "System OS version",
         "descriptionKey": "SCHEMA_SYSTEM_VERSION",
         "title": "*shared.Version"
        }
       },
       "title": "provisioning.ReplicationTargetProperty"
      }
     }
    }
   },
   "provisioning.EnableAppSetReplicationMembers": {
    "type": "object",
    "required": [
     "targets",
     "localUserCPG"
    ],
    "properties": {
     "domain": {
      "description": "Specifies the domain in which to create the Remote Copy group.",
      "type": "string"
     },
     "localUserCPG": {
      "description": "Specifies the local user CPG used for auto-created volumes.",
      "type": "string"
     },
     "targets": {
      "description": "Specifies the target attributes to create the Remote Copy group.",
      "type": "array",
      "items": {
       "type": "object",
       "required": [
        "targetName",
        "mode",
        "userCPG",
        "partnerSerial"
       ],
       "properties": {
        "hostProximity": {
         "description": "Specify object containing Host Proximity and host names",
         "type": "groups.AdmitGroupHost",
         "Array": true
        },
        "mode": {
         "description": "Specifies the volume group mode. Set to 1 for Sync, 2 for Periodic.",
         "title": "groupmode.Enum",
         "enum": [
          "1",
          "2",
          "3",
          "4"
         ],
         "type": "int"
        },
        "partnerSerial": {
         "description": "Specifies the serial number of the Remote Copy partner system.",
         "type": "string"
        },
        "period": {
         "type": "object",
         "properties": {
          "rmSyncPeriod": {
           "description": "Enables (true) or disables (false) resetting the syncPeriod time to 0 (zero). If false, and the syncPeriod value is positive, the synchronization period is set.",
           "type": "boolean"
          },
          "syncPeriodSecs": {
           "description": "Specifies periodic synchronization of asynchronous periodic Remote Copy groups to the period value. Range is 60-31622400 seconds (1 year).",
           "type": "integer",
           "format": "int64"
          }
         },
         "description": "The period assigned to the Remote Copy group with Async (Periodic) mode.",
         "descriptionKey": "SCHEMA_REPLICATION_PERIOD",
         "title": "*provisioning.ReplicationPeriod"
        },
        "policies": {
         "description": "The policy assigned to the Remote Copy group with Sync mode.",
         "type": "groups.ModifyRCPolicy",
         "Array": false
        },
        "remoteCPG": {
         "description": "Specifies the remote CPG used for auto-created target volumes.",
         "type": "string"
        },
        "targetName": {
         "description": "Specifies the attributes of the target of the Remote Copy group.",
         "type": "string"
        },
        "userCPG": {
         "description": "Specifies the user CPG used for auto-created target volumes.",
         "type": "string"
        },
        "version": {
         "type": "object",
         "properties": {
          "base": {
           "description": "Representation of the version that only includes Major.Minor.Rev (Release)",
           "type": "string"
          },
          "display": {
           "description": "Representation of the version that should be used for display purposes",
           "type": "string"
          },
          "full": {
           "description": "Representation of the version that includes everything",
           "type": "string"
          },
          "fullWithoutPatches": {
           "description": "Representation of the version that includes everything except updates",
           "type": "string"
          }
         },
         "description": "System OS version",
         "descriptionKey": "SCHEMA_SYSTEM_VERSION",
         "title": "*shared.Version"
        }
       },
       "title": "provisioning.ReplicationTargetProperty"
      }
     }
    }
   },
   "provisioning.FixRCGAndRemoteAppSets": {
    "type": "object",
    "properties": {
     "fixRCGAndRemoteAppSets": {
      "description": "List of remote copy groups which require replication fix",
      "type": "array",
      "items": {
       "type": "object",
       "required": [
        "groupUid",
        "targets",
        "volumeNames"
       ],
       "properties": {
        "groupUid": {
         "description": "Remote Copy group UID.",
         "type": "string"
        },
        "targets": {
         "type": "object",
         "required": [
          "targetName",
          "mode",
          "userCPG",
          "partnerSerial"
         ],
         "properties": {
          "hostProximity": {
           "description": "Specify object containing Host Proximity and host names",
           "type": "groups.AdmitGroupHost",
           "Array": true
          },
          "mode": {
           "description": "Specifies the volume group mode. Set to 1 for Sync, 2 for Periodic.",
           "title": "groupmode.Enum",
           "enum": [
            "1",
            "2",
            "3",
            "4"
           ],
           "type": "int"
          },
          "partnerSerial": {
           "description": "Specifies the serial number of the Remote Copy partner system.",
           "type": "string"
          },
          "period": {
           "type": "object",
           "properties": {
            "rmSyncPeriod": {
             "description": "Enables (true) or disables (false) resetting the syncPeriod time to 0 (zero). If false, and the syncPeriod value is positive, the synchronization period is set.",
             "type": "boolean"
            },
            "syncPeriodSecs": {
             "description": "Specifies periodic synchronization of asynchronous periodic Remote Copy groups to the period value. Range is 60-31622400 seconds (1 year).",
             "type": "integer",
             "format": "int64"
            }
           },
           "description": "The period assigned to the Remote Copy group with Async (Periodic) mode.",
           "descriptionKey": "SCHEMA_REPLICATION_PERIOD",
           "title": "*provisioning.ReplicationPeriod"
          },
          "policies": {
           "description": "The policy assigned to the Remote Copy group with Sync mode.",
           "type": "groups.ModifyRCPolicy",
           "Array": false
          },
          "remoteCPG": {
           "description": "Specifies the remote CPG used for auto-created target volumes.",
           "type": "string"
          },
          "targetName": {
           "description": "Specifies the attributes of the target of the Remote Copy group.",
           "type": "string"
          },
          "userCPG": {
           "description": "Specifies the user CPG used for auto-created target volumes.",
           "type": "string"
          },
          "version": {
           "type": "object",
           "properties": {
            "base": {
             "description": "Representation of the version that only includes Major.Minor.Rev (Release)",
             "type": "string"
            },
            "display": {
             "description": "Representation of the version that should be used for display purposes",
             "type": "string"
            },
            "full": {
             "description": "Representation of the version that includes everything",
             "type": "string"
            },
            "fullWithoutPatches": {
             "description": "Representation of the version that includes everything except updates",
             "type": "string"
            }
           },
           "description": "System OS version",
           "descriptionKey": "SCHEMA_SYSTEM_VERSION",
           "title": "*shared.Version"
          }
         }
        },
        "volumeNames": {
         "description": "The name of the existing virtual volume to be admitted to an existing Remote Copy group.",
         "type": "array",
         "items": {
          "description": "",
          "type": "string"
         }
        }
       },
       "title": "provisioning.FixRCGAndRemoteApplicationSet"
      }
     }
    }
   },
   "provisioning.FixRCGAndRemoteApplicationSet": {
    "type": "object",
    "required": [
     "groupUid",
     "targets",
     "volumeNames"
    ],
    "properties": {
     "groupUid": {
      "description": "Remote Copy group UID.",
      "type": "string"
     },
     "targets": {
      "description": "Specifies the target attributes to create the Remote Copy group.",
      "type": "array",
      "items": {
       "type": "object",
       "required": [
        "targetName",
        "mode",
        "userCPG",
        "partnerSerial"
       ],
       "properties": {
        "hostProximity": {
         "description": "Specify object containing Host Proximity and host names",
         "type": "groups.AdmitGroupHost",
         "Array": true
        },
        "mode": {
         "description": "Specifies the volume group mode. Set to 1 for Sync, 2 for Periodic.",
         "title": "groupmode.Enum",
         "enum": [
          "1",
          "2",
          "3",
          "4"
         ],
         "type": "int"
        },
        "partnerSerial": {
         "description": "Specifies the serial number of the Remote Copy partner system.",
         "type": "string"
        },
        "period": {
         "type": "object",
         "properties": {
          "rmSyncPeriod": {
           "description": "Enables (true) or disables (false) resetting the syncPeriod time to 0 (zero). If false, and the syncPeriod value is positive, the synchronization period is set.",
           "type": "boolean"
          },
          "syncPeriodSecs": {
           "description": "Specifies periodic synchronization of asynchronous periodic Remote Copy groups to the period value. Range is 60-31622400 seconds (1 year).",
           "type": "integer",
           "format": "int64"
          }
         },
         "description": "The period assigned to the Remote Copy group with Async (Periodic) mode.",
         "descriptionKey": "SCHEMA_REPLICATION_PERIOD",
         "title": "*provisioning.ReplicationPeriod"
        },
        "policies": {
         "description": "The policy assigned to the Remote Copy group with Sync mode.",
         "type": "groups.ModifyRCPolicy",
         "Array": false
        },
        "remoteCPG": {
         "description": "Specifies the remote CPG used for auto-created target volumes.",
         "type": "string"
        },
        "targetName": {
         "description": "Specifies the attributes of the target of the Remote Copy group.",
         "type": "string"
        },
        "userCPG": {
         "description": "Specifies the user CPG used for auto-created target volumes.",
         "type": "string"
        },
        "version": {
         "type": "object",
         "properties": {
          "base": {
           "description": "Representation of the version that only includes Major.Minor.Rev (Release)",
           "type": "string"
          },
          "display": {
           "description": "Representation of the version that should be used for display purposes",
           "type": "string"
          },
          "full": {
           "description": "Representation of the version that includes everything",
           "type": "string"
          },
          "fullWithoutPatches": {
           "description": "Representation of the version that includes everything except updates",
           "type": "string"
          }
         },
         "description": "System OS version",
         "descriptionKey": "SCHEMA_SYSTEM_VERSION",
         "title": "*shared.Version"
        }
       },
       "title": "provisioning.ReplicationTargetProperty"
      }
     },
     "volumeNames": {
      "description": "The name of the existing virtual volume to be admitted to an existing Remote Copy group.",
      "type": "array",
      "items": {
       "description": "",
       "type": "string"
      }
     }
    }
   },
   "provisioning.ImportProperty": {
    "type": "object",
    "required": [
     "groupName",
     "targets"
    ],
    "properties": {
     "groupName": {
      "description": "List of Remote Copy group UIDs.",
      "type": "string"
     },
     "targets": {
      "description": "Specifies the target attributes to create the Remote Copy group.",
      "type": "array",
      "items": {
       "type": "object",
       "required": [
        "targetName",
        "mode",
        "userCPG",
        "partnerSerial"
       ],
       "properties": {
        "hostProximity": {
         "description": "Specify object containing Host Proximity and host names",
         "type": "groups.AdmitGroupHost",
         "Array": true
        },
        "mode": {
         "description": "Specifies the volume group mode. Set to 1 for Sync, 2 for Periodic.",
         "title": "groupmode.Enum",
         "enum": [
          "1",
          "2",
          "3",
          "4"
         ],
         "type": "int"
        },
        "partnerSerial": {
         "description": "Specifies the serial number of the Remote Copy partner system.",
         "type": "string"
        },
        "period": {
         "type": "object",
         "properties": {
          "rmSyncPeriod": {
           "description": "Enables (true) or disables (false) resetting the syncPeriod time to 0 (zero). If false, and the syncPeriod value is positive, the synchronization period is set.",
           "type": "boolean"
          },
          "syncPeriodSecs": {
           "description": "Specifies periodic synchronization of asynchronous periodic Remote Copy groups to the period value. Range is 60-31622400 seconds (1 year).",
           "type": "integer",
           "format": "int64"
          }
         },
         "description": "The period assigned to the Remote Copy group with Async (Periodic) mode.",
         "descriptionKey": "SCHEMA_REPLICATION_PERIOD",
         "title": "*provisioning.ReplicationPeriod"
        },
        "policies": {
         "description": "The policy assigned to the Remote Copy group with Sync mode.",
         "type": "groups.ModifyRCPolicy",
         "Array": false
        },
        "remoteCPG": {
         "description": "Specifies the remote CPG used for auto-created target volumes.",
         "type": "string"
        },
        "targetName": {
         "description": "Specifies the attributes of the target of the Remote Copy group.",
         "type": "string"
        },
        "userCPG": {
         "description": "Specifies the user CPG used for auto-created target volumes.",
         "type": "string"
        },
        "version": {
         "type": "object",
         "properties": {
          "base": {
           "description": "Representation of the version that only includes Major.Minor.Rev (Release)",
           "type": "string"
          },
          "display": {
           "description": "Representation of the version that should be used for display purposes",
           "type": "string"
          },
          "full": {
           "description": "Representation of the version that includes everything",
           "type": "string"
          },
          "fullWithoutPatches": {
           "description": "Representation of the version that includes everything except updates",
           "type": "string"
          }
         },
         "description": "System OS version",
         "descriptionKey": "SCHEMA_SYSTEM_VERSION",
         "title": "*shared.Version"
        }
       },
       "title": "provisioning.ReplicationTargetProperty"
      }
     }
    }
   },
   "provisioning.MODIFY_COMPLEX_APPSET_CREATE_APPSET_SNAPSHOT_SCHEDULE_subaction": {
    "type": "CREATE_APPSET_SNAPSHOT_SCHEDULE",
    "fullType": "provisioning.CreateAppSetSnapshotSchedule",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: CREATE_APPSET_SNAPSHOT_SCHEDULE",
      "type": "string"
     },
     "parameters": {
      "type": "object",
      "required": [
       "snapshotNamePattern"
      ],
      "properties": {
       "RetentionTime": {
        "description": "Specifies the amount of time, relative to the current time, that the  volume will be retained. Time is a positive integer value and in the  range of 1 minute - 1825 days.  \u003cBR\u003e Note: If the volume is not in any domain, then its retention time  cannot exceed the value of the system's VVRetentionTimeMax. The default  value for the system's VVRetentionTimeMax is 14 days. If the volume  belongs to a domain, then its retention time cannot exceed the value of  the domain's VVRetentionTimeMax, if set. The retention time cannot be  removed or reduced once it is set. If the volume has its retention time  set, it cannot be removed within its retention time. If both expiration  time and retention time are specified, then the retention time cannot  be longer than the expiration time.",
        "type": "integer",
        "format": "int64"
       },
       "command": {
        "description": "Specifies the cli command to be scheduled. This is ignored if createsv field is present. Either this or createsv has to be specified. \u003cbr\u003e  Please refer to the CLI documentation for a list of supported commands.",
        "type": "string"
       },
       "createsv": {
        "type": "object",
        "required": [
         "namePattern",
         "vvOrVvset"
        ],
        "properties": {
         "addToSet": {
          "description": "Adds the volume snapshot to the specified volume set. The set will be created if it does not exist.",
          "type": "string"
         },
         "comment": {
          "description": "Free-form comments about volume snapshot",
          "type": "string"
         },
         "customName": {
          "description": "Specifies the snapshot name, using up to 255 characters in length.",
          "type": "string"
         },
         "expireSecs": {
          "description": "Expiration value specified for volume snapshot. Expected range [60-157680000].",
          "type": "integer",
          "format": "uint64"
         },
         "id": {
          "description": "ID of the snapshot to be created. Expected range [1-131071].",
          "type": "integer",
          "format": "uint64"
         },
         "namePattern": {
          "description": "Pattern that will be used to generate the name of snapshot",
          "title": "snapshotnamepattern.Enum",
          "enum": [
           "PARENT_TIMESTAMP",
           "PARENT_SEC_SINCE_EPOCH",
           "CUSTOM"
          ],
          "type": "string"
         },
         "rcopy": {
          "description": "Specifies that synchronous snapshots be taken of a volume in a remote copy group. The same snapshot will be applied on both the primary and secondary arrays.",
          "type": "boolean"
         },
         "readOnly": {
          "description": "If true snapshot mode is read only else read/write",
          "type": "boolean"
         },
         "retainSecs": {
          "description": "Retention value specified for volume snapshot. Expected range [60-157680000].",
          "type": "integer",
          "format": "uint64"
         },
         "vvOrVvset": {
          "description": "Specifies the parent volume name or volume set name, using up to 255 characters. The vvset name must start with \"set:\". When creating snapshots of a vvset, customName can contain various patterns that are used to form the snapshot volume name. For remote copy groups, the group name should begin with \"rcgroup:\". For this setting, @vvname@ replacements can be used. If a pattern is not given, the customName field is used as a prefix, to which the vvOrVvset is appended. This should be used in conjunction with the rcopy flag.",
          "type": "string"
         }
        },
        "description": "Parameters needed for the snapshot creation request. When this is specified, a createsv schedule is created; for other kinds of schedule please use command field instead. command field is ignored if this is present. Either this or command has to be specified.",
        "descriptionKey": "SCHEMA_CREATE_SCHED_CREATESV_PARAM",
        "title": "*schedule.CreateSnapshotParameters"
       },
       "dayofmonth": {
        "description": "Day of month that a scheduled task will execute. Allowed values are * or 1-31.",
        "type": "string"
       },
       "dayofweek": {
        "description": "Day of the week that a scheduled task will execute. Allowed values are 0-6. Sunday is 0.",
        "type": "string"
       },
       "expirationTime": {
        "description": "Specifies the relative time from the current time that volume will expire. Time is a positive integer value and in the range of 1 minute - 1825 days",
        "type": "integer",
        "format": "int64"
       },
       "expirationUnits": {
        "description": "Expiration units for the generated snapshots (MINUTES, HOURS, or DAYS)",
        "title": "snapshotscheduleexpirationunits.Enum",
        "enum": [
         "DAYS",
         "HOURS",
         "MINUTES"
        ],
        "type": "string"
       },
       "hour": {
        "description": "Hour that a scheduled task will execute. Allowed values are * or 0-23.",
        "type": "string"
       },
       "interval": {
        "description": "Interval that a scheduled task will execute. Allowed values are 15-1440.",
        "type": "string"
       },
       "minute": {
        "description": "Minute that a scheduled task will execute. Allowed values are 0-59.",
        "type": "string"
       },
       "month": {
        "description": "Month that a scheduled task will execute. Allowed values are * or 1-12.",
        "type": "string"
       },
       "name": {
        "description": "Specifies the name given to the schedule. The name can be up to 127 characters in length.",
        "type": "string"
       },
       "noalert": {
        "description": "Failure of tasks created with 'no_alert' will not generate alert if the task fails.",
        "type": "boolean"
       },
       "readOnly": {
        "description": "Read/write access provided while creating appset snapshot",
        "type": "boolean"
       },
       "retentionUnits": {
        "description": "Retention units for the generated snapshots (MINUTES, HOURS, or DAYS)",
        "title": "snapshotscheduleexpirationunits.Enum",
        "enum": [
         "DAYS",
         "HOURS",
         "MINUTES"
        ],
        "type": "string"
       },
       "runonce": {
        "description": "The task will only run once, at the specified time.",
        "type": "boolean"
       },
       "snapshotNamePattern": {
        "description": "Volume name pattern to use for snapshots (PARENT_TIMESTAMP, PARENT_SEC_SINCE_EPOCH, or CUSTOM)",
        "title": "snapshotnamepattern.Enum",
        "enum": [
         "PARENT_TIMESTAMP",
         "PARENT_SEC_SINCE_EPOCH",
         "CUSTOM"
        ],
        "type": "string"
       },
       "year": {
        "description": "Year that a scheduled task will execute.",
        "type": "string"
       }
      },
      "description": "Parameters for a custom action",
      "descriptionKey": "SCHEMA_CUSTOM_ACTION_PROPS"
     }
    },
    "description": "CREATE_APPSET_SNAPSHOT_SCHEDULE is a subaction to MODIFY_COMPLEX_APPSET that is used to add a snap schedule to a virtual volume set",
    "descriptionKey": "MODIFYCOMPLEXAPPSET_ACTION_DESCRIPTION_CREATE_APPSET_SNAPSHOT_SCHEDULE",
    "title": "CREATE_APPSET_SNAPSHOT_SCHEDULE",
    "example": {
     "batch": "MODIFY_COMPLEX_APPSET",
     "ordered": true,
     "uuid": "a9dd873bedd3090e58fe09f3546aa3d2",
     "operations": [
      {
       "action": "CREATE_APPSET_SNAPSHOT_SCHEDULE",
       "parameters": {
        "name": "schedule",
        "readOnly": false,
        "expirationTime": 0,
        "expirationUnits": "MINUTES",
        "retentionTime": 0,
        "retentionUnits": "MINUTES",
        "snapshotNamePattern": "PARENT_TIMESTAMP",
        "runonce": false,
        "noalert": false,
        "minute": "0",
        "hour": "13",
        "dayofweek": "0-6",
        "dayofmonth": "*",
        "month": "*",
        "year": "*"
       }
      }
     ]
    }
   },
   "provisioning.MODIFY_COMPLEX_APPSET_CREATE_VOLUME_subaction": {
    "type": "CREATE_VOLUME",
    "fullType": "volume.CreateVolume",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: CREATE_VOLUME",
      "type": "string"
     },
     "parameters": {
      "type": "object",
      "required": [
       "name",
       "userCpg",
       "sizeMiB"
      ],
      "properties": {
       "comments": {
        "description": "Comments of the volume to be created",
        "type": "string"
       },
       "count": {
        "description": "Count of volumes to be created",
        "type": "integer",
        "format": "int32"
       },
       "dataReduction": {
        "description": "Data reduction setting of the volume to be created",
        "type": "boolean"
       },
       "expireSecs": {
        "description": "Expiration value specified for volume snapshot",
        "type": "integer",
        "format": "uint64"
       },
       "name": {
        "description": "Name of the volume to be created",
        "type": "string"
       },
       "ransomWare": {
        "description": "Enable/disabled the ransomware policy for the volume",
        "type": "boolean"
       },
       "retainSecs": {
        "description": "Retention value specified for volume snapshot",
        "type": "integer",
        "format": "uint64"
       },
       "sizeMiB": {
        "description": "Size of the volume to be created",
        "type": "integer",
        "format": "int64"
       },
       "userAllocWarning": {
        "description": "User allocation warning value of the volume to be created",
        "type": "integer",
        "format": "int64"
       },
       "userCpg": {
        "description": "User CPG of the volume to be created",
        "type": "string"
       }
      },
      "description": "Parameters for a custom action",
      "descriptionKey": "SCHEMA_CUSTOM_ACTION_PROPS",
      "example": {
       "name": "exampleVolume",
       "sizeMiB": 16384,
       "userCpg": "SSD_r6",
       "dataReduction": false,
       "ransomware": false,
       "count": 10
      }
     }
    },
    "description": "CREATE_VOLUME is a subaction to MODIFY_COMPLEX_APPSET that is used to add new volumes to a virtual volume set",
    "descriptionKey": "MODIFYCOMPLEXAPPSET_ACTION_DESCRIPTION_CREATE_VOLUME",
    "title": "CREATE_VOLUME",
    "example": {
     "batch": "MODIFY_COMPLEX_APPSET",
     "ordered": true,
     "uuid": "a9dd873bedd3090e58fe09f3546aa3d2",
     "operations": [
      {
       "action": "CREATE_VOLUME",
       "parameters": {
        "name": "morevv",
        "sizeMiB": 16384,
        "userCpg": "SSD_r6",
        "snapCpg": "SSD_r6",
        "dataReduction": true,
        "count": 2,
        "ransomWare": false
       }
      },
      {
       "action": "MODIFY_APPSET",
       "parameters": {
        "appSetName": "vvset",
        "appSetType": "Other",
        "appSetBusinessUnit": "",
        "appSetComments": "",
        "appSetExcludeAIQoS": "yes",
        "ransomWare": false,
        "members": [
         "vvsetvv.0",
         "vvsetvv.1",
         "vvsetvv.2",
         "vvsetvv.3",
         "vvsetvv.4",
         "morevv.0",
         "morevv.1"
        ]
       }
      }
     ]
    }
   },
   "provisioning.MODIFY_COMPLEX_APPSET_DELETE_APPSET_SNAPSHOT_SCHEDULE_subaction": {
    "type": "DELETE_APPSET_SNAPSHOT_SCHEDULE",
    "fullType": "provisioning.DeleteAppSetSnapshotSchedule",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: DELETE_APPSET_SNAPSHOT_SCHEDULE",
      "type": "string"
     },
     "parameters": {
      "type": "object",
      "required": [
       "name"
      ],
      "properties": {
       "name": {
        "description": "The name of the snapshot schedule",
        "type": "string"
       }
      },
      "description": "Parameters for a custom action",
      "descriptionKey": "SCHEMA_CUSTOM_ACTION_PROPS"
     }
    },
    "description": "DELETE_APPSET_SNAPSHOT_SCHEDULE  is a subaction to MODIFY_COMPLEX_APPSET that is used to remove a snap schedule from a virtual volume set",
    "descriptionKey": "MODIFYCOMPLEXAPPSET_ACTION_DESCRIPTION_DELETE_APPSET_SNAPSHOT_SCHEDULE",
    "title": "DELETE_APPSET_SNAPSHOT_SCHEDULE",
    "example": {
     "batch": "MODIFY_COMPLEX_APPSET",
     "ordered": true,
     "uuid": "a9dd873bedd3090e58fe09f3546aa3d2",
     "operations": [
      {
       "action": "DELETE_APPSET_SNAPSHOT_SCHEDULE",
       "parameters": {
        "name": "schedule"
       }
      }
     ]
    }
   },
   "provisioning.MODIFY_COMPLEX_APPSET_EXPORT_APPSET_subaction": {
    "type": "EXPORT_APPSET",
    "fullType": "provisioning.CreateAppSetExport",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: EXPORT_APPSET",
      "type": "string"
     },
     "parameters": {
      "type": "object",
      "required": [
       "startingLuns",
       "hostNames"
      ],
      "properties": {
       "hostNames": {
        "description": "Host and host set names to be exported to. Host set names should start with \"set:\"",
        "type": "array",
        "items": {
         "description": "",
         "type": "string"
        }
       },
       "startingLuns": {
        "description": "List of starting LUN numbers for the specified hosts; ordered",
        "type": "array",
        "items": {
         "type": "integer",
         "format": "int64"
        }
       }
      },
      "description": "Parameters for a custom action",
      "descriptionKey": "SCHEMA_CUSTOM_ACTION_PROPS"
     }
    },
    "description": "EXPORT_APPSET is a subaction to MODIFY_COMPLEX_APPSET that is used to export all members of a virtual volume set",
    "descriptionKey": "MODIFYCOMPLEXAPPSET_ACTION_DESCRIPTION_EXPORT_APPSET",
    "title": "EXPORT_APPSET",
    "example": {
     "batch": "MODIFY_COMPLEX_APPSET",
     "ordered": true,
     "uuid": "a9dd873bedd3090e58fe09f3546aa3d2",
     "operations": [
      {
       "action": "EXPORT_APPSET",
       "parameters": {
        "hostNames": [
         "set:myhostset"
        ],
        "startingLuns": [
         0
        ]
       }
      }
     ]
    }
   },
   "provisioning.MODIFY_COMPLEX_APPSET_MODIFY_APPSET_subaction": {
    "type": "MODIFY_APPSET",
    "fullType": "applicationset.PatchApplicationSet",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: MODIFY_APPSET",
      "type": "string"
     },
     "parameters": {
      "type": "object",
      "properties": {
       "appSetBusinessUnit": {
        "description": "Business unit for an application that is using this set",
        "type": "string"
       },
       "appSetComments": {
        "description": "Free-form comments about virtual volume set",
        "type": "string"
       },
       "appSetExcludeAIQoS": {
        "description": "Indicates if to exclude the virtual volume set from aiqos or not.",
        "title": "excludeaiqos.Enum",
        "enum": [
         "yes",
         "no"
        ],
        "type": "string"
       },
       "appSetImportance": {
        "description": "Virtual volume set importance",
        "type": "string"
       },
       "appSetName": {
        "description": "Virtual volume set name",
        "type": "string"
       },
       "appSetTuneVolumes": {
        "description": "Specify Virtual volume set tune members.",
        "type": "array",
        "items": {
         "type": "object",
         "required": [
          "volumeName",
          "userCpgName"
         ],
         "properties": {
          "conversionType": {
           "description": "Specify Virtual volume set member Conversion Type.",
           "title": "conversiontype.Enum",
           "enum": [
            "CONVERSIONTYPE_THIN",
            "CONVERSIONTYPE_V1",
            "CONVERSIONTYPE_V2"
           ],
           "type": "string"
          },
          "saveToNewName": {
           "description": "Specify Virtual volume set tune member save to new name.",
           "type": "string"
          },
          "userCpgName": {
           "description": "Specify Virtual volume set member user cpg name.",
           "type": "string"
          },
          "volumeName": {
           "description": "Specify Virtual volume set member name.",
           "type": "string"
          }
         },
         "title": "applicationset.TuneAppSetVolume"
        }
       },
       "appSetType": {
        "description": "Type of the application using this set",
        "type": "string"
       },
       "members": {
        "description": "Names of the set members",
        "type": "array",
        "items": {
         "description": "",
         "type": "string"
        }
       },
       "ransomWare": {
        "description": "Indicates if ransomware detection policy is set",
        "type": "boolean"
       }
      },
      "description": "Parameters for a custom action",
      "descriptionKey": "SCHEMA_CUSTOM_ACTION_PROPS",
      "example": {
       "appSetName": "newName",
       "members": [
        "vvsetvv.0",
        "vvsetvv.1",
        "vvsetvv.2",
        "vvsetvv.3",
        "vvsetvv.4"
       ]
      }
     }
    },
    "description": "MODIFY_APPSET is a subaction to MODIFY_COMPLEX_APPSET that is used to modify the attributes of a virtual volume set",
    "descriptionKey": "MODIFYCOMPLEXAPPSET_ACTION_DESCRIPTION_MODIFY_APPSET",
    "title": "MODIFY_APPSET",
    "example": {
     "batch": "MODIFY_COMPLEX_APPSET",
     "ordered": true,
     "uuid": "a9dd873bedd3090e58fe09f3546aa3d2",
     "operations": [
      {
       "action": "MODIFY_APPSET",
       "parameters": {
        "appSetComments": "New comment"
       }
      }
     ]
    }
   },
   "provisioning.MODIFY_COMPLEX_APPSET_SET_MEMBER_RWARE_POLICY_subaction": {
    "type": "SET_MEMBER_RWARE_POLICY",
    "fullType": "applicationset.SetMemberRwarePolicy",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: SET_MEMBER_RWARE_POLICY",
      "type": "string"
     },
     "parameters": {
      "type": "object",
      "required": [
       "ransomWare"
      ],
      "properties": {
       "ransomWare": {
        "description": "Indicates if ransomware detection policy is set",
        "type": "boolean"
       }
      },
      "description": "Parameters for a custom action",
      "descriptionKey": "SCHEMA_CUSTOM_ACTION_PROPS"
     }
    },
    "description": "SET_MEMBER_RWARE_POLICY is a subaction to MODIFY_COMPLEX_APPSET that is used to set the ransomware policy of all members of a virtual volume set",
    "descriptionKey": "MODIFYCOMPLEXAPPSET_ACTION_DESCRIPTION_SET_MEMBER_RWARE_POLICY",
    "title": "SET_MEMBER_RWARE_POLICY",
    "example": {
     "batch": "MODIFY_COMPLEX_APPSET",
     "ordered": true,
     "uuid": "a9dd873bedd3090e58fe09f3546aa3d2",
     "operations": [
      {
       "action": "SET_MEMBER_RWARE_POLICY",
       "parameters": {
        "ransomWare": true
       }
      }
     ]
    }
   },
   "provisioning.MODIFY_COMPLEX_APPSET_UNEXPORT_APPSET_subaction": {
    "type": "UNEXPORT_APPSET",
    "fullType": "provisioning.DeleteAppSetExport",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: UNEXPORT_APPSET",
      "type": "string"
     },
     "parameters": {
      "type": "object",
      "required": [
       "hostNames"
      ],
      "properties": {
       "hostNames": {
        "description": "Host and host set names to be unexported from. Host set names should start with \"set:\"",
        "type": "array",
        "items": {
         "description": "",
         "type": "string"
        }
       }
      },
      "description": "Parameters for a custom action",
      "descriptionKey": "SCHEMA_CUSTOM_ACTION_PROPS"
     }
    },
    "description": "UNEXPORT_APPSET is a subaction to MODIFY_COMPLEX_APPSET that is used to unexport all members of a virtual volume set",
    "descriptionKey": "MODIFYCOMPLEXAPPSET_ACTION_DESCRIPTION_UNEXPORT_APPSET",
    "title": "UNEXPORT_APPSET",
    "example": {
     "batch": "MODIFY_COMPLEX_APPSET",
     "ordered": true,
     "uuid": "a9dd873bedd3090e58fe09f3546aa3d2",
     "operations": [
      {
       "action": "UNEXPORT_APPSET",
       "parameters": {
        "hostNames": [
         "set:myhostset"
        ]
       }
      }
     ]
    }
   },
   "provisioning.MODIFY_COMPLEX_HOSTSET_CREATE_HOSTSET_subaction": {
    "type": "MODIFY_HOSTSET",
    "fullType": "objectset.PatchObjectSet",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: MODIFY_HOSTSET",
      "type": "string"
     },
     "parameters": {
      "type": "object",
      "required": [
       "name"
      ],
      "properties": {
       "comment": {
        "description": "Comments for the object set to be modified",
        "type": "string"
       },
       "hostProximity": {
        "description": "List of member object to set proximity for host and rcopy groups",
        "type": "array",
        "items": {
         "type": "object",
         "properties": {
          "host": {
           "description": "Host names which are exporting a remote copy group",
           "type": "string"
          },
          "proximity": {
           "description": "Host Proximity to be set",
           "title": "proximity.Enum",
           "enum": [
            "PRIMARY",
            "SECONDARY",
            "ALL"
           ],
           "type": "string"
          },
          "rcopyGroup": {
           "description": "List of rcopy group names to set the host proximity",
           "type": "array",
           "items": {
            "description": "",
            "type": "string"
           }
          }
         },
         "title": "objectset.RCopyGroupProximity"
        }
       },
       "members": {
        "description": "List of members of the object set to be modified",
        "type": "array",
        "items": {
         "description": "",
         "type": "string"
        }
       },
       "name": {
        "description": "Name of the object set to be modified",
        "type": "string"
       }
      },
      "description": "Parameters for a custom action",
      "descriptionKey": "SCHEMA_CUSTOM_ACTION_PROPS",
      "example": {
       "name": "exampleSet",
       "comment": "example comment"
      }
     }
    },
    "description": "MODIFY_HOSTSET is a subaction to MODIFY_COMPLEX_HOSTSET that is used to change the attributes of a host set",
    "descriptionKey": "MODIFYCOMPLEXHOSTSET_ACTION_DESCRIPTION_MODIFY_HOSTSET",
    "title": "MODIFY_HOSTSET",
    "example": {
     "batch": "MODIFY_COMPLEX_HOSTSET",
     "ordered": true,
     "uuid": "b8fe4b3517f0e6b7c5ed71f5d865d616",
     "operations": [
      {
       "action": "CREATE_HOST",
       "parameters": {
        "name": "myhost",
        "descriptors": {
         "os": "HP-UX",
         "IPAddr": "",
         "location": "",
         "model": "",
         "contact": "",
         "comment": ""
        },
        "fcPaths": [
         "100008F1EABF52AC"
        ]
       }
      },
      {
       "action": "MODIFY_HOSTSET",
       "parameters": {
        "name": "newhostset",
        "comment": "new set",
        "members": [
         "myhost"
        ],
        "hostProximity": []
       }
      }
     ]
    }
   },
   "provisioning.MODIFY_COMPLEX_HOSTSET_CREATE_HOST_subaction": {
    "type": "CREATE_HOST",
    "fullType": "host.CreateHost",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: CREATE_HOST",
      "type": "string"
     },
     "parameters": {
      "type": "object",
      "properties": {
       "addPath": {
        "description": "Flag to indicate if the create host command is being used to add a path",
        "type": "boolean"
       },
       "descriptors": {
        "type": "object",
        "properties": {
         "IPAddr": {
          "description": "IP Address of the host",
          "type": "string"
         },
         "comment": {
          "description": "Generic comments for the host",
          "type": "string"
         },
         "contact": {
          "description": "Contact information for the host",
          "type": "string"
         },
         "location": {
          "description": "Location information of the host",
          "type": "string"
         },
         "model": {
          "description": "Model of the host",
          "type": "string"
         },
         "os": {
          "description": "Operating System of the host",
          "type": "string"
         }
        },
        "description": "Descriptors required to create host",
        "descriptionKey": "SCHEMA_CREATE_HOST_DESCRIPTORS",
        "title": "*host.HostDescriptors"
       },
       "domain": {
        "description": "Domain to create host",
        "type": "string"
       },
       "fcPaths": {
        "description": "FC path list to create host",
        "type": "array",
        "items": {
         "description": "",
         "type": "string"
        }
       },
       "isVvolHost": {
        "description": "Is create host is vasa host",
        "type": "boolean"
       },
       "iscsiPaths": {
        "description": "iSCSI path list to create host",
        "type": "array",
        "items": {
         "description": "",
         "type": "string"
        }
       },
       "name": {
        "description": "Host name to create host",
        "type": "string"
       },
       "nvmePaths": {
        "description": "NVMe path list to create host",
        "type": "array",
        "items": {
         "description": "",
         "type": "string"
        }
       },
       "persona": {
        "description": "Persona id to create host",
        "type": "integer",
        "format": "int32"
       },
       "port": {
        "description": "Host port to create host",
        "type": "array",
        "items": {
         "description": "",
         "type": "string"
        }
       },
       "setName": {
        "description": "Host set to create host",
        "type": "string"
       },
       "transportType": {
        "description": "NVMe transport type to create host",
        "title": "transport.Enum",
        "enum": [
         "UNKNOWN",
         "FC",
         "TCP"
        ],
        "type": "string"
       }
      },
      "description": "Parameters for a custom action",
      "descriptionKey": "SCHEMA_CUSTOM_ACTION_PROPS"
     }
    },
    "description": "CREATE_HOST is a subaction to MODIFY_COMPLES_HOSTSET that is used to add new hosts to a host set",
    "descriptionKey": "MODIFYCOMPLEXHOSTSET_ACTION_DESCRIPTION_CREATE_HOST",
    "title": "CREATE_HOST",
    "example": {
     "batch": "MODIFY_COMPLEX_HOSTSET",
     "ordered": true,
     "uuid": "b8fe4b3517f0e6b7c5ed71f5d865d616",
     "operations": [
      {
       "action": "CREATE_HOST",
       "parameters": {
        "name": "myhost",
        "descriptors": {
         "os": "HP-UX",
         "IPAddr": "",
         "location": "",
         "model": "",
         "contact": "",
         "comment": ""
        },
        "fcPaths": [
         "100008F1EABF52AC"
        ]
       }
      },
      {
       "action": "MODIFY_HOSTSET",
       "parameters": {
        "name": "newhostset",
        "comment": "new set",
        "members": [
         "myhost"
        ],
        "hostProximity": []
       }
      }
     ]
    }
   },
   "provisioning.MODIFY_VOLUME_EDIT_VOLUME_subaction": {
    "type": "EDIT_VOLUME",
    "fullType": "volume.EditVolume",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: EDIT_VOLUME",
      "type": "string"
     },
     "parameters": {
      "type": "object",
      "properties": {
       "comments": {
        "description": "Edit comment of virtual volume",
        "type": "string"
       },
       "expireSecs": {
        "description": "Expiration value specified for volume snapshot",
        "type": "integer",
        "format": "uint64"
       },
       "name": {
        "description": "Edit Name of virtual volume",
        "type": "string"
       },
       "ransomWare": {
        "description": "Enable/disable the ransomware policy of the volume",
        "type": "boolean"
       },
       "retainSecs": {
        "description": "Retention value specified for volume snapshot",
        "type": "integer",
        "format": "uint64"
       },
       "sizeMiB": {
        "description": "Edit Size of virtual volume",
        "type": "number",
        "format": "float64"
       },
       "userAllocWarning": {
        "description": "Edit User Space Allocation warning of virtual volume",
        "type": "integer",
        "format": "int64"
       },
       "wwn": {
        "description": "Edit VV WWN",
        "type": "string"
       }
      },
      "description": "Parameters for a custom action",
      "descriptionKey": "SCHEMA_CUSTOM_ACTION_PROPS",
      "example": {
       "name": "exampleVolume",
       "sizeMiB": 25000,
       "ransomware": true
      }
     }
    },
    "description": "EDIT_VOLUME is a subaction to MODIFY_VOLUME that is used to change attributes of a volume",
    "descriptionKey": "MODIFYVOLUME_ACTION_DESCRIPTION_EDIT_VOLUME",
    "title": "EDIT_VOLUME",
    "example": {
     "batch": "MODIFY_VOLUME",
     "ordered": true,
     "uuid": "2a255c62dd51c160f17ad22851aa4cba",
     "operations": [
      {
       "action": "EDIT_VOLUME",
       "parameters": {
        "name": null,
        "comments": "new comment",
        "expireSecs": null,
        "ransomWare": false,
        "retainSecs": null,
        "sizeMiB": null,
        "userAllocWarning": null,
        "wwn": null
       }
      }
     ]
    }
   },
   "provisioning.MODIFY_VOLUME_TUNE_VOLUME_subaction": {
    "type": "TUNE_VOLUME",
    "fullType": "volume.TuneVolume",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: TUNE_VOLUME",
      "type": "string"
     },
     "parameters": {
      "type": "object",
      "required": [
       "userCpgName"
      ],
      "properties": {
       "conversionType": {
        "description": "Change provision type of virtual volume",
        "title": "conversiontype.Enum",
        "enum": [
         "CONVERSIONTYPE_THIN",
         "CONVERSIONTYPE_V1",
         "CONVERSIONTYPE_V2"
        ],
        "default": "V1",
        "type": "string"
       },
       "saveToNewName": {
        "description": "Tune virtual volume and save the original one under a virtual volume",
        "type": "string"
       },
       "userCpgName": {
        "description": "Change user CPG of virtual volume",
        "type": "string"
       }
      },
      "description": "Parameters for a custom action",
      "descriptionKey": "SCHEMA_CUSTOM_ACTION_PROPS"
     }
    },
    "description": "TUNE_VOLUME is a subaction to MODIFY_VOLUME that is used to tune a volume",
    "descriptionKey": "MODIFYVOLUME_ACTION_DESCRIPTION_TUNE_VOLUME",
    "title": "TUNE_VOLUME",
    "example": {
     "batch": "MODIFY_VOLUME",
     "uuid": "4816573214c90595468cdfffea0b9c98",
     "operations": [
      {
       "action": "TUNE_VOLUME",
       "uuid": "4816573214c90595468cdfffea0b9c98",
       "parameters": {
        "conversionType": "CONVERSIONTYPE_THIN",
        "userCpgName": "SSD_r6",
        "snapCpgName": "SSD_r6"
       }
      }
     ]
    }
   },
   "provisioning.ModifyAppSetReplicationMembers": {
    "type": "object",
    "required": [
     "targets"
    ],
    "properties": {
     "targets": {
      "description": "Specifies the target attributes to create the Remote Copy group.",
      "type": "array",
      "items": {
       "type": "object",
       "required": [
        "targetName",
        "mode",
        "userCPG",
        "partnerSerial"
       ],
       "properties": {
        "hostProximity": {
         "description": "Specify object containing Host Proximity and host names",
         "type": "groups.AdmitGroupHost",
         "Array": true
        },
        "mode": {
         "description": "Specifies the volume group mode. Set to 1 for Sync, 2 for Periodic.",
         "title": "groupmode.Enum",
         "enum": [
          "1",
          "2",
          "3",
          "4"
         ],
         "type": "int"
        },
        "partnerSerial": {
         "description": "Specifies the serial number of the Remote Copy partner system.",
         "type": "string"
        },
        "period": {
         "type": "object",
         "properties": {
          "rmSyncPeriod": {
           "description": "Enables (true) or disables (false) resetting the syncPeriod time to 0 (zero). If false, and the syncPeriod value is positive, the synchronization period is set.",
           "type": "boolean"
          },
          "syncPeriodSecs": {
           "description": "Specifies periodic synchronization of asynchronous periodic Remote Copy groups to the period value. Range is 60-31622400 seconds (1 year).",
           "type": "integer",
           "format": "int64"
          }
         },
         "description": "The period assigned to the Remote Copy group with Async (Periodic) mode.",
         "descriptionKey": "SCHEMA_REPLICATION_PERIOD",
         "title": "*provisioning.ReplicationPeriod"
        },
        "policies": {
         "description": "The policy assigned to the Remote Copy group with Sync mode.",
         "type": "groups.ModifyRCPolicy",
         "Array": false
        },
        "remoteCPG": {
         "description": "Specifies the remote CPG used for auto-created target volumes.",
         "type": "string"
        },
        "targetName": {
         "description": "Specifies the attributes of the target of the Remote Copy group.",
         "type": "string"
        },
        "userCPG": {
         "description": "Specifies the user CPG used for auto-created target volumes.",
         "type": "string"
        },
        "version": {
         "type": "object",
         "properties": {
          "base": {
           "description": "Representation of the version that only includes Major.Minor.Rev (Release)",
           "type": "string"
          },
          "display": {
           "description": "Representation of the version that should be used for display purposes",
           "type": "string"
          },
          "full": {
           "description": "Representation of the version that includes everything",
           "type": "string"
          },
          "fullWithoutPatches": {
           "description": "Representation of the version that includes everything except updates",
           "type": "string"
          }
         },
         "description": "System OS version",
         "descriptionKey": "SCHEMA_SYSTEM_VERSION",
         "title": "*shared.Version"
        }
       },
       "title": "provisioning.ReplicationTargetProperty"
      }
     }
    }
   },
   "qosconfig.QosConfig": {
    "type": "object",
    "properties": {
     "bandwidthMaxLimitKiB": {
      "description": "I/O issue bandwidth maximum limit for QoS throttling.",
      "type": "integer",
      "format": "int64"
     },
     "bwDelayLimit": {
      "description": "The BW delay limit",
      "type": "integer",
      "format": "int64"
     },
     "bwGuarantee": {
      "description": "The BW guarantee",
      "type": "integer",
      "format": "int64"
     },
     "bwGuaranteeTb": {
      "description": "The guaranteed bandwidth limit associated with per Tb QoS policy",
      "type": "integer",
      "format": "int64"
     },
     "bwLimit": {
      "description": "The BW limit",
      "type": "integer",
      "format": "int64"
     },
     "bwLimitTb": {
      "description": "The bandwidth limit associated with per Tb QoS policy",
      "type": "integer",
      "format": "int64"
     },
     "displayname": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Name to be used for display purposes",
      "descriptionKey": "SCHEMA_DISPLAYNAME",
      "title": "*utils.I18nValue"
     },
     "domain": {
      "description": "Domain that the resource belongs to",
      "type": "string"
     },
     "enable": {
      "description": "If true, the QoS config is enabled. Otherwise, it is disabled.",
      "type": "boolean"
     },
     "id": {
      "description": "Numeric ID of the resource",
      "type": "integer",
      "format": "int64"
     },
     "ioDelayLimit": {
      "description": "The io delay limit",
      "type": "integer",
      "format": "int64"
     },
     "ioGuarantee": {
      "description": "The io guarantee",
      "type": "integer",
      "format": "int64"
     },
     "ioGuaranteeTb": {
      "description": "The guaranteed I/O limit associated with per Tb QoS policy",
      "type": "integer",
      "format": "int64"
     },
     "ioLimit": {
      "description": "The io limit",
      "type": "integer",
      "format": "int64"
     },
     "ioLimitTb": {
      "description": "The I/O limit associated with per Tb QoS policy",
      "type": "integer",
      "format": "int64"
     },
     "iopsMaxLimit": {
      "description": "I/O issue count maximum limit for QoS throttling.",
      "type": "integer",
      "format": "int64"
     },
     "shortVolumes": {
      "description": "QoS short name of volumes in the QoS configuration.",
      "type": "array",
      "items": {
       "description": "",
       "type": "string"
      }
     },
     "systemWWN": {
      "description": "WWN of the array",
      "type": "string"
     },
     "targetName": {
      "description": "Name of the QoS target.  If provided when modifying a QoS rule, this will be ignored",
      "type": "string"
     },
     "targetType": {
      "description": "QoS target type (QOS_TGT_VV, QOS_TGT_VVSET, QOS_TGT_DOMAIN or QOS_TGT_SYSTEM).  If provided when modifying a QoS rule, this will be ignored",
      "title": "qostarget.Enum",
      "enum": [
       "QOS_TGT_VV",
       "QOS_TGT_VVSET",
       "QOS_TGT_DOMAIN",
       "QOS_TGT_SYSTEM",
       "QOS_TGT_UNKNOWN"
      ],
      "type": "string"
     },
     "taskTags": {
      "description": "A list of tags used to filter tasks from resource updates",
      "type": "string"
     },
     "tlMax": {
      "description": "The lt max limit",
      "type": "integer",
      "format": "int64"
     },
     "tlMin": {
      "description": "The lt min limit",
      "type": "integer",
      "format": "int64"
     },
     "uid": {
      "description": "Unique Identifier of the resource",
      "type": "string"
     },
     "uri": {
      "description": "URI of the resource",
      "type": "string"
     },
     "volumes": {
      "description": "QoS volumes in the QoS configuration.",
      "type": "array",
      "items": {
       "description": "",
       "type": "string"
      }
     },
     "vvCnt": {
      "description": "The virtual volume count",
      "type": "integer",
      "format": "int64"
     }
    }
   },
   "qosconfig.SetQosConfig": {
    "type": "object",
    "properties": {
     "allowAIQoS": {
      "description": "Flag to force allow QoS rules even if Intelligent QoS is enabled.",
      "type": "boolean"
     },
     "bandwidthMaxLimitKiB": {
      "description": "I/O issue bandwidth maximum limit for QoS throttling.",
      "type": "integer",
      "format": "int64"
     },
     "enable": {
      "description": "If true, the QoS config is enabled. Otherwise, it is disabled.",
      "type": "boolean"
     },
     "iopsMaxLimit": {
      "description": "I/O issue count maximum limit for QoS throttling.",
      "type": "integer",
      "format": "int64"
     },
     "targetName": {
      "description": "Name of the QoS target.  If provided when modifying a QoS rule, this will be ignored",
      "type": "string"
     },
     "targetType": {
      "description": "QoS target type (QOS_TGT_VV, QOS_TGT_VVSET, QOS_TGT_DOMAIN or QOS_TGT_SYSTEM).  If provided when modifying a QoS rule, this will be ignored",
      "type": "string"
     }
    },
    "example": {
     "targetName": "vvset",
     "targetType": "QOS_TGT_VVSET",
     "iopsMaxLimit": 300,
     "enable": true
    }
   },
   "rights.Right": {
    "type": "object",
    "properties": {
     "description": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Localizable description of the user right",
      "descriptionKey": "SCHEMA_RIGHT_DESCRIPTION",
      "title": "*utils.I18nValue"
     },
     "name": {
      "description": "Name of the user right",
      "type": "string"
     },
     "uid": {
      "description": "Unique Identifier of the resource",
      "type": "string"
     },
     "uri": {
      "description": "URI of the resource",
      "type": "string"
     }
    }
   },
   "roles.Role": {
    "type": "object",
    "properties": {
     "displayname": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Name to be used for display purposes",
      "descriptionKey": "SCHEMA_DISPLAYNAME",
      "title": "*utils.I18nValue"
     },
     "domain": {
      "description": "Domain that the resource belongs to",
      "type": "string"
     },
     "id": {
      "description": "Integer ID of the user role",
      "type": "integer",
      "format": "int64"
     },
     "isInternal": {
      "description": "If true, the role is intended for internal use",
      "type": "boolean"
     },
     "name": {
      "description": "Name of the user role",
      "type": "string"
     },
     "rights": {
      "description": "A list of rights associated with the role",
      "type": "array",
      "items": {
       "description": "",
       "type": "string"
      }
     },
     "roleDescription": {
      "description": "A non-localizable description of the user role",
      "type": "string"
     },
     "systemWWN": {
      "description": "WWN of the array",
      "type": "string"
     },
     "uid": {
      "description": "Unique Identifier of the resource",
      "type": "string"
     },
     "uri": {
      "description": "URI of the resource",
      "type": "string"
     }
    }
   },
   "schedule.CreateSchedule": {
    "type": "object",
    "required": [
     "name",
     "minute",
     "hour",
     "dayofmonth",
     "month",
     "dayofweek"
    ],
    "properties": {
     "command": {
      "description": "Specifies the cli command to be scheduled. This is ignored if createsv field is present. Either this or createsv has to be specified. \u003cbr\u003e  Please refer to the CLI documentation for a list of supported commands.",
      "type": "string"
     },
     "createsv": {
      "type": "object",
      "required": [
       "namePattern",
       "vvOrVvset"
      ],
      "properties": {
       "addToSet": {
        "description": "Adds the volume snapshot to the specified volume set. The set will be created if it does not exist.",
        "type": "string"
       },
       "comment": {
        "description": "Free-form comments about volume snapshot",
        "type": "string"
       },
       "customName": {
        "description": "Specifies the snapshot name, using up to 255 characters in length.",
        "type": "string"
       },
       "expireSecs": {
        "description": "Expiration value specified for volume snapshot. Expected range [60-157680000].",
        "type": "integer",
        "format": "uint64"
       },
       "id": {
        "description": "ID of the snapshot to be created. Expected range [1-131071].",
        "type": "integer",
        "format": "uint64"
       },
       "namePattern": {
        "description": "Pattern that will be used to generate the name of snapshot",
        "title": "snapshotnamepattern.Enum",
        "enum": [
         "PARENT_TIMESTAMP",
         "PARENT_SEC_SINCE_EPOCH",
         "CUSTOM"
        ],
        "type": "string"
       },
       "rcopy": {
        "description": "Specifies that synchronous snapshots be taken of a volume in a remote copy group. The same snapshot will be applied on both the primary and secondary arrays.",
        "type": "boolean"
       },
       "readOnly": {
        "description": "If true snapshot mode is read only else read/write",
        "type": "boolean"
       },
       "retainSecs": {
        "description": "Retention value specified for volume snapshot. Expected range [60-157680000].",
        "type": "integer",
        "format": "uint64"
       },
       "vvOrVvset": {
        "description": "Specifies the parent volume name or volume set name, using up to 255 characters. The vvset name must start with \"set:\". When creating snapshots of a vvset, customName can contain various patterns that are used to form the snapshot volume name. For remote copy groups, the group name should begin with \"rcgroup:\". For this setting, @vvname@ replacements can be used. If a pattern is not given, the customName field is used as a prefix, to which the vvOrVvset is appended. This should be used in conjunction with the rcopy flag.",
        "type": "string"
       }
      },
      "description": "Parameters needed for the snapshot creation request. When this is specified, a createsv schedule is created; for other kinds of schedule please use command field instead. command field is ignored if this is present. Either this or command has to be specified.",
      "descriptionKey": "SCHEMA_CREATE_SCHED_CREATESV_PARAM",
      "title": "*schedule.CreateSnapshotParameters"
     },
     "dayofmonth": {
      "description": "Day of month that a scheduled task will execute. Allowed values are * or 1-31.",
      "type": "string"
     },
     "dayofweek": {
      "description": "Day of the week that a scheduled task will execute. Allowed values are 0-6. Sunday is 0.",
      "type": "string"
     },
     "hour": {
      "description": "Hour that a scheduled task will execute. Allowed values are * or 0-23.",
      "type": "string"
     },
     "interval": {
      "description": "Interval that a scheduled task will execute. Allowed values are 15-1440.",
      "type": "string"
     },
     "minute": {
      "description": "Minute that a scheduled task will execute. Allowed values are 0-59.",
      "type": "string"
     },
     "month": {
      "description": "Month that a scheduled task will execute. Allowed values are * or 1-12.",
      "type": "string"
     },
     "name": {
      "description": "Specifies the name given to the schedule. The name can be up to 127 characters in length.",
      "type": "string"
     },
     "noalert": {
      "description": "Failure of tasks created with 'no_alert' will not generate alert if the task fails.",
      "type": "boolean"
     },
     "runonce": {
      "description": "The task will only run once, at the specified time.",
      "type": "boolean"
     },
     "year": {
      "description": "Year that a scheduled task will execute.",
      "type": "string"
     }
    },
    "example": {
     "name": "myschedule",
     "month": "*",
     "minute": "30",
     "hour": "*",
     "dayofmonth": "*",
     "dayofweek": "*",
     "createsv": {
      "readOnly": true,
      "namePattern": "CUSTOM",
      "customName": "mysnapsched.@y@@m@@d@@H@@M@@S@",
      "vvOrVvset": "vvsetvv.0",
      "addToSet": "mysnapsched.@y@@m@@d@@H@@M@@S@"
     }
    }
   },
   "schedule.PatchSchedule": {
    "type": "object",
    "required": [
     "year"
    ],
    "properties": {
     "dayofmonth": {
      "description": "Day of month that a scheduled task will execute. Allowed values are * or 1-31.",
      "type": "string"
     },
     "dayofweek": {
      "description": "Day of the week that a scheduled task will execute. Allowed values are 0-6. Sunday is 0.",
      "type": "string"
     },
     "hour": {
      "description": "Hour that a scheduled task will execute. Allowed values are * or 0-23.",
      "type": "string"
     },
     "interval": {
      "description": "Interval that a scheduled task will execute. Allowed values are 15-1440.",
      "type": "string"
     },
     "minute": {
      "description": "Minute that a scheduled task will execute. Allowed values are 0-59.",
      "type": "string"
     },
     "month": {
      "description": "Month that a scheduled task will execute. Allowed values are * or 1-12.",
      "type": "string"
     },
     "name": {
      "description": "Specifies the name given to the schedule. The name can be up to 127 characters in length.",
      "type": "string"
     },
     "noalert": {
      "description": "Failure of tasks created with 'no_alert' will not generate alert if the task fails.",
      "type": "boolean"
     },
     "year": {
      "description": "Year that a scheduled task will execute.",
      "type": "string"
     }
    },
    "example": {
     "name": "myschedule",
     "month": "*",
     "minute": "30",
     "hour": "*",
     "dayofmonth": "*",
     "dayofweek": "*"
    }
   },
   "schedule.Resume_Schedule": {
    "type": "resume_schedule",
    "fullType": "schedule.Schedule",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: resume_schedule",
      "type": "string"
     },
     "parameters": {
      "type": "object",
      "properties": {
       "command": {
        "description": "The CLI command scheduled.",
        "type": "string"
       },
       "dayofmonth": {
        "description": "Day of month that a scheduled task will execute. Allowed values are * or 1-31.",
        "type": "string"
       },
       "dayofweek": {
        "description": "Day of the week that a scheduled task will execute. Allowed values are 0-6. Sunday is 0.",
        "type": "string"
       },
       "displayname": {
        "type": "object",
        "properties": {
         "args": {
          "description": "Array of optional parameters to be used when formatting the text",
          "type": "array",
          "items": {
           "type": "AnyType"
          }
         },
         "default": {
          "description": "Text in the default language",
          "type": "string"
         },
         "key": {
          "description": "Key of the message in the i18n catalog",
          "type": "string"
         }
        },
        "description": "Name to be used for display purposes",
        "descriptionKey": "SCHEMA_DISPLAYNAME",
        "title": "*utils.I18nValue"
       },
       "domain": {
        "description": "Domain that the resource belongs to",
        "type": "string"
       },
       "hour": {
        "description": "Hour that a scheduled task will execute. Allowed values are * or 0-23.",
        "type": "string"
       },
       "id": {
        "description": "Numeric ID of the resource",
        "type": "integer",
        "format": "int64"
       },
       "interval": {
        "description": "Interval that a scheduled task will execute. Allowed values are  15-1440.",
        "type": "string"
       },
       "isalertenabled": {
        "description": "Whether the schedule will generate an alert if it could not run.",
        "type": "boolean"
       },
       "ispaused": {
        "description": "Whether the schedule has been paused.",
        "type": "boolean"
       },
       "issystemtask": {
        "description": "Whether the schedule is a system created one.",
        "type": "boolean"
       },
       "minute": {
        "description": "Minute that a scheduled task will execute. Allowed values are 0-59.",
        "type": "string"
       },
       "month": {
        "description": "Month that a scheduled task will execute. Allowed values are * or 1-12.",
        "type": "string"
       },
       "name": {
        "description": "Name of the resource",
        "type": "string"
       },
       "nextruntime": {
        "description": "The next time a schedule will run.",
        "type": "integer",
        "format": "int64"
       },
       "scheduledtaskname": {
        "type": "object",
        "properties": {
         "args": {
          "description": "Array of optional parameters to be used when formatting the text",
          "type": "array",
          "items": {
           "type": "AnyType"
          }
         },
         "default": {
          "description": "Text in the default language",
          "type": "string"
         },
         "key": {
          "description": "Key of the message in the i18n catalog",
          "type": "string"
         }
        },
        "description": "Name of the scheduled task",
        "descriptionKey": "SCHEMA_SCHED_TASK",
        "title": "*utils.I18nValue"
       },
       "status": {
        "description": "Whether the task is active or has been suspended.",
        "title": "status.Enum",
        "enum": [
         "SCHED_ACTIVE",
         "SCHED_SUSPENDED",
         "SCHED_UNKNOWN"
        ],
        "type": "string"
       },
       "systemWWN": {
        "description": "WWN of the array",
        "type": "string"
       },
       "taskTags": {
        "description": "A list of tags used to filter tasks from resource updates",
        "type": "string"
       },
       "uid": {
        "description": "Unique Identifier of the resource",
        "type": "string"
       },
       "uri": {
        "description": "URI of the resource",
        "type": "string"
       },
       "user": {
        "description": "The user that created the schedule.",
        "type": "string"
       }
      },
      "description": "Parameters for a custom action",
      "descriptionKey": "SCHEMA_CUSTOM_ACTION_PROPS"
     }
    },
    "description": "Used to resume a schedule",
    "descriptionKey": "SCHEDULE_RESUME_DESCRIPTION",
    "title": "resume_schedule",
    "example": {
     "action": "resume_schedule"
    }
   },
   "schedule.Schedule": {
    "type": "object",
    "properties": {
     "command": {
      "description": "The CLI command scheduled.",
      "type": "string"
     },
     "dayofmonth": {
      "description": "Day of month that a scheduled task will execute. Allowed values are * or 1-31.",
      "type": "string"
     },
     "dayofweek": {
      "description": "Day of the week that a scheduled task will execute. Allowed values are 0-6. Sunday is 0.",
      "type": "string"
     },
     "displayname": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Name to be used for display purposes",
      "descriptionKey": "SCHEMA_DISPLAYNAME",
      "title": "*utils.I18nValue"
     },
     "domain": {
      "description": "Domain that the resource belongs to",
      "type": "string"
     },
     "hour": {
      "description": "Hour that a scheduled task will execute. Allowed values are * or 0-23.",
      "type": "string"
     },
     "id": {
      "description": "Numeric ID of the resource",
      "type": "integer",
      "format": "int64"
     },
     "interval": {
      "description": "Interval that a scheduled task will execute. Allowed values are  15-1440.",
      "type": "string"
     },
     "isalertenabled": {
      "description": "Whether the schedule will generate an alert if it could not run.",
      "type": "boolean"
     },
     "ispaused": {
      "description": "Whether the schedule has been paused.",
      "type": "boolean"
     },
     "issystemtask": {
      "description": "Whether the schedule is a system created one.",
      "type": "boolean"
     },
     "minute": {
      "description": "Minute that a scheduled task will execute. Allowed values are 0-59.",
      "type": "string"
     },
     "month": {
      "description": "Month that a scheduled task will execute. Allowed values are * or 1-12.",
      "type": "string"
     },
     "name": {
      "description": "Name of the resource",
      "type": "string"
     },
     "nextruntime": {
      "description": "The next time a schedule will run.",
      "type": "integer",
      "format": "int64"
     },
     "scheduledtaskname": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Name of the scheduled task",
      "descriptionKey": "SCHEMA_SCHED_TASK",
      "title": "*utils.I18nValue"
     },
     "status": {
      "description": "Whether the task is active or has been suspended.",
      "title": "status.Enum",
      "enum": [
       "SCHED_ACTIVE",
       "SCHED_SUSPENDED",
       "SCHED_UNKNOWN"
      ],
      "type": "string"
     },
     "systemWWN": {
      "description": "WWN of the array",
      "type": "string"
     },
     "taskTags": {
      "description": "A list of tags used to filter tasks from resource updates",
      "type": "string"
     },
     "uid": {
      "description": "Unique Identifier of the resource",
      "type": "string"
     },
     "uri": {
      "description": "URI of the resource",
      "type": "string"
     },
     "user": {
      "description": "The user that created the schedule.",
      "type": "string"
     }
    }
   },
   "schedule.Suspend_Schedule": {
    "type": "suspend_schedule",
    "fullType": "schedule.Schedule",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: suspend_schedule",
      "type": "string"
     },
     "parameters": {
      "type": "object",
      "properties": {
       "command": {
        "description": "The CLI command scheduled.",
        "type": "string"
       },
       "dayofmonth": {
        "description": "Day of month that a scheduled task will execute. Allowed values are * or 1-31.",
        "type": "string"
       },
       "dayofweek": {
        "description": "Day of the week that a scheduled task will execute. Allowed values are 0-6. Sunday is 0.",
        "type": "string"
       },
       "displayname": {
        "type": "object",
        "properties": {
         "args": {
          "description": "Array of optional parameters to be used when formatting the text",
          "type": "array",
          "items": {
           "type": "AnyType"
          }
         },
         "default": {
          "description": "Text in the default language",
          "type": "string"
         },
         "key": {
          "description": "Key of the message in the i18n catalog",
          "type": "string"
         }
        },
        "description": "Name to be used for display purposes",
        "descriptionKey": "SCHEMA_DISPLAYNAME",
        "title": "*utils.I18nValue"
       },
       "domain": {
        "description": "Domain that the resource belongs to",
        "type": "string"
       },
       "hour": {
        "description": "Hour that a scheduled task will execute. Allowed values are * or 0-23.",
        "type": "string"
       },
       "id": {
        "description": "Numeric ID of the resource",
        "type": "integer",
        "format": "int64"
       },
       "interval": {
        "description": "Interval that a scheduled task will execute. Allowed values are  15-1440.",
        "type": "string"
       },
       "isalertenabled": {
        "description": "Whether the schedule will generate an alert if it could not run.",
        "type": "boolean"
       },
       "ispaused": {
        "description": "Whether the schedule has been paused.",
        "type": "boolean"
       },
       "issystemtask": {
        "description": "Whether the schedule is a system created one.",
        "type": "boolean"
       },
       "minute": {
        "description": "Minute that a scheduled task will execute. Allowed values are 0-59.",
        "type": "string"
       },
       "month": {
        "description": "Month that a scheduled task will execute. Allowed values are * or 1-12.",
        "type": "string"
       },
       "name": {
        "description": "Name of the resource",
        "type": "string"
       },
       "nextruntime": {
        "description": "The next time a schedule will run.",
        "type": "integer",
        "format": "int64"
       },
       "scheduledtaskname": {
        "type": "object",
        "properties": {
         "args": {
          "description": "Array of optional parameters to be used when formatting the text",
          "type": "array",
          "items": {
           "type": "AnyType"
          }
         },
         "default": {
          "description": "Text in the default language",
          "type": "string"
         },
         "key": {
          "description": "Key of the message in the i18n catalog",
          "type": "string"
         }
        },
        "description": "Name of the scheduled task",
        "descriptionKey": "SCHEMA_SCHED_TASK",
        "title": "*utils.I18nValue"
       },
       "status": {
        "description": "Whether the task is active or has been suspended.",
        "title": "status.Enum",
        "enum": [
         "SCHED_ACTIVE",
         "SCHED_SUSPENDED",
         "SCHED_UNKNOWN"
        ],
        "type": "string"
       },
       "systemWWN": {
        "description": "WWN of the array",
        "type": "string"
       },
       "taskTags": {
        "description": "A list of tags used to filter tasks from resource updates",
        "type": "string"
       },
       "uid": {
        "description": "Unique Identifier of the resource",
        "type": "string"
       },
       "uri": {
        "description": "URI of the resource",
        "type": "string"
       },
       "user": {
        "description": "The user that created the schedule.",
        "type": "string"
       }
      },
      "description": "Parameters for a custom action",
      "descriptionKey": "SCHEMA_CUSTOM_ACTION_PROPS"
     }
    },
    "description": "Used to suspend a schedule",
    "descriptionKey": "SCHEDULE_SUSPEND_DESCRIPTION",
    "title": "suspend_schedule",
    "example": {
     "action": "suspend_schedule"
    }
   },
   "sessions.LoginRequest": {
    "type": "object",
    "required": [
     "password",
     "user"
    ],
    "properties": {
     "password": {
      "description": "User password. May be passed as either an array of single characters or as a single string",
      "type": "array",
      "items": {
       "description": "",
       "type": "string"
      }
     },
     "user": {
      "description": "Name of the user",
      "type": "string"
     }
    },
    "example": {
     "username": "alice",
     "password": "password"
    }
   },
   "sessions.LoginRequest2": {
    "type": "object",
    "required": [
     "password",
     "user"
    ],
    "properties": {
     "password": {
      "description": "User password. May be passed as either an array of single characters or as a single string",
      "type": "string"
     },
     "user": {
      "description": "Name of the user",
      "type": "string"
     }
    }
   },
   "sessions.LoginResponse": {
    "type": "object",
    "required": [
     "username"
    ],
    "properties": {
     "arrayPrivileges": {
      "description": "privileges possessed by the embedded array account, if available",
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "domain": {
         "description": "Domain for this privilege",
         "type": "string"
        },
        "domainId": {
         "description": "Domain id for this privilege",
         "type": "integer",
         "format": "uint64"
        },
        "localizedRole": {
         "type": "object",
         "properties": {
          "args": {
           "description": "Array of optional parameters to be used when formatting the text",
           "type": "array",
           "items": {
            "type": "AnyType"
           }
          },
          "default": {
           "description": "Text in the default language",
           "type": "string"
          },
          "key": {
           "description": "Key of the message in the i18n catalog",
           "type": "string"
          }
         },
         "description": "Localized role for this privilege",
         "descriptionKey": "SCHEMA_ARRAYPRIVILEGE_LOCALIZED_ROLE",
         "title": "*utils.I18nValue"
        },
        "role": {
         "description": "Role for this privilege",
         "type": "string"
        },
        "roleId": {
         "description": "Role id for this privilege",
         "type": "integer",
         "format": "uint64"
        }
       },
       "title": "wsapiv1.ArrayPrivilege"
      }
     },
     "key": {
      "description": "Session token from a successful login",
      "type": "string"
     },
     "sessionId": {
      "description": "Session ID from a successful login",
      "type": "string"
     },
     "username": {
      "description": "Name of the user",
      "type": "string"
     }
    }
   },
   "sessions.SentryLoginResponse": {
    "type": "object",
    "properties": {
     "arrayPrivileges": {
      "description": "privileges possessed by the embedded array account, if available",
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "domain": {
         "description": "Domain for this privilege",
         "type": "string"
        },
        "domainId": {
         "description": "Domain id for this privilege",
         "type": "integer",
         "format": "uint64"
        },
        "localizedRole": {
         "type": "object",
         "properties": {
          "args": {
           "description": "Array of optional parameters to be used when formatting the text",
           "type": "array",
           "items": {
            "type": "AnyType"
           }
          },
          "default": {
           "description": "Text in the default language",
           "type": "string"
          },
          "key": {
           "description": "Key of the message in the i18n catalog",
           "type": "string"
          }
         },
         "description": "Localized role for this privilege",
         "descriptionKey": "SCHEMA_ARRAYPRIVILEGE_LOCALIZED_ROLE",
         "title": "*utils.I18nValue"
        },
        "role": {
         "description": "Role for this privilege",
         "type": "string"
        },
        "roleId": {
         "description": "Role id for this privilege",
         "type": "integer",
         "format": "uint64"
        }
       },
       "title": "wsapiv1.ArrayPrivilege"
      }
     },
     "key": {
      "description": "Session token from a successful login",
      "type": "string"
     },
     "sentryResponse": {
      "type": "object",
      "properties": {
       "arrayPrivileges": {
        "description": "Array privileges assigned to the user session",
        "type": "AnyType"
       },
       "error": {
        "type": "object",
        "properties": {
         "code": {
          "description": "An integer code for the errors",
          "type": "integer",
          "format": "int"
         },
         "data": {
          "description": "Additional data for the error",
          "type": "AnyType"
         },
         "message": {
          "description": "English test that describes the error",
          "type": "string"
         }
        },
        "description": "Describes a failed request",
        "descriptionKey": "SCHEMA_SENTRY_ERROR",
        "title": "*tcl_monster.SentryApiError"
       },
       "id": {
        "description": "An unsigned integer that uniquely identifies the request",
        "type": "integer",
        "format": "uint32"
       },
       "jsonrpc": {
        "description": "The version of the authentication API",
        "type": "string"
       },
       "key": {
        "description": "Session token from a successful login",
        "type": "string"
       },
       "result": {
        "type": "object",
        "description": "Describes a successful result for the request",
        "descriptionKey": "SCHEMA_SENTRY_RESULT",
        "title": "*tcl_monster.Result"
       },
       "sessionId": {
        "description": "Session ID from a successful login",
        "type": "string"
       }
      },
      "description": "The raw json response to the login request.  The caller may need to inspect this json to determine what to do next",
      "descriptionKey": "SCHEMA_LOGINRESPONSE_SENTRYRESPONSE",
      "title": "tcl_monster.SentryJsonApiResponse"
     },
     "sessionId": {
      "description": "Session ID from a successful login",
      "type": "string"
     }
    }
   },
   "sessions.UserSession": {
    "type": "object",
    "properties": {
     "arrayAccount": {
      "type": "object",
      "properties": {
       "name": {
        "description": "username of array account",
        "type": "string"
       },
       "password": {
        "description": "password of array account, if available",
        "type": "string"
       }
      },
      "description": "information for embedded array account, if available",
      "descriptionKey": "SCHEMA_USERSESSION_ARRAYACCOUNT",
      "title": "ArrayAccount"
     },
     "arrayPrivileges": {
      "description": "privileges possessed by the embedded array account, if available",
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "domain": {
         "description": "Domain for this privilege",
         "type": "string"
        },
        "domainId": {
         "description": "Domain id for this privilege",
         "type": "integer",
         "format": "uint64"
        },
        "localizedRole": {
         "type": "object",
         "properties": {
          "args": {
           "description": "Array of optional parameters to be used when formatting the text",
           "type": "array",
           "items": {
            "type": "AnyType"
           }
          },
          "default": {
           "description": "Text in the default language",
           "type": "string"
          },
          "key": {
           "description": "Key of the message in the i18n catalog",
           "type": "string"
          }
         },
         "description": "Localized role for this privilege",
         "descriptionKey": "SCHEMA_ARRAYPRIVILEGE_LOCALIZED_ROLE",
         "title": "*utils.I18nValue"
        },
        "role": {
         "description": "Role for this privilege",
         "type": "string"
        },
        "roleId": {
         "description": "Role id for this privilege",
         "type": "integer",
         "format": "uint64"
        }
       },
       "title": "wsapiv1.ArrayPrivilege"
      }
     },
     "clientIP": {
      "description": "IP address of client's host",
      "type": "string"
     },
     "clientIPList": {
      "description": "IP address of client's host according to HTTP request and according to headers",
      "type": "string"
     },
     "clientPort": {
      "description": "Port the client request was received on",
      "type": "string"
     },
     "createDate": {
      "description": "timestamp of login",
      "type": "time.Time",
      "Array": false
     },
     "expires": {
      "description": "Expiration date",
      "type": "time.Time",
      "Array": false
     },
     "isAdminOrSupport": {
      "description": "is admin or support session",
      "type": "boolean"
     },
     "isInternal": {
      "description": "is for internal use",
      "type": "boolean"
     },
     "sessionID": {
      "description": "Session ID",
      "type": "string"
     },
     "sessionToken": {
      "description": "token identifying this session",
      "type": "string"
     },
     "taskTags": {
      "description": "A list of tags used to filter tasks from resource updates",
      "type": "string"
     },
     "username": {
      "description": "username of account",
      "type": "string"
     }
    }
   },
   "shared.EmptyBody": {
    "type": "object"
   },
   "softwareupdate_recommendations.Download_software_package": {
    "type": "DOWNLOAD",
    "fullType": "softwareupdate_recommendations.",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: DOWNLOAD",
      "type": "string"
     }
    },
    "description": "Download software package from repository",
    "descriptionKey": "SWUPDATE_DOWNLOAD_DESCRIPTION",
    "title": "DOWNLOAD",
    "example": {
     "action": "DOWNLOAD"
    }
   },
   "softwareupdate_recommendations.OS_Update": {
    "type": "UPDATE",
    "fullType": "softwareupdate_recommendations.SwUpdateParams",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: UPDATE",
      "type": "string"
     },
     "parameters": {
      "type": "object",
      "properties": {
       "preupgradewarn": {
        "description": "When set to true, a warning will stop the installation with status FAILED_WITH_WARN or COMPLETED_WITH_WARN, depending on when the warning occurs. \u003cbr\u003e Setting this to false will allow the update to proceed with warnings. (By default, the value will be true, and warnings will halt an update.)",
        "type": "boolean"
       }
      },
      "description": "Parameters for a custom action",
      "descriptionKey": "SCHEMA_CUSTOM_ACTION_PROPS"
     }
    },
    "description": "Performs system OS update operations",
    "descriptionKey": "SWUPDATE_OS_DESCRIPTION",
    "title": "UPDATE",
    "example": {
     "action": "UPDATE",
     "parameters": {
      "preupgradewarn": "true"
     }
    }
   },
   "softwareupdate_recommendations.Software_update_precheck": {
    "type": "READINESS_CHECK",
    "fullType": "softwareupdate_recommendations.",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: READINESS_CHECK",
      "type": "string"
     }
    },
    "description": "Performs pre-update checks for an OS update package staged on the system",
    "descriptionKey": "SWUPDATE_PRECHK_DESCRIPTION",
    "title": "READINESS_CHECK",
    "example": {
     "action": "READINESS_CHECK"
    }
   },
   "softwareupdate_recommendations.SwRecommendation": {
    "type": "object",
    "properties": {
     "displayname": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Name to be used for display purposes",
      "descriptionKey": "SCHEMA_DISPLAYNAME",
      "title": "*utils.I18nValue"
     },
     "domain": {
      "description": "Domain that the resource belongs to",
      "type": "string"
     },
     "downloadStatus": {
      "type": "object",
      "properties": {
       "errorMessage": {
        "description": "Most recent error message from the operation",
        "type": "string"
       },
       "progress": {
        "description": "Integer progress of the operation between 0 and 100. Failed operations will have progress 0.",
        "type": "integer",
        "format": "int"
       },
       "status": {
        "description": "Current status of the operation",
        "title": "updatestatus_states.Enum",
        "enum": [
         "NOT_STARTED",
         "IN_PROGRESS",
         "COMPLETED",
         "COMPLETED_WITH_WARN",
         "COMPLETED_WITH_FAIL",
         "FAILED",
         "FAILED_WITH_WARN",
         "UNKNOWN"
        ],
        "type": "string"
       }
      },
      "description": "Status of download and staging of the software package onto the storage system",
      "descriptionKey": "SCHEMA_SWRECOMMENDATIONSTATUS_DOWNLOADSTATUS",
      "title": "SwStageStatus"
     },
     "installationStatus": {
      "type": "object",
      "properties": {
       "errorMessage": {
        "description": "Most recent error message from the operation",
        "type": "string"
       },
       "progress": {
        "description": "Integer progress of the operation between 0 and 100. Failed operations will have progress 0.",
        "type": "integer",
        "format": "int"
       },
       "status": {
        "description": "Current status of the operation",
        "title": "updatestatus_states.Enum",
        "enum": [
         "NOT_STARTED",
         "IN_PROGRESS",
         "COMPLETED",
         "COMPLETED_WITH_WARN",
         "COMPLETED_WITH_FAIL",
         "FAILED",
         "FAILED_WITH_WARN",
         "UNKNOWN"
        ],
        "type": "string"
       },
       "statusUID": {
        "description": "UID associated with the softwarestatus resource that corresponds to this recommendation resource's update operation",
        "type": "string"
       },
       "statusURI": {
        "description": "URI associated with the softwarestatus resource that corresponds to this recommendation resource's update operation",
        "type": "string"
       }
      },
      "description": "Update installation status of the recommendation",
      "descriptionKey": "SCHEMA_SWRECOMMENDATIONSTATUS_INSTALLATIONSTATUS",
      "title": "SwUpdateStageStatus"
     },
     "lastChecked": {
      "description": "Time when the software package status was last updated (RFC339 format, e.g. 2025-01-15T13:30:30-07:00)",
      "type": "string"
     },
     "packageName": {
      "description": "Internal identifier of the recommended package",
      "type": "string"
     },
     "readinessStatus": {
      "type": "object",
      "properties": {
       "errorMessage": {
        "description": "Most recent error message from the operation",
        "type": "string"
       },
       "progress": {
        "description": "Integer progress of the operation between 0 and 100. Failed operations will have progress 0.",
        "type": "integer",
        "format": "int"
       },
       "status": {
        "description": "Current status of the operation",
        "title": "updatestatus_states.Enum",
        "enum": [
         "NOT_STARTED",
         "IN_PROGRESS",
         "COMPLETED",
         "COMPLETED_WITH_WARN",
         "COMPLETED_WITH_FAIL",
         "FAILED",
         "FAILED_WITH_WARN",
         "UNKNOWN"
        ],
        "type": "string"
       }
      },
      "description": "Readiness checks status of the recommendation. If checks have failed or warned, they will be listed in 'errorMessage'",
      "descriptionKey": "SCHEMA_SWRECOMMENDATIONSTATUS_READINESSSTATUS",
      "title": "SwStageStatus"
     },
     "releaseDate": {
      "description": "Original release date of the recommendation (RFC339 format, e.g. 2025-01-15T13:30:30-07:00)",
      "type": "string"
     },
     "severity": {
      "description": "Recommended version severity. If manually uploaded, it will be MANUALLY_STAGED. If received from RDA, it will be one of the following: \u003cbr\u003e 'AVAILABLE' when first released, 'OPTIONAL' when not required, 'RECOMMENDED' when important to update when possible, and 'CRITICAL' when imperative to update as soon as possible.",
      "title": "updatestatus_pkgseverity.Enum",
      "enum": [
       "MANUALLY_STAGED",
       "CRITICAL",
       "PREREQUISITE",
       "RECOMMENDED",
       "OPTIONAL",
       "AVAILABLE",
       "CURRENT"
      ],
      "type": "string"
     },
     "systemWWN": {
      "description": "WWN of the array",
      "type": "string"
     },
     "targetVersion": {
      "description": "OS version of the recommendation",
      "type": "string"
     },
     "uid": {
      "description": "Unique Identifier of the resource",
      "type": "string"
     },
     "uri": {
      "description": "URI of the resource",
      "type": "string"
     }
    },
    "example": {
     "members": {
      "50aa461fe3fcda9b529c3ad14eddb7f8": {
       "downloadStatus": {
        "status": "COMPLETED"
       },
       "installationStatus": {
        "status": "NOT_STARTED"
       },
       "packageName": "OS-10.4.8.9",
       "readinessStatus": {
        "status": "NOT_STARTED"
       },
       "releaseDate": "2025-01-21T05:14:30-07:00",
       "severity": "MANUALLY_STAGED",
       "targetVersion": "10.4.8",
       "uid": "50aa461fe3fcda9b529c3ad14eddb7f8",
       "uri": "/api/v3/softwareupdate/recommendations/50aa461fe3fcda9b529c3ad14eddb7f8",
       "lastModifiedEpoch": 1741816838,
       "lastModifiedEpochMS": 1741816838852
      }
     }
    }
   },
   "softwareupdate_recommendations.SwUpdateParams": {
    "type": "object",
    "properties": {
     "preupgradewarn": {
      "description": "When set to true, a warning will stop the installation with status FAILED_WITH_WARN or COMPLETED_WITH_WARN, depending on when the warning occurs. \u003cbr\u003e Setting this to false will allow the update to proceed with warnings. (By default, the value will be true, and warnings will halt an update.)",
      "type": "boolean"
     }
    }
   },
   "softwareupdate_updatestatus.SwUpgStatus": {
    "type": "object",
    "properties": {
     "currentErrorMessage": {
      "description": "Most recent error message from the current operation",
      "type": "string"
     },
     "currentProgress": {
      "description": "Integer progress of the current workflow out of 100. This field represents progress toward total completion, not just for the current stage.",
      "type": "integer",
      "format": "int"
     },
     "currentStage": {
      "description": "Current stage of the operation being performed (one of PRE_UPDATE, UPDATE, POST_CHECK, ADMITHW). When the operation is completed, stage will be DONE.",
      "type": "string"
     },
     "currentStatus": {
      "description": "Status of the current operation",
      "title": "updatestatus_states.Enum",
      "enum": [
       "NOT_STARTED",
       "IN_PROGRESS",
       "COMPLETED",
       "COMPLETED_WITH_WARN",
       "COMPLETED_WITH_FAIL",
       "FAILED",
       "FAILED_WITH_WARN",
       "UNKNOWN"
      ],
      "type": "string"
     },
     "displayname": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Name to be used for display purposes",
      "descriptionKey": "SCHEMA_DISPLAYNAME",
      "title": "*utils.I18nValue"
     },
     "domain": {
      "description": "Domain that the resource belongs to",
      "type": "string"
     },
     "originalVersion": {
      "description": "OS version when the update began",
      "type": "string"
     },
     "systemWWN": {
      "description": "WWN of the array",
      "type": "string"
     },
     "targetVersion": {
      "description": "OS version of the recommendation",
      "type": "string"
     },
     "uid": {
      "description": "Unique Identifier of the resource",
      "type": "string"
     },
     "uri": {
      "description": "URI of the resource",
      "type": "string"
     }
    },
    "example": {
     "members": {
      "eefe90f783ca6f4fe1a7f31698b70ebf": {
       "currentProgress": 100,
       "currentStage": "DONE",
       "currentStatus": "COMPLETED",
       "originalVersion": "10.4.5",
       "lastModifiedEpoch": 1741816533,
       "lastModifiedEpochMS": 1741816533472,
       "targetVersion": "10.5.0",
       "uid": "eefe90f783ca6f4fe1a7f31698b70ebf",
       "uri": "/api/v3/softwareupdate/softwarestatus/eefe90f783ca6f4fe1a7f31698b70ebf"
      }
     }
    }
   },
   "switch_device.Locate_Switch": {
    "type": "LOCATE",
    "fullType": "hardware.Locate",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: LOCATE",
      "type": "string"
     },
     "parameters": {
      "type": "object",
      "properties": {
       "locateEnabled": {
        "description": "Indicates if the locate beacon should be enabled or not",
        "type": "boolean"
       }
      },
      "description": "Parameters for a custom action",
      "descriptionKey": "SCHEMA_CUSTOM_ACTION_PROPS"
     }
    },
    "description": "Start or stop locate switch operation by turning on or off locate LEDs",
    "descriptionKey": "SWITCH_LOCATE_DESCRIPTION",
    "title": "LOCATE",
    "example": {
     "action": "LOCATE",
     "parameters": {
      "locateEnabled": true
     }
    }
   },
   "switch_device.Reboot_Switch": {
    "type": "REBOOT_SWITCH",
    "fullType": "hardware.RebootSwitch",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: REBOOT_SWITCH",
      "type": "string"
     },
     "parameters": {
      "type": "object",
      "properties": {
       "switchName": {
        "description": "Name of the switch to reboot",
        "type": "string"
       }
      },
      "description": "Parameters for a custom action",
      "descriptionKey": "SCHEMA_CUSTOM_ACTION_PROPS",
      "example": {
       "action": "REBOOT_SWITCH",
       "parameters": {
        "switchName": "sw1"
       }
      }
     }
    },
    "description": "Reboot the specified switch",
    "descriptionKey": "SWITCH_REBOOT_DESCRIPTION",
    "title": "REBOOT_SWITCH",
    "example": {
     "action": "REBOOT_SWITCH",
     "parameters": {
      "switchName": "sw1"
     }
    }
   },
   "switch_device.Switch": {
    "type": "object",
    "properties": {
     "activeIPAddress": {
      "description": "Switch active IP Address",
      "type": "string"
     },
     "dhcpServers": {
      "description": "Collection of DHCP servers on the switch",
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "status": {
         "description": "DHCP status",
         "type": "string"
        },
        "vrfName": {
         "description": "DHCP VRF Name",
         "type": "string"
        }
       },
       "title": "switch_device.DHCPServer"
      }
     },
     "displayname": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Name to be used for display purposes",
      "descriptionKey": "SCHEMA_DISPLAYNAME",
      "title": "*utils.I18nValue"
     },
     "domain": {
      "description": "Domain that the resource belongs to",
      "type": "string"
     },
     "fanState": {
      "type": "object",
      "properties": {
       "detailed": {
        "description": "Array of the detailed states of the resource",
        "type": "array",
        "items": {
         "type": "object",
         "properties": {
          "args": {
           "description": "Array of optional parameters to be used when formatting the text",
           "type": "array",
           "items": {
            "type": "AnyType"
           }
          },
          "default": {
           "description": "Text in the default language",
           "type": "string"
          },
          "key": {
           "description": "Key of the message in the i18n catalog",
           "type": "string"
          }
         },
         "title": "utils.I18nValue"
        }
       },
       "overall": {
        "description": "Overall state of the resource",
        "title": "overallstate.Enum",
        "enum": [
         "STATE_UNKNOWN",
         "STATE_NORMAL",
         "STATE_WARNING",
         "STATE_DEGRADED",
         "STATE_FAILED",
         "STATE_NOT_APPLICABLE",
         "STATE_NEW"
        ],
        "type": "string"
       }
      },
      "description": "Switch fan state",
      "descriptionKey": "SCHEMA_SWITCH_FAN_STATE",
      "title": "shared.ResourceState"
     },
     "fwVersion": {
      "description": "Switch firmware version",
      "type": "string"
     },
     "id": {
      "description": "Numeric ID of the resource",
      "type": "integer",
      "format": "int64"
     },
     "localizedMode": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Switch mode e.g. Online",
      "descriptionKey": "SCHEMA_SWITCH_MODE",
      "title": "*utils.I18nValue"
     },
     "locateEnabled": {
      "description": "Indicates if the locate beacon is enabled or not",
      "type": "boolean"
     },
     "macAddress": {
      "description": "MAC address of the switch",
      "type": "string"
     },
     "manufacturing": {
      "type": "object",
      "properties": {
       "assemblyRev": {
        "description": "Assembly revision",
        "type": "string"
       },
       "checkSum": {
        "description": "Checksum",
        "type": "string"
       },
       "hpeModelName": {
        "description": "{vendor} model name",
        "type": "string"
       },
       "manufacturer": {
        "description": "Manufacturer name",
        "type": "string"
       },
       "model": {
        "description": "Model name",
        "type": "string"
       },
       "saleablePartNumber": {
        "description": "Saleable part number",
        "type": "string"
       },
       "saleableSerialNumber": {
        "description": "Saleable serial number",
        "type": "string"
       },
       "serialNumber": {
        "description": "Serial number",
        "type": "string"
       },
       "sparePartNumber": {
        "description": "Spare part number",
        "type": "string"
       }
      },
      "description": "Manufacturing information",
      "descriptionKey": "SCHEMA_MFG",
      "title": "*shared.ManufacturingData"
     },
     "mode": {
      "description": "Switch mode e.g. Online",
      "type": "string"
     },
     "name": {
      "description": "Name of the resource",
      "type": "string"
     },
     "primaryPath": {
      "description": "Switch primary path state",
      "type": "string"
     },
     "ps1State": {
      "type": "object",
      "properties": {
       "detailed": {
        "description": "Array of the detailed states of the resource",
        "type": "array",
        "items": {
         "type": "object",
         "properties": {
          "args": {
           "description": "Array of optional parameters to be used when formatting the text",
           "type": "array",
           "items": {
            "type": "AnyType"
           }
          },
          "default": {
           "description": "Text in the default language",
           "type": "string"
          },
          "key": {
           "description": "Key of the message in the i18n catalog",
           "type": "string"
          }
         },
         "title": "utils.I18nValue"
        }
       },
       "overall": {
        "description": "Overall state of the resource",
        "title": "overallstate.Enum",
        "enum": [
         "STATE_UNKNOWN",
         "STATE_NORMAL",
         "STATE_WARNING",
         "STATE_DEGRADED",
         "STATE_FAILED",
         "STATE_NOT_APPLICABLE",
         "STATE_NEW"
        ],
        "type": "string"
       }
      },
      "description": "Switch PS1 state",
      "descriptionKey": "SCHEMA_SWITCH_PS1_STATE",
      "title": "shared.ResourceState"
     },
     "ps2State": {
      "type": "object",
      "properties": {
       "detailed": {
        "description": "Array of the detailed states of the resource",
        "type": "array",
        "items": {
         "type": "object",
         "properties": {
          "args": {
           "description": "Array of optional parameters to be used when formatting the text",
           "type": "array",
           "items": {
            "type": "AnyType"
           }
          },
          "default": {
           "description": "Text in the default language",
           "type": "string"
          },
          "key": {
           "description": "Key of the message in the i18n catalog",
           "type": "string"
          }
         },
         "title": "utils.I18nValue"
        }
       },
       "overall": {
        "description": "Overall state of the resource",
        "title": "overallstate.Enum",
        "enum": [
         "STATE_UNKNOWN",
         "STATE_NORMAL",
         "STATE_WARNING",
         "STATE_DEGRADED",
         "STATE_FAILED",
         "STATE_NOT_APPLICABLE",
         "STATE_NEW"
        ],
        "type": "string"
       }
      },
      "description": "Switch PS2 state",
      "descriptionKey": "SCHEMA_SWITCH_PS2_STATE",
      "title": "shared.ResourceState"
     },
     "secondaryPath": {
      "description": "Switch secondary path state",
      "type": "string"
     },
     "state": {
      "type": "object",
      "properties": {
       "detailed": {
        "description": "Array of the detailed states of the resource",
        "type": "array",
        "items": {
         "type": "object",
         "properties": {
          "args": {
           "description": "Array of optional parameters to be used when formatting the text",
           "type": "array",
           "items": {
            "type": "AnyType"
           }
          },
          "default": {
           "description": "Text in the default language",
           "type": "string"
          },
          "key": {
           "description": "Key of the message in the i18n catalog",
           "type": "string"
          }
         },
         "title": "utils.I18nValue"
        }
       },
       "overall": {
        "description": "Overall state of the resource",
        "title": "overallstate.Enum",
        "enum": [
         "STATE_UNKNOWN",
         "STATE_NORMAL",
         "STATE_WARNING",
         "STATE_DEGRADED",
         "STATE_FAILED",
         "STATE_NOT_APPLICABLE",
         "STATE_NEW"
        ],
        "type": "string"
       }
      },
      "description": "Switch state",
      "descriptionKey": "SCHEMA_SWITCH_STATE",
      "title": "shared.ResourceState"
     },
     "systemWWN": {
      "description": "WWN of the array",
      "type": "string"
     },
     "temperatureDetail": {
      "description": "Temperature detailed state of the switch",
      "type": "string"
     },
     "temperatureState": {
      "type": "object",
      "properties": {
       "detailed": {
        "description": "Array of the detailed states of the resource",
        "type": "array",
        "items": {
         "type": "object",
         "properties": {
          "args": {
           "description": "Array of optional parameters to be used when formatting the text",
           "type": "array",
           "items": {
            "type": "AnyType"
           }
          },
          "default": {
           "description": "Text in the default language",
           "type": "string"
          },
          "key": {
           "description": "Key of the message in the i18n catalog",
           "type": "string"
          }
         },
         "title": "utils.I18nValue"
        }
       },
       "overall": {
        "description": "Overall state of the resource",
        "title": "overallstate.Enum",
        "enum": [
         "STATE_UNKNOWN",
         "STATE_NORMAL",
         "STATE_WARNING",
         "STATE_DEGRADED",
         "STATE_FAILED",
         "STATE_NOT_APPLICABLE",
         "STATE_NEW"
        ],
        "type": "string"
       }
      },
      "description": "Temperature overall state",
      "descriptionKey": "SCHEMA_SWITCH_TEMP_STATE",
      "title": "shared.ResourceState"
     },
     "uid": {
      "description": "Unique Identifier of the resource",
      "type": "string"
     },
     "uri": {
      "description": "URI of the resource",
      "type": "string"
     },
     "vlans": {
      "description": "Collection of VLANs on the switch",
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "operationalState": {
         "description": "Status of VLAN",
         "type": "string"
        },
        "vlanId": {
         "description": "VLAN ID",
         "type": "integer",
         "format": "int32"
        },
        "vlanName": {
         "description": "Name of VLAN",
         "type": "string"
        }
       },
       "title": "switch_device.VLAN"
      }
     }
    }
   },
   "switch_port.Enable_Switch_Port": {
    "type": "ENABLE_SWITCH_PORT",
    "fullType": "hardware.EnableSwitchPort",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: ENABLE_SWITCH_PORT",
      "type": "string"
     },
     "parameters": {
      "type": "object",
      "properties": {
       "switchName": {
        "description": "Switch name for during enablement of switch port",
        "type": "string"
       },
       "switchPortId": {
        "description": "Switch port ID for during enablement of switch port",
        "type": "integer",
        "format": "uint32"
       }
      },
      "description": "Parameters for a custom action",
      "descriptionKey": "SCHEMA_CUSTOM_ACTION_PROPS"
     }
    },
    "description": "Enable port on the switch",
    "descriptionKey": "ENABLE_SWITCH_PORT_DESCRIPTION",
    "title": "ENABLE_SWITCH_PORT",
    "example": {
     "action": "ENABLE_SWITCH_PORT",
     "parameters": {
      "switchName": "sw1",
      "switchPortId": 1
     }
    }
   },
   "switch_port.SwitchPort": {
    "type": "object",
    "properties": {
     "device": {
      "description": "Device port is that the switch port is connected to",
      "type": "string"
     },
     "devicePort": {
      "description": "Port on device that the switch port is connected to",
      "type": "string"
     },
     "displayname": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Name to be used for display purposes",
      "descriptionKey": "SCHEMA_DISPLAYNAME",
      "title": "*utils.I18nValue"
     },
     "domain": {
      "description": "Domain that the resource belongs to",
      "type": "string"
     },
     "enclosure": {
      "description": "Enclosure port that the switch port is connected to",
      "type": "string"
     },
     "id": {
      "description": "Switch port ID",
      "type": "integer",
      "format": "uint32"
     },
     "ipAddress": {
      "description": "Switch port IP Address",
      "type": "string"
     },
     "macAddress": {
      "description": "Switch port MAC Address",
      "type": "string"
     },
     "portDescription": {
      "description": "Switch port Description",
      "type": "string"
     },
     "sfp": {
      "type": "object",
      "properties": {
       "cableLength": {
        "description": "Switch port SFP cable length",
        "type": "string"
       },
       "cableTechnology": {
        "description": "Switch port SFP cable technology",
        "type": "string"
       },
       "connector": {
        "description": "Switch port SFP connector",
        "type": "string"
       },
       "connectorStatus": {
        "description": "Switch port SFP connector status",
        "type": "string"
       },
       "formFactor": {
        "description": "Switch port SFP form factor",
        "type": "string"
       },
       "longXcvrDesc": {
        "description": "Switch port SFP long xcvr desc",
        "type": "string"
       },
       "maxSpeed": {
        "description": "Switch port SFP max speed",
        "type": "integer",
        "format": "int64"
       },
       "propPartNumber": {
        "description": "Switch port SFP prop part number",
        "type": "string"
       },
       "propProductNumber": {
        "description": "Switch port SFP prop product number",
        "type": "string"
       },
       "propSerialNumber": {
        "description": "Switch port SFP prop serial number",
        "type": "string"
       },
       "vendorName": {
        "description": "Switch port SFP vendor name",
        "type": "string"
       },
       "vendorOui": {
        "description": "Switch port SFP vendor OUI",
        "type": "string"
       },
       "vendorPartNumber": {
        "description": "Switch port SFP vendor part number",
        "type": "string"
       },
       "vendorRevision": {
        "description": "Switch port SFP vendor revision",
        "type": "string"
       },
       "vendorSerialNumber": {
        "description": "Switch port SFP vendor serial number",
        "type": "string"
       }
      },
      "description": "Switch port SFP information",
      "descriptionKey": "SCHEMA_SWITCH_SFP_INFO",
      "title": "*switch_port.SFPInfo"
     },
     "state": {
      "type": "object",
      "properties": {
       "detailed": {
        "description": "Array of the detailed states of the resource",
        "type": "array",
        "items": {
         "type": "object",
         "properties": {
          "args": {
           "description": "Array of optional parameters to be used when formatting the text",
           "type": "array",
           "items": {
            "type": "AnyType"
           }
          },
          "default": {
           "description": "Text in the default language",
           "type": "string"
          },
          "key": {
           "description": "Key of the message in the i18n catalog",
           "type": "string"
          }
         },
         "title": "utils.I18nValue"
        }
       },
       "overall": {
        "description": "Overall state of the resource",
        "title": "overallstate.Enum",
        "enum": [
         "STATE_UNKNOWN",
         "STATE_NORMAL",
         "STATE_WARNING",
         "STATE_DEGRADED",
         "STATE_FAILED",
         "STATE_NOT_APPLICABLE",
         "STATE_NEW"
        ],
        "type": "string"
       }
      },
      "description": "Switch port State",
      "descriptionKey": "SCHEMA_SWITCH_PORT_STATE",
      "title": "shared.ResourceState"
     },
     "switchMacAddress": {
      "description": "MAC address of the switch",
      "type": "string"
     },
     "switchName": {
      "description": "Switch name",
      "type": "string"
     },
     "switchUid": {
      "description": "Switch UID",
      "type": "string"
     },
     "systemWWN": {
      "description": "WWN of the array",
      "type": "string"
     },
     "uid": {
      "description": "Unique Identifier of the resource",
      "type": "string"
     },
     "uri": {
      "description": "URI of the resource",
      "type": "string"
     }
    }
   },
   "system.MaintenanceModeDetails": {
    "type": "object",
    "properties": {
     "comment": {
      "description": "Maintenance description",
      "type": "string"
     },
     "endTime": {
      "type": "object",
      "properties": {
       "ms": {
        "description": "Epoch time in milliseconds",
        "type": "integer",
        "format": "int64"
       },
       "tz": {
        "description": "Time zone name",
        "type": "string"
       }
      },
      "description": "Maintenance end time",
      "descriptionKey": "SCHEMA_MAINTENANCEMODEDETAILS_ENDTIME",
      "title": "*shared.Calendar"
     },
     "instances": {
      "description": "Maintenance instance",
      "type": "integer",
      "format": "uint64"
     },
     "reasonCode": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Maintenance type",
      "descriptionKey": "SCHEMA_MAINTENANCEMODEDETAILS_REASONCODE",
      "title": "*utils.I18nValue"
     },
     "startTime": {
      "type": "object",
      "properties": {
       "ms": {
        "description": "Epoch time in milliseconds",
        "type": "integer",
        "format": "int64"
       },
       "tz": {
        "description": "Time zone name",
        "type": "string"
       }
      },
      "description": "Maintenance start time",
      "descriptionKey": "SCHEMA_MAINTENANCEMODEDETAILS_STARTTIME",
      "title": "*shared.Calendar"
     },
     "user": {
      "description": "User who created maintenance",
      "type": "string"
     }
    }
   },
   "system.System": {
    "type": "object",
    "properties": {
     "HFMDusage": {
      "description": "Bandwidth usage by High Frequency Metric Data",
      "type": "integer",
      "format": "int64"
     },
     "admittedNodes": {
      "description": "IDs of the nodes that have been admitted",
      "type": "array",
      "items": {
       "type": "integer",
       "format": "uint64"
      }
     },
     "brandingInfo": {
      "type": "object",
      "properties": {
       "hwmodel": {
        "description": "Hardware model name for branding",
        "type": "string"
       },
       "hwproduct": {
        "description": "Hardware product name for branding",
        "type": "string"
       },
       "hwproductfull": {
        "description": "Hardware product full name for branding",
        "type": "string"
       },
       "osfull": {
        "description": "OS full name for branding",
        "type": "string"
       },
       "osname": {
        "description": "OS name for branding",
        "type": "string"
       },
       "product": {
        "description": "Product name for branding",
        "type": "string"
       },
       "productfull": {
        "description": "Product full name for branding",
        "type": "string"
       },
       "productnospace": {
        "description": "Product name with no spaces for branding",
        "type": "string"
       },
       "softproduct": {
        "description": "Software product name for branding",
        "type": "string"
       },
       "softproductfull": {
        "description": "Software product full name for branding",
        "type": "string"
       },
       "uiname": {
        "description": "UI name for branding",
        "type": "string"
       },
       "uinamefull": {
        "description": "UI full name for branding",
        "type": "string"
       },
       "vendor": {
        "description": "Vendor for branding",
        "type": "string"
       }
      },
      "description": "Branding information for the device",
      "descriptionKey": "SCHEMA_SYSTEM_BRANDINGINFO",
      "title": "tclserver.BrandingInfo"
     },
     "chunkletSizeMiB": {
      "description": "Size of chunklet in MiB",
      "type": "integer",
      "format": "uint64"
     },
     "descriptors": {
      "type": "object",
      "properties": {
       "comment": {
        "description": "User-specified comment for the system",
        "type": "string"
       },
       "contact": {
        "description": "User-specified contact for the system",
        "type": "string"
       },
       "location": {
        "description": "User-specified location of the system",
        "type": "string"
       },
       "owner": {
        "description": "User-specified owner for the system",
        "type": "string"
       }
      },
      "description": "System descriptors",
      "descriptionKey": "SCHEMA_SYSTEM_DESCRIPTORS",
      "title": "*system.Descriptors"
     },
     "displayname": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Name to be used for display purposes",
      "descriptionKey": "SCHEMA_DISPLAYNAME",
      "title": "*utils.I18nValue"
     },
     "domain": {
      "description": "Domain that the resource belongs to",
      "type": "string"
     },
     "fqdn": {
      "description": "Fully qualified domain name of the system",
      "type": "string"
     },
     "id": {
      "description": "Numeric ID of the resource",
      "type": "integer",
      "format": "uint64"
     },
     "inClusterNodes": {
      "description": "IDs of the nodes that are in cluster",
      "type": "array",
      "items": {
       "type": "integer",
       "format": "uint64"
      }
     },
     "isInitialized": {
      "description": "APIDOC_TBD",
      "type": "boolean"
     },
     "licenses": {
      "type": "object",
      "properties": {
       "consolidatedFeatures": {
        "description": "The list of features consolidated for display in the UI",
        "type": "array",
        "items": {
         "type": "object",
         "properties": {
          "data": {
           "description": "Additional data for the license",
           "type": "string"
          },
          "expiration": {
           "type": "object",
           "properties": {
            "ms": {
             "description": "Epoch time in milliseconds",
             "type": "integer",
             "format": "int64"
            },
            "tz": {
             "description": "Time zone name",
             "type": "string"
            }
           },
           "description": "The expiration date of the licensed feature",
           "descriptionKey": "SCHEMA_LICENSES_EXPIRATION",
           "title": "*shared.Calendar"
          },
          "id": {
           "description": "The Id of the license",
           "type": "integer",
           "format": "int64"
          },
          "name": {
           "description": "The name of the licensed feature",
           "type": "string"
          },
          "sizeOrCount": {
           "description": "The size (capacity) or the count of objects allowed by the feature",
           "type": "string"
          }
         },
         "title": "system.LicenseFeature"
        }
       },
       "deprecatedFeatures": {
        "description": "The list of features that have been deprecated",
        "type": "array",
        "items": {
         "type": "object",
         "properties": {
          "data": {
           "description": "Additional data for the license",
           "type": "string"
          },
          "expiration": {
           "type": "object",
           "properties": {
            "ms": {
             "description": "Epoch time in milliseconds",
             "type": "integer",
             "format": "int64"
            },
            "tz": {
             "description": "Time zone name",
             "type": "string"
            }
           },
           "description": "The expiration date of the licensed feature",
           "descriptionKey": "SCHEMA_LICENSES_EXPIRATION",
           "title": "*shared.Calendar"
          },
          "id": {
           "description": "The Id of the license",
           "type": "integer",
           "format": "int64"
          },
          "name": {
           "description": "The name of the licensed feature",
           "type": "string"
          },
          "sizeOrCount": {
           "description": "The size (capacity) or the count of objects allowed by the feature",
           "type": "string"
          }
         },
         "title": "system.LicenseFeature"
        }
       },
       "features": {
        "type": "object",
        "properties": {
         "data": {
          "description": "Additional data for the license",
          "type": "string"
         },
         "expiration": {
          "type": "object",
          "properties": {
           "ms": {
            "description": "Epoch time in milliseconds",
            "type": "integer",
            "format": "int64"
           },
           "tz": {
            "description": "Time zone name",
            "type": "string"
           }
          },
          "description": "The expiration date of the licensed feature",
          "descriptionKey": "SCHEMA_LICENSES_EXPIRATION",
          "title": "*shared.Calendar"
         },
         "id": {
          "description": "The Id of the license",
          "type": "integer",
          "format": "int64"
         },
         "name": {
          "description": "The name of the licensed feature",
          "type": "string"
         },
         "sizeOrCount": {
          "description": "The size (capacity) or the count of objects allowed by the feature",
          "type": "string"
         }
        },
        "description": "The raw list of individual licensed features",
        "descriptionKey": "SCHEMA_LICENSES_FEATURES",
        "title": "map[string][]system.LicenseFeature"
       },
       "issueDate": {
        "type": "object",
        "properties": {
         "ms": {
          "description": "Epoch time in milliseconds",
          "type": "integer",
          "format": "int64"
         },
         "tz": {
          "description": "Time zone name",
          "type": "string"
         }
        },
        "description": "The date the system license was issued",
        "descriptionKey": "SCHEMA_LICENSES_ISSUEDATE",
        "title": "*shared.Calendar"
       },
       "sortedFeatures": {
        "description": "The raw list of features sorted by name",
        "type": "array",
        "items": {
         "type": "object",
         "properties": {
          "data": {
           "description": "Additional data for the license",
           "type": "string"
          },
          "expiration": {
           "type": "object",
           "properties": {
            "ms": {
             "description": "Epoch time in milliseconds",
             "type": "integer",
             "format": "int64"
            },
            "tz": {
             "description": "Time zone name",
             "type": "string"
            }
           },
           "description": "The expiration date of the licensed feature",
           "descriptionKey": "SCHEMA_LICENSES_EXPIRATION",
           "title": "*shared.Calendar"
          },
          "id": {
           "description": "The Id of the license",
           "type": "integer",
           "format": "int64"
          },
          "name": {
           "description": "The name of the licensed feature",
           "type": "string"
          },
          "sizeOrCount": {
           "description": "The size (capacity) or the count of objects allowed by the feature",
           "type": "string"
          }
         },
         "title": "system.LicenseFeature"
        }
       },
       "version": {
        "description": "The version number of the system licenses",
        "type": "integer",
        "format": "int32"
       }
      },
      "description": "System licenses",
      "descriptionKey": "SCHEMA_SYSTEM_LICENSES",
      "title": "Licenses"
     },
     "maintenanceMode": {
      "description": "Maintenance mode details of the system",
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "comment": {
         "description": "Maintenance description",
         "type": "string"
        },
        "endTime": {
         "type": "object",
         "properties": {
          "ms": {
           "description": "Epoch time in milliseconds",
           "type": "integer",
           "format": "int64"
          },
          "tz": {
           "description": "Time zone name",
           "type": "string"
          }
         },
         "description": "Maintenance end time",
         "descriptionKey": "SCHEMA_MAINTENANCEMODEDETAILS_ENDTIME",
         "title": "*shared.Calendar"
        },
        "instances": {
         "description": "Maintenance instance",
         "type": "integer",
         "format": "uint64"
        },
        "reasonCode": {
         "type": "object",
         "properties": {
          "args": {
           "description": "Array of optional parameters to be used when formatting the text",
           "type": "array",
           "items": {
            "type": "AnyType"
           }
          },
          "default": {
           "description": "Text in the default language",
           "type": "string"
          },
          "key": {
           "description": "Key of the message in the i18n catalog",
           "type": "string"
          }
         },
         "description": "Maintenance type",
         "descriptionKey": "SCHEMA_MAINTENANCEMODEDETAILS_REASONCODE",
         "title": "*utils.I18nValue"
        },
        "startTime": {
         "type": "object",
         "properties": {
          "ms": {
           "description": "Epoch time in milliseconds",
           "type": "integer",
           "format": "int64"
          },
          "tz": {
           "description": "Time zone name",
           "type": "string"
          }
         },
         "description": "Maintenance start time",
         "descriptionKey": "SCHEMA_MAINTENANCEMODEDETAILS_STARTTIME",
         "title": "*shared.Calendar"
        },
        "user": {
         "description": "User who created maintenance",
         "type": "string"
        }
       },
       "title": "system.MaintenanceModeDetails"
      }
     },
     "manufacturing": {
      "type": "object",
      "properties": {
       "assemblyRev": {
        "description": "Assembly revision",
        "type": "string"
       },
       "checkSum": {
        "description": "Checksum",
        "type": "string"
       },
       "hpeModelName": {
        "description": "{vendor} model name",
        "type": "string"
       },
       "manufacturer": {
        "description": "Manufacturer name",
        "type": "string"
       },
       "model": {
        "description": "Model name",
        "type": "string"
       },
       "saleablePartNumber": {
        "description": "Saleable part number",
        "type": "string"
       },
       "saleableSerialNumber": {
        "description": "Saleable serial number",
        "type": "string"
       },
       "serialNumber": {
        "description": "Serial number",
        "type": "string"
       },
       "sparePartNumber": {
        "description": "Spare part number",
        "type": "string"
       }
      },
      "description": "Manufacturing information",
      "descriptionKey": "SCHEMA_MFG",
      "title": "*shared.ManufacturingData"
     },
     "masterNode": {
      "description": "ID of the master node",
      "type": "integer",
      "format": "uint64"
     },
     "minimumPasswordClasses": {
      "description": "Determines minimum password complexity",
      "type": "integer",
      "format": "int64"
     },
     "minimumPasswordLength": {
      "description": "Minimum length of password for users",
      "type": "integer",
      "format": "int64"
     },
     "name": {
      "description": "Name of the resource",
      "type": "string"
     },
     "networkMasterNode": {
      "description": "The Node ID of the current network master",
      "type": "integer",
      "format": "uint8"
     },
     "nodeMemory": {
      "description": "Node memory size",
      "type": "string"
     },
     "nodesCount": {
      "description": "Number of nodes in the system",
      "type": "integer",
      "format": "uint16"
     },
     "nodesPresent": {
      "description": "IDs of the nodes that are present",
      "type": "array",
      "items": {
       "type": "integer",
       "format": "uint64"
      }
     },
     "onlineNodes": {
      "description": "IDs of the nodes that are online",
      "type": "array",
      "items": {
       "type": "integer",
       "format": "uint64"
      }
     },
     "parameters": {
      "type": "object",
      "properties": {
       "PersonaProfile": {
        "description": "If set to 'block-preferred' File persona is supported. The default is 'block-only'",
        "type": "string"
       },
       "ServiceProcessorCookie": {
        "description": "Service processor cookie",
        "type": "string"
       },
       "allowDomainUsersAffectNoDomain": {
        "description": "Unused",
        "type": "boolean"
       },
       "allowSSZ": {
        "description": "Enables or disables support for using the -ssz option during CPG creation",
        "type": "boolean"
       },
       "autoAdmitTune": {
        "description": "Enables or disables automatic rebalancing when admithw detects new disks. Only applies to 2-node systems",
        "type": "boolean"
       },
       "autoExportAfterReboot": {
        "description": "Enables or disables automatically exporting vluns after a reboot.  If disabled, vluns and host ports will not become active after a reboot until \"setsysmgr export_vluns\" is issued.",
        "type": "boolean"
       },
       "cablingConfig": {
        "description": "The current cabling configuration",
        "title": "system.CablingConfigEnum",
        "enum": [
         "resh.BaseResource",
         "Name",
         "Id",
         "State",
         "Manufacturing",
         "LocateEnabled",
         "SafeToRemove",
         "Type",
         "Parameters",
         "Version",
         "Descriptors",
         "SoftwareVersions",
         "NodesCount",
         "MasterNode",
         "NetworkMasterNode",
         "OnlineNodes",
         "InClusterNodes",
         "NodesPresent",
         "AdmittedNodes",
         "ClusterLED",
         "MaintenanceModeDetails",
         "Date",
         "Uptime",
         "TimeZone",
         "ChunkletSize",
         "NodeMemory",
         "MinimumPasswordLength",
         "MinimumPasswordClasses",
         "Subscribed",
         "FQDN",
         "IsInitialized",
         "RemoteSyslogProfiles",
         "Licenses",
         "RawLicense",
         "BrandingInfo",
         "SystemPN",
         "HFMDusage",
         "}",
         "Location",
         "Contact",
         "Comment",
         "Owner",
         "}",
         "Name",
         "Description",
         "}",
         "SsdRawSpaceAlert",
         "QlcRawSpaceAlert",
         "MaxVolumeRetention",
         "ServiceProcessorCookie",
         "RemoteSyslog",
         "RemoteSyslogProfile",
         "RemoteSyslogHost",
         "RemoteSyslogSecurityHost",
         "OverprovRatioLimit",
         "OverprovRatioWarning",
         "EventLogSize",
         "EventLogNum",
         "AutoExportAfterReboot",
         "ThermalShutdown",
         "SessionTimeout",
         "DisableChunkletInitUNMAP",
         "PersonaProfile",
         "ComplianceOfficerApproval",
         "AllowSSZ",
         "RemoteCopyHostThrottling",
         "AutoAdmitTune",
         "SingleLunHost",
         "R6LayoutVersion",
         "AllowDomainUsersAffectNoDomain",
         "EnableAIQoS",
         "DSCCReadOnly",
         "RwareRetentionTime",
         "RwareConfidence",
         "CablingConfig",
         "}",
         "Performance",
         "Capacity"
        ],
        "type": "string"
       },
       "complianceOfficerApproval": {
        "description": "Specifies whether to enable or disable the compliance officer approval mode.",
        "type": "boolean"
       },
       "disableChunkletInitUNMAP": {
        "description": "Disable checking init",
        "type": "boolean"
       },
       "dsccReadOnly": {
        "description": "Enable/disable Read/Only mode for Data Services Cloud Console",
        "type": "string"
       },
       "enableAIQoS": {
        "description": "Enable or disable AI QoS",
        "title": "yesno.Enum",
        "enum": [
         "yes",
         "no"
        ],
        "type": "string"
       },
       "eventLogNum": {
        "description": "The number of event log files",
        "type": "integer",
        "format": "int64"
       },
       "eventLogSize": {
        "description": "The size of the event log file",
        "type": "string"
       },
       "maxVolumeRetention": {
        "description": "Maximum global volume retention policy in seconds",
        "type": "integer",
        "format": "uint64"
       },
       "overprovRatioLimit": {
        "description": "Over provisioning ratio limit setting",
        "type": "number",
        "format": "float64"
       },
       "overprovRatioWarning": {
        "description": "Over provisioning ratio warning setting",
        "type": "number",
        "format": "float64"
       },
       "qlcRawSpaceAlert": {
        "description": "QLC raw space alert setting in MiB",
        "type": "integer",
        "format": "uint64"
       },
       "r6LayoutVersion": {
        "description": "RAID6 implementation version in use",
        "type": "string"
       },
       "remoteCopyHostThrottling": {
        "description": "Enables or disables Remote Copy throttling policy for host IO replicated in asynchronous streaming mode",
        "type": "boolean"
       },
       "remoteSysLog": {
        "description": "Remote Syslog Enabled/Disabled",
        "type": "integer",
        "format": "int64"
       },
       "remoteSysLogHost": {
        "description": "Host details for Remote Syslog",
        "type": "string"
       },
       "remoteSysLogProfile": {
        "description": "Selected Remote Syslog Profile",
        "type": "string"
       },
       "remoteSysLogSecurityHost": {
        "description": "Security Host details for Remote Syslog",
        "type": "string"
       },
       "rwareConfidence": {
        "description": "Ransomware detection confidence level",
        "type": "string"
       },
       "rwareRetentionTime": {
        "description": "Number of seconds a ransomware alert snapshot is retained",
        "type": "string"
       },
       "sessionTimeout": {
        "description": "Idle session timeout for a CLI session",
        "type": "integer",
        "format": "uint64"
       },
       "singleLunHost": {
        "description": "Enables or disables support to limit volume exports such that each volume can only be exported to a given host one time",
        "type": "boolean"
       },
       "ssdRawSpaceAlert": {
        "description": "SSD raw space alert setting in MiB",
        "type": "integer",
        "format": "uint64"
       },
       "thermalShutdown": {
        "description": "Enables or disables a system shutdown when the temperature gets too hot",
        "type": "boolean"
       }
      },
      "description": "System parameters",
      "descriptionKey": "SCHEMA_SYSTEM_PARAMETERS",
      "title": "*system.Parameters"
     },
     "rawLicense": {
      "description": "Raw system license text",
      "type": "string"
     },
     "safeToRemove": {
      "description": "Indicates if the component is safe to remove",
      "type": "boolean"
     },
     "softwareVersions": {
      "type": "object",
      "properties": {
       "baseVersion": {
        "description": "System base version",
        "type": "string"
       },
       "components": {
        "description": "Component versions",
        "type": "array",
        "items": {
         "type": "object",
         "properties": {
          "baseVersion": {
           "description": "Base version of the component",
           "type": "string"
          },
          "fullVersion": {
           "description": "Full version of the component",
           "type": "string"
          },
          "name": {
           "description": "Name of the component",
           "type": "string"
          },
          "release": {
           "description": "Release information of the component",
           "type": "string"
          },
          "showLevel": {
           "description": "Level information of the component",
           "type": "integer",
           "format": "int64"
          }
         },
         "title": "system.SoftwareComponent"
        }
       },
       "fullVersion": {
        "description": "Full version of the component",
        "type": "string"
       },
       "patches": {
        "description": "System updates",
        "type": "string"
       },
       "release": {
        "description": "System release details",
        "type": "string"
       },
       "releaseType": {
        "type": "object",
        "properties": {
         "args": {
          "description": "Array of optional parameters to be used when formatting the text",
          "type": "array",
          "items": {
           "type": "AnyType"
          }
         },
         "default": {
          "description": "Text in the default language",
          "type": "string"
         },
         "key": {
          "description": "Key of the message in the i18n catalog",
          "type": "string"
         }
        },
        "description": "System release type",
        "descriptionKey": "SCHEMA_SOFTWAREVERSION_RELEASETYPE",
        "title": "*utils.I18nValue"
       }
      },
      "description": "Software versions",
      "descriptionKey": "SCHEMA_SYSTEM_SOFTWAREVERSIONS",
      "title": "*system.SoftwareVersion"
     },
     "state": {
      "type": "object",
      "properties": {
       "detailed": {
        "description": "Array of the detailed states of the resource",
        "type": "array",
        "items": {
         "type": "object",
         "properties": {
          "args": {
           "description": "Array of optional parameters to be used when formatting the text",
           "type": "array",
           "items": {
            "type": "AnyType"
           }
          },
          "default": {
           "description": "Text in the default language",
           "type": "string"
          },
          "key": {
           "description": "Key of the message in the i18n catalog",
           "type": "string"
          }
         },
         "title": "utils.I18nValue"
        }
       },
       "overall": {
        "description": "Overall state of the resource",
        "title": "overallstate.Enum",
        "enum": [
         "STATE_UNKNOWN",
         "STATE_NORMAL",
         "STATE_WARNING",
         "STATE_DEGRADED",
         "STATE_FAILED",
         "STATE_NOT_APPLICABLE",
         "STATE_NEW"
        ],
        "type": "string"
       }
      },
      "description": "State of the resource",
      "descriptionKey": "SCHEMA_STATE",
      "title": "shared.ResourceState"
     },
     "subscribed": {
      "description": "DSCC subscribed flag",
      "type": "string"
     },
     "syslogProfiles": {
      "description": "Available Remote Syslog Profiles",
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "description": {
         "description": "Remote Syslog Profile Description",
         "type": "string"
        },
        "name": {
         "description": "Remote Syslog Profile Name",
         "type": "string"
        }
       },
       "title": "system.RemoteSyslogProfile"
      }
     },
     "systemDate": {
      "description": "Current date of the system",
      "type": "integer",
      "format": "uint64"
     },
     "systemPN": {
      "description": "System ProdNum",
      "type": "string"
     },
     "systemWWN": {
      "description": "WWN of the array",
      "type": "string"
     },
     "timezone": {
      "description": "Current timezone of the system",
      "type": "string"
     },
     "type": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "System type",
      "descriptionKey": "SCHEMA_SYSTEM_TYPE",
      "title": "*utils.I18nValue"
     },
     "uid": {
      "description": "Unique Identifier of the resource",
      "type": "string"
     },
     "uptime": {
      "type": "object",
      "properties": {
       "ms": {
        "description": "Epoch time in milliseconds",
        "type": "integer",
        "format": "int64"
       },
       "tz": {
        "description": "Time zone name",
        "type": "string"
       }
      },
      "description": "The time that the system has been up since",
      "descriptionKey": "SCHEMA_UPTIME",
      "title": "*shared.Calendar"
     },
     "uri": {
      "description": "URI of the resource",
      "type": "string"
     },
     "version": {
      "type": "object",
      "properties": {
       "base": {
        "description": "Representation of the version that only includes Major.Minor.Rev (Release)",
        "type": "string"
       },
       "display": {
        "description": "Representation of the version that should be used for display purposes",
        "type": "string"
       },
       "full": {
        "description": "Representation of the version that includes everything",
        "type": "string"
       },
       "fullWithoutPatches": {
        "description": "Representation of the version that includes everything except updates",
        "type": "string"
       }
      },
      "description": "System OS version",
      "descriptionKey": "SCHEMA_SYSTEM_VERSION",
      "title": "*shared.Version"
     }
    }
   },
   "tasks.Task": {
    "type": "object",
    "properties": {
     "application": {
      "description": "Indicates if this is an application task or system",
      "type": "boolean"
     },
     "completedPhases": {
      "description": "Number of completed phases",
      "type": "integer",
      "format": "uint64"
     },
     "completedSteps": {
      "description": "Number of completed steps",
      "type": "integer",
      "format": "uint64"
     },
     "createdUids": {
      "description": "Optionally a list of UIDS that this task created",
      "type": "array",
      "items": {
       "description": "",
       "type": "string"
      }
     },
     "detailsMap": {
      "type": "object",
      "properties": {
       "message": {
        "type": "object",
        "properties": {
         "args": {
          "description": "Array of optional parameters to be used when formatting the text",
          "type": "array",
          "items": {
           "type": "AnyType"
          }
         },
         "default": {
          "description": "Text in the default language",
          "type": "string"
         },
         "key": {
          "description": "Key of the message in the i18n catalog",
          "type": "string"
         }
        },
        "description": "Task message",
        "descriptionKey": "SCHEMA_TASKDETAIL_MESSAGE",
        "title": "*utils.I18nValue"
       },
       "time": {
        "type": "object",
        "properties": {
         "ms": {
          "description": "Epoch time in milliseconds",
          "type": "integer",
          "format": "int64"
         },
         "tz": {
          "description": "Time zone name",
          "type": "string"
         }
        },
        "description": "Time when the message has been added",
        "descriptionKey": "SCHEMA_TASKDETAIL_TIME",
        "title": "*shared.Calendar"
       }
      },
      "description": "List of detailed messages.  Always available for application tasks.  For system tasks, available through WebSocket when initiated through custom action or when accessing through individual resource GET API",
      "descriptionKey": "SCHEMA_TASK_DETAILS",
      "title": "map[string]*tasks.TaskDetail"
     },
     "displayname": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Name to be used for display purposes",
      "descriptionKey": "SCHEMA_DISPLAYNAME",
      "title": "*utils.I18nValue"
     },
     "domain": {
      "description": "Domain that the resource belongs to",
      "type": "string"
     },
     "duration": {
      "description": "Duration of task in seconds",
      "type": "integer",
      "format": "uint64"
     },
     "finishTime": {
      "type": "object",
      "properties": {
       "ms": {
        "description": "Epoch time in milliseconds",
        "type": "integer",
        "format": "int64"
       },
       "tz": {
        "description": "Time zone name",
        "type": "string"
       }
      },
      "description": "Time when the task has finished",
      "descriptionKey": "SCHEMA_TASK_FINISHTIME",
      "title": "*shared.Calendar"
     },
     "hidden": {
      "description": "Indicates if the task is hidden or not",
      "type": "boolean"
     },
     "id": {
      "description": "Numeric ID of the resource",
      "type": "integer",
      "format": "int64"
     },
     "name": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Name of the resource",
      "descriptionKey": "SCHEMA_NAME",
      "title": "*utils.I18nValue"
     },
     "opResult": {
      "description": "Variable object that contains results of the task. MUST be used only for operations that produce temporary data, not inventory data",
      "type": "AnyType"
     },
     "owner": {
      "description": "Name of the user that created the task",
      "type": "string"
     },
     "percentComplete": {
      "description": "Percentage of the task completed",
      "type": "number",
      "format": "float32"
     },
     "priority": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Task priority",
      "descriptionKey": "SCHEMA_TASK_PRIORITY",
      "title": "*utils.I18nValue"
     },
     "resourceUri": {
      "description": "URI of the resource that this task is operating on (applies to application tasks only)",
      "type": "string"
     },
     "startTime": {
      "type": "object",
      "properties": {
       "ms": {
        "description": "Epoch time in milliseconds",
        "type": "integer",
        "format": "int64"
       },
       "tz": {
        "description": "Time zone name",
        "type": "string"
       }
      },
      "description": "Time when the task has started",
      "descriptionKey": "SCHEMA_TASK_STARTTIME",
      "title": "*shared.Calendar"
     },
     "state": {
      "type": "object",
      "properties": {
       "detailed": {
        "description": "Array of the detailed states of the resource",
        "type": "array",
        "items": {
         "type": "object",
         "properties": {
          "args": {
           "description": "Array of optional parameters to be used when formatting the text",
           "type": "array",
           "items": {
            "type": "AnyType"
           }
          },
          "default": {
           "description": "Text in the default language",
           "type": "string"
          },
          "key": {
           "description": "Key of the message in the i18n catalog",
           "type": "string"
          }
         },
         "title": "utils.I18nValue"
        }
       },
       "overall": {
        "description": "Overall state of the resource",
        "title": "overallstate.Enum",
        "enum": [
         "STATE_UNKNOWN",
         "STATE_NORMAL",
         "STATE_WARNING",
         "STATE_DEGRADED",
         "STATE_FAILED",
         "STATE_NOT_APPLICABLE",
         "STATE_NEW"
        ],
        "type": "string"
       }
      },
      "description": "State of the resource",
      "descriptionKey": "SCHEMA_STATE",
      "title": "shared.ResourceState"
     },
     "status": {
      "description": "Status of the task",
      "title": "taskstatus.Enum",
      "enum": [
       "STATE_UNKNOWN",
       "STATE_RUNNING",
       "STATE_PAUSED",
       "STATE_CANCELED",
       "STATE_FAILED",
       "STATE_WARNING",
       "STATE_FINISHED"
      ],
      "type": "string"
     },
     "systemWWN": {
      "description": "WWN of the array",
      "type": "string"
     },
     "taskTags": {
      "description": "A list of tags used to filter tasks from resource updates",
      "type": "string"
     },
     "totalPhases": {
      "description": "Total number of phases",
      "type": "integer",
      "format": "uint64"
     },
     "totalSteps": {
      "description": "Total number of steps",
      "type": "integer",
      "format": "uint64"
     },
     "type": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Type of the task",
      "descriptionKey": "SCHEMA_TASK_TYPE",
      "title": "*utils.I18nValue"
     },
     "uid": {
      "description": "Unique Identifier of the resource",
      "type": "string"
     },
     "uri": {
      "description": "URI of the resource",
      "type": "string"
     }
    }
   },
   "tcl_monster.SentryJsonApiRequest": {
    "type": "object",
    "properties": {
     "id": {
      "description": "An unsigned integer that uniquely identifies the request",
      "type": "integer",
      "format": "uint32"
     },
     "jsonrpc": {
      "description": "The version of the authentication API",
      "type": "string"
     },
     "method": {
      "description": "A string that identifies the request being made",
      "type": "string"
     },
     "params": {
      "description": "Parameters for the request",
      "type": "AnyType"
     }
    }
   },
   "trustcerts.Certificate": {
    "type": "object",
    "properties": {
     "commonname": {
      "description": "The certificate's common name",
      "type": "string"
     },
     "detail": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "A descriptive status of the certificate",
      "descriptionKey": "SCHEMA_CERTIFICATE_DETAIL",
      "title": "*utils.I18nValue"
     },
     "displayname": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Name to be used for display purposes",
      "descriptionKey": "SCHEMA_DISPLAYNAME",
      "title": "*utils.I18nValue"
     },
     "domain": {
      "description": "Domain that the resource belongs to",
      "type": "string"
     },
     "enddate": {
      "type": "object",
      "properties": {
       "ms": {
        "description": "Epoch time in milliseconds",
        "type": "integer",
        "format": "int64"
       },
       "tz": {
        "description": "Time zone name",
        "type": "string"
       }
      },
      "description": "The certificate's end date",
      "descriptionKey": "SCHEMA_CERTIFICATE_ENDDATE",
      "title": "*shared.Calendar"
     },
     "fingerprint": {
      "description": "The certificate's  fingerprint",
      "type": "string"
     },
     "hash": {
      "description": "Unique identifier for the certificate",
      "type": "string"
     },
     "issuer": {
      "description": "Certificate issuer name",
      "type": "string"
     },
     "isvalid": {
      "description": "Flag indicating if certificate is valid",
      "type": "boolean"
     },
     "keyUsage": {
      "description": "Key usages assigned to the certificate",
      "type": "string"
     },
     "pem": {
      "description": "The certificate's PEM encoded string",
      "type": "string"
     },
     "serial": {
      "description": "The certificate's serial number",
      "type": "string"
     },
     "signaturetype": {
      "description": "The certificate's signature type",
      "type": "string"
     },
     "startdate": {
      "type": "object",
      "properties": {
       "ms": {
        "description": "Epoch time in milliseconds",
        "type": "integer",
        "format": "int64"
       },
       "tz": {
        "description": "Time zone name",
        "type": "string"
       }
      },
      "description": "The certificate's start date",
      "descriptionKey": "SCHEMA_CERTIFICATE_STARTDATE",
      "title": "*shared.Calendar"
     },
     "subject": {
      "description": "The certificate's subject name",
      "type": "string"
     },
     "subjectaltname": {
      "description": "The certificate's subject alternative name",
      "type": "array",
      "items": {
       "description": "",
       "type": "string"
      }
     },
     "systemWWN": {
      "description": "WWN of the array",
      "type": "string"
     },
     "taskTags": {
      "description": "A list of tags used to filter tasks from resource updates",
      "type": "string"
     },
     "type": {
      "description": "The certificate's type",
      "type": "string"
     },
     "uid": {
      "description": "Unique Identifier of the resource",
      "type": "string"
     },
     "uri": {
      "description": "URI of the resource",
      "type": "string"
     }
    }
   },
   "users.CheckPasswordRequest": {
    "type": "object",
    "properties": {
     "password": {
      "description": "Password for the user to check.  May be passed as either an array of single characters or as a single string",
      "type": "array",
      "items": {
       "description": "",
       "type": "string"
      }
     },
     "user": {
      "description": "Username for the user to check",
      "type": "string"
     }
    },
    "example": {
     "username": "alice",
     "password": "password"
    }
   },
   "users.CheckPasswordRequest2": {
    "type": "object",
    "properties": {
     "password": {
      "description": "Password for the user to check.  May be passed as either an array of single characters or as a single string",
      "type": "string"
     },
     "user": {
      "description": "Username for the user to check",
      "type": "string"
     }
    }
   },
   "users.CreateUserRequest": {
    "type": "object",
    "required": [
     "name",
     "domainPrivileges",
     "password"
    ],
    "properties": {
     "domainPrivileges": {
      "description": "A list domains and roles for user",
      "type": "array",
      "items": {
       "type": "object",
       "required": [
        "name",
        "priv"
       ],
       "properties": {
        "id": {
         "description": "ID of domain. Not applicable when creating a user",
         "type": "string"
        },
        "isDefault": {
         "description": "APIDOC_TBD",
         "type": "boolean"
        },
        "name": {
         "description": "Name of domain",
         "type": "string"
        },
        "priv": {
         "description": "The privilege assigned in the domain as a string. May be super, service, security_admin, edit, create, browse, or basic_edit",
         "type": "string"
        },
        "privInt": {
         "description": "The privilege assigned in the domain as an integer.  Not applicable when creating a user",
         "type": "integer",
         "format": "int32"
        }
       },
       "title": "users.DomainP"
      }
     },
     "name": {
      "description": "Name of user",
      "type": "string"
     },
     "password": {
      "description": "User password.  May be passed as either an array of single characters or as a single string",
      "type": "array",
      "items": {
       "description": "",
       "type": "string"
      }
     }
    },
    "example": {
     "name": "alice",
     "domainPrivileges": [
      {
       "name": "all",
       "priv": "edit"
      }
     ],
     "password": "mypassword"
    }
   },
   "users.CreateUserRequest2": {
    "type": "object",
    "properties": {
     "domainPrivileges": {
      "description": "A list domains and roles for user",
      "type": "array",
      "items": {
       "type": "object",
       "required": [
        "name",
        "priv"
       ],
       "properties": {
        "id": {
         "description": "ID of domain. Not applicable when creating a user",
         "type": "string"
        },
        "isDefault": {
         "description": "APIDOC_TBD",
         "type": "boolean"
        },
        "name": {
         "description": "Name of domain",
         "type": "string"
        },
        "priv": {
         "description": "The privilege assigned in the domain as a string. May be super, service, security_admin, edit, create, browse, or basic_edit",
         "type": "string"
        },
        "privInt": {
         "description": "The privilege assigned in the domain as an integer.  Not applicable when creating a user",
         "type": "integer",
         "format": "int32"
        }
       },
       "title": "users.DomainP"
      }
     },
     "name": {
      "description": "Name of user",
      "type": "string"
     },
     "password": {
      "description": "User password.  May be passed as either an array of single characters or as a single string",
      "type": "string"
     }
    }
   },
   "users.PatchUserRequest": {
    "type": "object",
    "properties": {
     "currentPassword": {
      "description": "User's current password",
      "type": "array",
      "items": {
       "description": "",
       "type": "string"
      }
     },
     "domainPrivileges": {
      "description": "A list domains and roles for user",
      "type": "array",
      "items": {
       "type": "object",
       "required": [
        "name",
        "priv"
       ],
       "properties": {
        "id": {
         "description": "ID of domain. Not applicable when creating a user",
         "type": "string"
        },
        "isDefault": {
         "description": "APIDOC_TBD",
         "type": "boolean"
        },
        "name": {
         "description": "Name of domain",
         "type": "string"
        },
        "priv": {
         "description": "The privilege assigned in the domain as a string. May be super, service, security_admin, edit, create, browse, or basic_edit",
         "type": "string"
        },
        "privInt": {
         "description": "The privilege assigned in the domain as an integer.  Not applicable when creating a user",
         "type": "integer",
         "format": "int32"
        }
       },
       "title": "users.DomainP"
      }
     },
     "newPassword": {
      "description": "User's new password",
      "type": "array",
      "items": {
       "description": "",
       "type": "string"
      }
     }
    },
    "example": {
     "currentPassword": "oldpassword",
     "newPassword": "newpassword"
    }
   },
   "users.PatchUserRequest2": {
    "type": "object",
    "properties": {
     "currentPassword": {
      "description": "User's current password",
      "type": "string"
     },
     "domainPrivileges": {
      "description": "A list domains and roles for user",
      "type": "array",
      "items": {
       "type": "object",
       "required": [
        "name",
        "priv"
       ],
       "properties": {
        "id": {
         "description": "ID of domain. Not applicable when creating a user",
         "type": "string"
        },
        "isDefault": {
         "description": "APIDOC_TBD",
         "type": "boolean"
        },
        "name": {
         "description": "Name of domain",
         "type": "string"
        },
        "priv": {
         "description": "The privilege assigned in the domain as a string. May be super, service, security_admin, edit, create, browse, or basic_edit",
         "type": "string"
        },
        "privInt": {
         "description": "The privilege assigned in the domain as an integer.  Not applicable when creating a user",
         "type": "integer",
         "format": "int32"
        }
       },
       "title": "users.DomainP"
      }
     },
     "newPassword": {
      "description": "User's new password",
      "type": "string"
     }
    }
   },
   "users.User": {
    "type": "object",
    "properties": {
     "accountStatus": {
      "type": "object",
      "properties": {
       "failedTries": {
        "description": "Total number of failed login attempts",
        "type": "integer",
        "format": "int64"
       },
       "isLocked": {
        "description": "If true, the account has been locked.  It can only be unlocked by a super user",
        "type": "boolean"
       },
       "lastLogin": {
        "type": "object",
        "properties": {
         "ms": {
          "description": "Epoch time in milliseconds",
          "type": "integer",
          "format": "int64"
         },
         "tz": {
          "description": "Time zone name",
          "type": "string"
         }
        },
        "description": "Time and date of last successful login",
        "descriptionKey": "SCHEMA_USER_LAST_LOGIN",
        "title": "*shared.Calendar"
       },
       "totalTries": {
        "description": "Number of successive failed login attempts",
        "type": "integer",
        "format": "int64"
       }
      },
      "description": "Contains information about the user account status",
      "descriptionKey": "SCHEMA_USER_ACCOUNT_STATUS",
      "title": "*users.AccountStatus"
     },
     "canBeDeleted": {
      "description": "If true, the user can be deleted",
      "type": "boolean"
     },
     "canPasswordBeEdited": {
      "description": "If true, the password can be changed",
      "type": "boolean"
     },
     "canRoleBeEdited": {
      "description": "If true, the  user's role can be changed",
      "type": "boolean"
     },
     "displayname": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Name to be used for display purposes",
      "descriptionKey": "SCHEMA_DISPLAYNAME",
      "title": "*utils.I18nValue"
     },
     "domain": {
      "description": "Domain that the resource belongs to",
      "type": "string"
     },
     "domainPrivileges": {
      "description": "A list of domain privileges for the user",
      "type": "array",
      "items": {
       "type": "object",
       "required": [
        "name",
        "priv"
       ],
       "properties": {
        "id": {
         "description": "ID of domain. Not applicable when creating a user",
         "type": "string"
        },
        "isDefault": {
         "description": "APIDOC_TBD",
         "type": "boolean"
        },
        "name": {
         "description": "Name of domain",
         "type": "string"
        },
        "priv": {
         "description": "The privilege assigned in the domain as a string. May be super, service, security_admin, edit, create, browse, or basic_edit",
         "type": "string"
        },
        "privInt": {
         "description": "The privilege assigned in the domain as an integer.  Not applicable when creating a user",
         "type": "integer",
         "format": "int32"
        }
       },
       "title": "users.DomainP"
      }
     },
     "isInternal": {
      "description": "If true, then the user is meant for internal use and it cannot be changed",
      "type": "boolean"
     },
     "name": {
      "description": "Name of the user",
      "type": "string"
     },
     "systemWWN": {
      "description": "WWN of the array",
      "type": "string"
     },
     "taskTags": {
      "description": "A list of tags used to filter tasks from resource updates",
      "type": "string"
     },
     "uid": {
      "description": "Unique Identifier of the resource",
      "type": "string"
     },
     "uri": {
      "description": "URI of the resource",
      "type": "string"
     }
    }
   },
   "vasa.AddOrRemoveInstance": {
    "type": "object",
    "required": [
     "nodeId",
     "action"
    ],
    "properties": {
     "IPAddr": {
      "description": "Vasa IP address",
      "type": "string"
     },
     "action": {
      "description": "Vasa ADD/REMOVE action",
      "type": "string"
     },
     "clearNodeVPAddress": {
      "description": "Clear VP Address from node(s)",
      "type": "boolean"
     },
     "nodeId": {
      "description": "Vasa node ID",
      "type": "integer",
      "format": "int"
     }
    }
   },
   "vasa.UpdateVasa": {
    "type": "object",
    "properties": {
     "addOrRemoveVasaInstance": {
      "description": "Schema Add or Remove Vasa instance.",
      "type": "array",
      "items": {
       "type": "object",
       "required": [
        "nodeId",
        "action"
       ],
       "properties": {
        "IPAddr": {
         "description": "Vasa IP address",
         "type": "string"
        },
        "action": {
         "description": "Vasa ADD/REMOVE action",
         "type": "string"
        },
        "clearNodeVPAddress": {
         "description": "Clear VP Address from node(s)",
         "type": "boolean"
        },
        "nodeId": {
         "description": "Vasa node ID",
         "type": "integer",
         "format": "int"
        }
       },
       "title": "vasa.AddOrRemoveInstance"
      }
     },
     "certMgmt": {
      "description": "Specifies if the VASA provider should allow management of its SSL certificate by the vSphere infrastructure, or be locally managed on the array",
      "title": "certmgmt.Enum",
      "enum": [
       "multi_vc",
       "server",
       "locked_client",
       "invalid"
      ],
      "type": "string"
     },
     "cfgList": {
      "description": "A list of key/value pairs describing the configuration of the VASA service",
      "type": "array",
      "items": {
       "type": "object",
       "properties": {
        "key": {
         "description": "Name of a VASA service configuration entry",
         "type": "string"
        },
        "value": {
         "description": "Value of a VASA service configuration entry",
         "type": "string"
        }
       },
       "title": "vasa.VASACfg"
      }
     },
     "vasaStateEnabled": {
      "description": "Indicates if the service status is enabled or not",
      "type": "boolean"
     }
    }
   },
   "vlun.Bulk_delete_volume": {
    "type": "BULK_DELETE",
    "fullType": "httputils.BulkDeleteResource",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: BULK_DELETE",
      "type": "string"
     },
     "parameters": {
      "type": "object",
      "properties": {
       "uids": {
        "description": "UIDs for bulk action",
        "type": "array",
        "items": {
         "description": "",
         "type": "string"
        }
       }
      },
      "description": "Parameters for a custom action",
      "descriptionKey": "SCHEMA_CUSTOM_ACTION_PROPS"
     }
    },
    "description": "Delete a number of VLUNs at once",
    "descriptionKey": "BULK_DELETE_VLUN_DESCRIPTION",
    "title": "BULK_DELETE",
    "example": {
     "action": "BULK_DELETE",
     "parameters": {
      "uids": [
       "aaaa05369c9d645069d9779e7f4fc4eb",
       "aaaa5109924695aacad04eff4cd0aeae"
      ]
     }
    }
   },
   "vlun.CreateVlun": {
    "type": "object",
    "required": [
     "volumeName",
     "hostName"
    ],
    "properties": {
     "autoLun": {
      "description": "Auto-generate LUN id,  If autoLun is false, then LUN number will be chosen starting at the value of lun.  If that  LUN is taken, the operation will fail.  If autoLun is true, then the system will choose LUN numbers starting at lun.  If autoLun is true and  lun is 0, then the LUN numbers will be chosen fully automatically.",
      "type": "boolean"
     },
     "hostName": {
      "description": "Name of the host or host set to export to.  For host set, use set:\u003chostset_name\u003e format",
      "type": "string"
     },
     "lun": {
      "description": "LUN id to export as. See autoLun field",
      "type": "integer",
      "format": "int64"
     },
     "maxAutoLun": {
      "description": "If autoLun is true, the lun number should be in the range of lun and maxAutoLun",
      "type": "integer",
      "format": "int64",
      "default": "0"
     },
     "noVcn": {
      "description": "Indicates that VCN is not to be issued after export",
      "type": "boolean"
     },
     "overrideLowerPriority": {
      "description": "Indicated that the existing lower priority VLUNs will be overridden. Use only if hostname member exists",
      "type": "boolean"
     },
     "portPos": {
      "description": "System port to export VLUN to. Format: N:S:P",
      "type": "string"
     },
     "volumeName": {
      "description": "Name of the volume or volume set to export.  For volume set, use set:\u003cvvset_name\u003e format.",
      "type": "string"
     }
    },
    "example": {
     "volumeName": "set:examplevvset",
     "lun": 10,
     "hostName": "set:examplehostset"
    }
   },
   "vlun.Vlun": {
    "type": "object",
    "properties": {
     "active": {
      "description": "Indicates if this is an active VLUN or a template",
      "type": "boolean"
     },
     "deviceWWNs": {
      "description": "Device WWNs",
      "type": "string"
     },
     "diskPartition": {
      "description": "Disk partition of host",
      "type": "string"
     },
     "displayname": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Name to be used for display purposes",
      "descriptionKey": "SCHEMA_DISPLAYNAME",
      "title": "*utils.I18nValue"
     },
     "domain": {
      "description": "Domain that the resource belongs to",
      "type": "string"
     },
     "failedPathInterval": {
      "description": "Monitoring interval in seconds after which the host checks for failed paths",
      "type": "integer",
      "format": "int32"
     },
     "failedPathPolicy": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Failed path monitoring method",
      "descriptionKey": "SCHEMA_VLUN_FAILED_PATH_POLICY",
      "title": "*utils.I18nValue"
     },
     "hostDeviceName": {
      "description": "The device name for this VLUN on the host",
      "type": "string"
     },
     "hostName": {
      "description": "Host or host set name the VLUN is exported to",
      "type": "string"
     },
     "lun": {
      "description": "Exported LUN ID",
      "type": "integer",
      "format": "int64"
     },
     "mountPoint": {
      "description": "Mount points of devices",
      "type": "string"
     },
     "mountPointFsau": {
      "description": "File system allocation unit in MiB",
      "type": "integer",
      "format": "int64"
     },
     "multiPathType": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Multi-path method in use",
      "descriptionKey": "SCHEMA_VLUN_MPATH_TYPE",
      "title": "*utils.I18nValue"
     },
     "portPos": {
      "type": "object",
      "properties": {
       "node": {
        "description": "Port position node number",
        "type": "integer",
        "format": "int64"
       },
       "port": {
        "description": "Port position port number",
        "type": "integer",
        "format": "int64"
       },
       "slot": {
        "description": "Port position slot number",
        "type": "integer",
        "format": "int64"
       }
      },
      "description": "System port VLUN is exported through. It includes node number, slot number, and port number",
      "descriptionKey": "SCHEMA_VLUN_POSITION",
      "title": "*shared.PortPosition"
     },
     "portType": {
      "description": "Port type",
      "title": "portType.Enum",
      "enum": [
       "iscsi",
       "fc",
       "sas",
       "nvme",
       "nvmefc",
       "nvmetcp",
       "unknown"
      ],
      "type": "string"
     },
     "rawVolume": {
      "description": "Volume that has not been formatted. Yes if it supports",
      "type": "string"
     },
     "remoteName": {
      "description": "Host WWN, iSCSI name, or SAS address; depending on port type",
      "type": "string"
     },
     "state": {
      "type": "object",
      "properties": {
       "detailed": {
        "description": "Array of the detailed states of the resource",
        "type": "array",
        "items": {
         "type": "object",
         "properties": {
          "args": {
           "description": "Array of optional parameters to be used when formatting the text",
           "type": "array",
           "items": {
            "type": "AnyType"
           }
          },
          "default": {
           "description": "Text in the default language",
           "type": "string"
          },
          "key": {
           "description": "Key of the message in the i18n catalog",
           "type": "string"
          }
         },
         "title": "utils.I18nValue"
        }
       },
       "overall": {
        "description": "Overall state of the resource",
        "title": "overallstate.Enum",
        "enum": [
         "STATE_UNKNOWN",
         "STATE_NORMAL",
         "STATE_WARNING",
         "STATE_DEGRADED",
         "STATE_FAILED",
         "STATE_NOT_APPLICABLE",
         "STATE_NEW"
        ],
        "type": "string"
       }
      },
      "description": "State of the resource",
      "descriptionKey": "SCHEMA_STATE",
      "title": "shared.ResourceState"
     },
     "status": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Status of the target port for the VLUN",
      "descriptionKey": "SCHEMA_VLUN_ALUA_STATUS",
      "title": "*utils.I18nValue"
     },
     "systemWWN": {
      "description": "WWN of the array",
      "type": "string"
     },
     "targetNQN": {
      "description": "Target NQN info for NVMe VLUNs",
      "type": "string"
     },
     "taskTags": {
      "description": "A list of tags used to filter tasks from resource updates",
      "type": "string"
     },
     "tpgId": {
      "description": "Target port group ID for the VLUN",
      "type": "integer",
      "format": "int64"
     },
     "type": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "VLUN type",
      "descriptionKey": "SCHEMA_VLUN_TYPE",
      "title": "*utils.I18nValue"
     },
     "uid": {
      "description": "Unique Identifier of the resource",
      "type": "string"
     },
     "uri": {
      "description": "URI of the resource",
      "type": "string"
     },
     "usedSpace": {
      "description": "Host devices used space in MiB",
      "type": "integer",
      "format": "int64"
     },
     "vlunType": {
      "description": "VLUN type",
      "title": "vluntype.Enum",
      "enum": [
       "VLUN_TYPE_EMPTY",
       "VLUN_TYPE_PORT",
       "VLUN_TYPE_HOST",
       "VLUN_TYPE_MATCHED_SET",
       "VLUN_TYPE_HOST_SET",
       "VLUN_TYPE_UNKNOWN"
      ],
      "type": "string"
     },
     "volumeGroup": {
      "description": "Volume group info",
      "type": "string"
     },
     "volumeManager": {
      "description": "Volume Manager tool used",
      "type": "string"
     },
     "volumeName": {
      "description": "Name of exported virtual volume or volume set name",
      "type": "string"
     },
     "volumeWWN": {
      "description": "WWN of exported volume.\u003cbr\u003eIf a volume set is exported, then this value is null.",
      "type": "string"
     },
     "vshortname": {
      "description": "Short name of the VLUN",
      "type": "string"
     },
     "vvReservedUserSpace": {
      "description": "Volume user reserved space in MiB",
      "type": "integer",
      "format": "int64"
     },
     "vvSize": {
      "description": "Size of volume in MiB",
      "type": "integer",
      "format": "int64"
     }
    }
   },
   "volume.Bulk_delete_volume": {
    "type": "BULK_DELETE",
    "fullType": "volume.VolumeBulkDelete",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: BULK_DELETE",
      "type": "string"
     },
     "parameters": {
      "type": "object",
      "properties": {
       "cascade": {
        "description": "Cascade bool value for custom bulk delete action.  Any snapshots and clones of the volumes will be deleted before deleting the volume",
        "type": "boolean"
       },
       "uids": {
        "description": "UIDs for bulk action",
        "type": "array",
        "items": {
         "description": "",
         "type": "string"
        }
       },
       "unexport": {
        "description": "Unexport bool value for custom bulk delete action.  Any existing exports for the volumes will be removed before deleting the volume",
        "type": "boolean"
       }
      },
      "description": "Parameters for a custom action",
      "descriptionKey": "SCHEMA_CUSTOM_ACTION_PROPS"
     }
    },
    "description": "Used to delete multiple volumes in one call",
    "descriptionKey": "BULK_DELETE_VOLUME_DESCRIPTION",
    "title": "BULK_DELETE",
    "example": {
     "action": "BULK_DELETE",
     "parameters": {
      "uids": [
       "ffff05369c9d645069d9779e7f4fc4eb",
       "aaaa5109924695aacad04eff4cd0aeae"
      ],
      "unexport": true,
      "cascade": true
     }
    }
   },
   "volume.Copy_Volume": {
    "type": "CREATE_VVCOPY",
    "fullType": "vvcpy.CreateVvcopy",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: CREATE_VVCOPY",
      "type": "string"
     },
     "parameters": {
      "type": "object",
      "required": [
       "destination"
      ],
      "properties": {
       "addToSet": {
        "description": "Adds the volume copies to the specified volume set. The set will be created if it does not exist and will inherit attributes from the parent set unless specifically overridden. Can only be used with online option",
        "type": "string"
       },
       "appSetBusinessUnit": {
        "description": "Business unit for an application that is using this set",
        "type": "string"
       },
       "appSetComments": {
        "description": "Free-form comments about virtual volume set",
        "type": "string"
       },
       "appSetExcludeAIQoS": {
        "description": "Indicates if to exclude the virtual volume set from aiqos or not.",
        "title": "excludeaiqos.Enum",
        "enum": [
         "yes",
         "no"
        ],
        "type": "string"
       },
       "appSetImportance": {
        "description": "Virtual volume set importance",
        "type": "string"
       },
       "appSetType": {
        "description": "Type of the application using this set",
        "type": "string"
       },
       "bulkvv": {
        "description": "Make the new created target volume VMware specific",
        "type": "boolean"
       },
       "destination": {
        "description": "Specifies the destination volume name or volume set name for the copy operation. The volume set name must start with 'set:'",
        "type": "string"
       },
       "destinationCpg": {
        "description": "Specifies the destination CPG to use for the destination volume. Mandatory if online option is specified",
        "type": "string"
       },
       "enableResync": {
        "description": "Specifies that the destination volume be re-synchronized with its parent volume using a saved snapshot so that only the changes need to be copied",
        "type": "boolean"
       },
       "expireSecs": {
        "description": "Expiration value specified for volume snapshot",
        "type": "integer",
        "format": "uint64"
       },
       "online": {
        "description": "With this option the destination can be immediately exported and is automatically created. This option requires the destinationCpg parameter",
        "type": "boolean"
       },
       "priority": {
        "description": "Specifies the priority of the copy operation when it is started",
        "title": "prioritytype.Enum",
        "enum": [
         "PRIORITYTYPE_HIGH",
         "PRIORITYTYPE_MED",
         "PRIORITYTYPE_LOW"
        ],
        "type": "string"
       },
       "reduce": {
        "description": "Indicates that the volume the online copy creates should be a volume using both the dedup and compression technologies. Without this option a thinly provisioned volume is created",
        "type": "boolean"
       },
       "retainSecs": {
        "description": "Retention value specified for volume snapshot",
        "type": "integer",
        "format": "uint64"
       },
       "selectionType": {
        "description": "Specifies how volumes are selected from destination virtual volume set. This is applicable only for non-online virtual volume set clones where destination is a set.",
        "title": "selectiontype.Enum",
        "enum": [
         "PARENTVV_INDEX",
         "PARENTVV_PREFIX"
        ],
        "type": "string"
       },
       "skipZero": {
        "description": "When copying from a thin provisioned source, only copy allocated portions of the source volume",
        "type": "boolean"
       }
      },
      "description": "Parameters for a custom action",
      "descriptionKey": "SCHEMA_CUSTOM_ACTION_PROPS"
     }
    },
    "description": "Creates a physical copy of a volume.",
    "descriptionKey": "VOLUME_COPY_DESCRIPTION",
    "title": "CREATE_VVCOPY"
   },
   "volume.CreateSnapshot": {
    "type": "object",
    "properties": {
     "comment": {
      "description": "Free-form comments about volume snapshot",
      "type": "string"
     },
     "customName": {
      "description": "User specified name for the snapshot",
      "type": "string"
     },
     "expireSecs": {
      "description": "Expiration value specified for volume snapshot",
      "type": "integer",
      "format": "uint64"
     },
     "id": {
      "description": "ID of the snapshot to be created",
      "type": "integer",
      "format": "uint64"
     },
     "namePattern": {
      "description": "Pattern that will be used to generate the name of snapshot",
      "title": "snapshotnamepattern.Enum",
      "enum": [
       "PARENT_TIMESTAMP",
       "PARENT_SEC_SINCE_EPOCH",
       "CUSTOM"
      ],
      "type": "string"
     },
     "readOnly": {
      "description": "If true snapshot mode is read only else read/write",
      "type": "boolean"
     },
     "retainSecs": {
      "description": "Retention value specified for volume snapshot",
      "type": "integer",
      "format": "uint64"
     }
    }
   },
   "volume.CreateVolume": {
    "type": "object",
    "required": [
     "name",
     "userCpg",
     "sizeMiB"
    ],
    "properties": {
     "comments": {
      "description": "Comments of the volume to be created",
      "type": "string"
     },
     "count": {
      "description": "Count of volumes to be created",
      "type": "integer",
      "format": "int32"
     },
     "dataReduction": {
      "description": "Data reduction setting of the volume to be created",
      "type": "boolean"
     },
     "expireSecs": {
      "description": "Expiration value specified for volume snapshot",
      "type": "integer",
      "format": "uint64"
     },
     "name": {
      "description": "Name of the volume to be created",
      "type": "string"
     },
     "ransomWare": {
      "description": "Enable/disabled the ransomware policy for the volume",
      "type": "boolean"
     },
     "retainSecs": {
      "description": "Retention value specified for volume snapshot",
      "type": "integer",
      "format": "uint64"
     },
     "sizeMiB": {
      "description": "Size of the volume to be created",
      "type": "integer",
      "format": "int64"
     },
     "userAllocWarning": {
      "description": "User allocation warning value of the volume to be created",
      "type": "integer",
      "format": "int64"
     },
     "userCpg": {
      "description": "User CPG of the volume to be created",
      "type": "string"
     }
    },
    "example": {
     "name": "exampleVolume",
     "sizeMiB": 16384,
     "userCpg": "SSD_r6",
     "dataReduction": false,
     "ransomware": false,
     "count": 10
    }
   },
   "volume.EditVolume": {
    "type": "object",
    "properties": {
     "comments": {
      "description": "Edit comment of virtual volume",
      "type": "string"
     },
     "expireSecs": {
      "description": "Expiration value specified for volume snapshot",
      "type": "integer",
      "format": "uint64"
     },
     "name": {
      "description": "Edit Name of virtual volume",
      "type": "string"
     },
     "ransomWare": {
      "description": "Enable/disable the ransomware policy of the volume",
      "type": "boolean"
     },
     "retainSecs": {
      "description": "Retention value specified for volume snapshot",
      "type": "integer",
      "format": "uint64"
     },
     "sizeMiB": {
      "description": "Edit Size of virtual volume",
      "type": "number",
      "format": "float64"
     },
     "userAllocWarning": {
      "description": "Edit User Space Allocation warning of virtual volume",
      "type": "integer",
      "format": "int64"
     },
     "wwn": {
      "description": "Edit VV WWN",
      "type": "string"
     }
    },
    "example": {
     "name": "exampleVolume",
     "sizeMiB": 25000,
     "ransomware": true
    }
   },
   "volume.Halt_Volume_Copy": {
    "type": "HALT_VVCOPY",
    "fullType": "vvcpy.HaltVvcopy",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: HALT_VVCOPY",
      "type": "string"
     },
     "parameters": {
      "type": "object",
      "description": "Parameters for a custom action",
      "descriptionKey": "SCHEMA_CUSTOM_ACTION_PROPS"
     }
    },
    "description": "Halts an ongoing physical copy.",
    "descriptionKey": "VOLUME_HALT_COPY_DESCRIPTION",
    "title": "HALT_VVCOPY"
   },
   "volume.PromoteVolume": {
    "type": "object",
    "properties": {
     "priority": {
      "description": "Priority value for the promote action",
      "title": "prioritytype.Enum",
      "enum": [
       "PRIORITYTYPE_HIGH",
       "PRIORITYTYPE_MED",
       "PRIORITYTYPE_LOW"
      ],
      "type": "string"
     },
     "rcp": {
      "description": "Indicates if promote action to proceed even if the RW parent volume is currently in a Remote Copy volume group",
      "type": "boolean"
     },
     "target": {
      "description": "Target volume for the promote action",
      "type": "string"
     }
    }
   },
   "volume.Promote_Snapshot": {
    "type": "PROMOTE_SNAPSHOT_VOLUME",
    "fullType": "volume.PromoteVolume",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: PROMOTE_SNAPSHOT_VOLUME",
      "type": "string"
     },
     "parameters": {
      "type": "object",
      "properties": {
       "priority": {
        "description": "Priority value for the promote action",
        "title": "prioritytype.Enum",
        "enum": [
         "PRIORITYTYPE_HIGH",
         "PRIORITYTYPE_MED",
         "PRIORITYTYPE_LOW"
        ],
        "type": "string"
       },
       "rcp": {
        "description": "Indicates if promote action to proceed even if the RW parent volume is currently in a Remote Copy volume group",
        "type": "boolean"
       },
       "target": {
        "description": "Target volume for the promote action",
        "type": "string"
       }
      },
      "description": "Parameters for a custom action",
      "descriptionKey": "SCHEMA_CUSTOM_ACTION_PROPS"
     }
    },
    "description": "Promotes a snapshot to a base volume.",
    "descriptionKey": "VOLUME_PROMOTE_DESCRIPTION",
    "title": "PROMOTE_SNAPSHOT_VOLUME"
   },
   "volume.Promote_Volume_Copy": {
    "type": "PROMOTE_VVCOPY",
    "fullType": "vvcpy.PromoteVvcopy",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: PROMOTE_VVCOPY",
      "type": "string"
     },
     "parameters": {
      "type": "object",
      "description": "Parameters for a custom action",
      "descriptionKey": "SCHEMA_CUSTOM_ACTION_PROPS"
     }
    },
    "description": "Promotes a physical copy to a base volume.",
    "descriptionKey": "VOLUME_PROMOTE_COPY_DESCRIPTION",
    "title": "PROMOTE_VVCOPY"
   },
   "volume.Resync_Volume_Copy": {
    "type": "RESYNC_VVCOPY",
    "fullType": "vvcpy.ResyncVvcopy",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: RESYNC_VVCOPY",
      "type": "string"
     },
     "parameters": {
      "type": "object",
      "properties": {
       "priority": {
        "description": "Specifies the priority of the copy operation when it is started",
        "title": "prioritytype.Enum",
        "enum": [
         "PRIORITYTYPE_HIGH",
         "PRIORITYTYPE_MED",
         "PRIORITYTYPE_LOW"
        ],
        "default": "PRIORITYTYPE_MED",
        "type": "string"
       }
      },
      "description": "Parameters for a custom action",
      "descriptionKey": "SCHEMA_CUSTOM_ACTION_PROPS"
     }
    },
    "description": "Re-synchronizes a volume with its parent volume.",
    "descriptionKey": "VOLUME_RSYNC_COPY_DESCRIPTION",
    "title": "RESYNC_VVCOPY"
   },
   "volume.Snapshot_Volume": {
    "type": "CREATE_SNAPSHOT_VOLUME",
    "fullType": "volume.CreateSnapshot",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: CREATE_SNAPSHOT_VOLUME",
      "type": "string"
     },
     "parameters": {
      "type": "object",
      "properties": {
       "comment": {
        "description": "Free-form comments about volume snapshot",
        "type": "string"
       },
       "customName": {
        "description": "User specified name for the snapshot",
        "type": "string"
       },
       "expireSecs": {
        "description": "Expiration value specified for volume snapshot",
        "type": "integer",
        "format": "uint64"
       },
       "id": {
        "description": "ID of the snapshot to be created",
        "type": "integer",
        "format": "uint64"
       },
       "namePattern": {
        "description": "Pattern that will be used to generate the name of snapshot",
        "title": "snapshotnamepattern.Enum",
        "enum": [
         "PARENT_TIMESTAMP",
         "PARENT_SEC_SINCE_EPOCH",
         "CUSTOM"
        ],
        "type": "string"
       },
       "readOnly": {
        "description": "If true snapshot mode is read only else read/write",
        "type": "boolean"
       },
       "retainSecs": {
        "description": "Retention value specified for volume snapshot",
        "type": "integer",
        "format": "uint64"
       }
      },
      "description": "Parameters for a custom action",
      "descriptionKey": "SCHEMA_CUSTOM_ACTION_PROPS"
     }
    },
    "description": "Creates a snapshot of a volume.",
    "descriptionKey": "VOLUME_SNAPSHOT_DESCRIPTION",
    "title": "CREATE_SNAPSHOT_VOLUME"
   },
   "volume.TuneVolume": {
    "type": "object",
    "required": [
     "userCpgName"
    ],
    "properties": {
     "conversionType": {
      "description": "Change provision type of virtual volume",
      "title": "conversiontype.Enum",
      "enum": [
       "CONVERSIONTYPE_THIN",
       "CONVERSIONTYPE_V1",
       "CONVERSIONTYPE_V2"
      ],
      "default": "V1",
      "type": "string"
     },
     "saveToNewName": {
      "description": "Tune virtual volume and save the original one under a virtual volume",
      "type": "string"
     },
     "userCpgName": {
      "description": "Change user CPG of virtual volume",
      "type": "string"
     }
    }
   },
   "volume.Tune_Volume": {
    "type": "TUNE_VOLUME",
    "fullType": "volume.TuneVolume",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Must be set to: TUNE_VOLUME",
      "type": "string"
     },
     "parameters": {
      "type": "object",
      "required": [
       "userCpgName"
      ],
      "properties": {
       "conversionType": {
        "description": "Change provision type of virtual volume",
        "title": "conversiontype.Enum",
        "enum": [
         "CONVERSIONTYPE_THIN",
         "CONVERSIONTYPE_V1",
         "CONVERSIONTYPE_V2"
        ],
        "default": "V1",
        "type": "string"
       },
       "saveToNewName": {
        "description": "Tune virtual volume and save the original one under a virtual volume",
        "type": "string"
       },
       "userCpgName": {
        "description": "Change user CPG of virtual volume",
        "type": "string"
       }
      },
      "description": "Parameters for a custom action",
      "descriptionKey": "SCHEMA_CUSTOM_ACTION_PROPS"
     }
    },
    "description": "Tunes a volume.",
    "descriptionKey": "VOLUME_TUNE_DESCRIPTION",
    "title": "TUNE_VOLUME"
   },
   "volume.Volume": {
    "type": "object",
    "properties": {
     "adminAllocationSettings": {
      "type": "object",
      "properties": {
       "HA": {
        "type": "object",
        "properties": {
         "args": {
          "description": "Array of optional parameters to be used when formatting the text",
          "type": "array",
          "items": {
           "type": "AnyType"
          }
         },
         "default": {
          "description": "Text in the default language",
          "type": "string"
         },
         "key": {
          "description": "Key of the message in the i18n catalog",
          "type": "string"
         }
        },
        "description": "Current High Availability setting",
        "descriptionKey": "SCHEMA_LDALLOC_CURHA",
        "title": "*utils.I18nValue"
       },
       "RAIDType": {
        "description": "RAID type",
        "type": "string"
       },
       "deviceSpeed": {
        "type": "object",
        "properties": {
         "text": {
          "description": "Textual representation of the device speed",
          "type": "string"
         },
         "value": {
          "description": "Numeric value of the device speed",
          "type": "integer",
          "format": "int32"
         }
        },
        "description": "Device speed",
        "descriptionKey": "SCHEMA_LDALLOC_DEVSPEED",
        "title": "DeviceSpeed"
       },
       "deviceType": {
        "description": "Device type",
        "type": "string"
       },
       "diskFilter": {
        "description": "Disk filter",
        "type": "string"
       },
       "requestedHA": {
        "type": "object",
        "properties": {
         "args": {
          "description": "Array of optional parameters to be used when formatting the text",
          "type": "array",
          "items": {
           "type": "AnyType"
          }
         },
         "default": {
          "description": "Text in the default language",
          "type": "string"
         },
         "key": {
          "description": "Key of the message in the i18n catalog",
          "type": "string"
         }
        },
        "description": "Requested High Availability setting",
        "descriptionKey": "SCHEMA_LDALLOC_REQHA",
        "title": "*utils.I18nValue"
       },
       "setSize": {
        "description": "Set size",
        "type": "string"
       },
       "stepSize": {
        "description": "Step size",
        "type": "integer",
        "format": "int64"
       }
      },
      "description": "Admin allocation settings of the volume",
      "descriptionKey": "SCHEMA_VOLUME_ADMIN_ALLOCATION_SETTINGS",
      "title": "*shared.LdAllocation"
     },
     "applicationSets": {
      "description": "Virtual volume sets for the volume",
      "type": "array",
      "items": {
       "description": "",
       "type": "string"
      }
     },
     "baseId": {
      "description": "Base ID of the volume",
      "type": "integer",
      "format": "int64"
     },
     "bulkvv": {
      "description": "Flag indicating that the volume is a bulk object",
      "type": "boolean"
     },
     "comment": {
      "description": "Generic comments for the volume",
      "type": "string"
     },
     "compressionPolicy": {
      "description": "Compression policy of the volume",
      "type": "string"
     },
     "conversionType": {
      "description": "Conversion type of the volume",
      "title": "conversiontype.Enum",
      "enum": [
       "CONVERSIONTYPE_THIN",
       "CONVERSIONTYPE_V1",
       "CONVERSIONTYPE_V2"
      ],
      "type": "string"
     },
     "copyOfID": {
      "description": "CopyOf ID of the volume. Indicates the parent ID this volume is a copy of.",
      "type": "integer",
      "format": "int64"
     },
     "copyOfShortName": {
      "description": "Short name of volume's parent, if a copy",
      "type": "string"
     },
     "creationTime": {
      "type": "object",
      "properties": {
       "ms": {
        "description": "Epoch time in milliseconds",
        "type": "integer",
        "format": "int64"
       },
       "tz": {
        "description": "Time zone name",
        "type": "string"
       }
      },
      "description": "Creation time of the volume",
      "descriptionKey": "SCHEMA_VOLUME_CREATION_TIME",
      "title": "*shared.Calendar"
     },
     "dds_id": {
      "description": "de-dupe id used to calculate de-duplication stats",
      "type": "integer",
      "format": "int64"
     },
     "dedup": {
      "description": "Dedup value of the volume",
      "type": "string"
     },
     "devType": {
      "description": "Device type of the volume",
      "type": "string"
     },
     "displayname": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Name to be used for display purposes",
      "descriptionKey": "SCHEMA_DISPLAYNAME",
      "title": "*utils.I18nValue"
     },
     "domain": {
      "description": "Domain that the resource belongs to",
      "type": "string"
     },
     "eui64": {
      "description": "64-bit Extended Unique Identifier",
      "type": "string"
     },
     "expirationTime": {
      "type": "object",
      "properties": {
       "ms": {
        "description": "Epoch time in milliseconds",
        "type": "integer",
        "format": "int64"
       },
       "tz": {
        "description": "Time zone name",
        "type": "string"
       }
      },
      "description": "Expiration time of the volume",
      "descriptionKey": "SCHEMA_VOLUME_EXPIRATION_TIME",
      "title": "*shared.Calendar"
     },
     "fullyProvisioned": {
      "description": "Indicates if the volume is fully provisioned",
      "type": "boolean"
     },
     "headsPerCylinder": {
      "description": "Heads per cylinder of the volume",
      "type": "integer",
      "format": "int32"
     },
     "hidden": {
      "description": "Indicates if the volume is hidden",
      "type": "boolean"
     },
     "id": {
      "description": "ID of the volume",
      "type": "integer",
      "format": "int64"
     },
     "name": {
      "description": "Name of the volume",
      "type": "string"
     },
     "nguid": {
      "description": "Namespace Globally Unique Identifier",
      "type": "string"
     },
     "parentID": {
      "description": "Parent ID of the volume",
      "type": "integer",
      "format": "int64"
     },
     "pevv": {
      "description": "Flag indicating that the volume is associated with a Storage Container.",
      "type": "boolean"
     },
     "phcopyTaskId": {
      "description": "If non-zero, the ID of a system task tracking a volume copy or rcopy sync",
      "type": "integer",
      "format": "int64"
     },
     "physParentID": {
      "description": "Physical parent ID of the volume",
      "type": "integer",
      "format": "int64"
     },
     "physicalCopy": {
      "description": "Physical copy of the volume",
      "type": "boolean"
     },
     "policy": {
      "type": "object",
      "properties": {
       "fileService": {
        "description": "Indicates if file service policy is set",
        "type": "boolean"
       },
       "noCache": {
        "description": "Indicates if no cache policy is set",
        "type": "boolean"
       },
       "oneHost": {
        "description": "Indicates if one host policy is set",
        "type": "boolean"
       },
       "ransomWare": {
        "description": "Indicates if ransomware detection policy is set",
        "type": "boolean"
       },
       "staleSnapshot": {
        "description": "Indicates if stale snapshot policy is set",
        "type": "boolean"
       },
       "system": {
        "description": "Indicates if system policy is set",
        "type": "boolean"
       },
       "zeroDetect": {
        "description": "Indicates if zero detect policy is set",
        "type": "boolean"
       },
       "zeroFill": {
        "description": "Indicates if zero fill policy is set",
        "type": "boolean"
       }
      },
      "description": "Policy details of the volume",
      "descriptionKey": "SCHEMA_VOLUME_POLICY",
      "title": "*volume.VolumePolicy"
     },
     "provType": {
      "description": "Provisioning type of the volume",
      "title": "provtype.Enum",
      "enum": [
       "PROVTYPE_FULL",
       "PROVTYPE_THIN",
       "PROVTYPE_SNAPSHOT",
       "PROVTYPE_PEER",
       "PROVTYPE_DEDUP",
       "PROVTYPE_DDS",
       "PROVTYPE_UNKNOWN"
      ],
      "type": "string"
     },
     "raid": {
      "description": "RAID value of the volume",
      "type": "string"
     },
     "rcopyStatus": {
      "description": "Remote copy status of the volume",
      "type": "string"
     },
     "readOnly": {
      "description": "Indicates if the volume is read only",
      "type": "boolean"
     },
     "retentionTime": {
      "type": "object",
      "properties": {
       "ms": {
        "description": "Epoch time in milliseconds",
        "type": "integer",
        "format": "int64"
       },
       "tz": {
        "description": "Time zone name",
        "type": "string"
       }
      },
      "description": "Retention time of the volume",
      "descriptionKey": "SCHEMA_VOLUME_RETENTION_TIME",
      "title": "*shared.Calendar"
     },
     "roChildID": {
      "description": "Read only child ID of the volume",
      "type": "integer",
      "format": "int64"
     },
     "rwChildID": {
      "description": "Read/write child ID of the volume",
      "type": "integer",
      "format": "int64"
     },
     "rwareAlert": {
      "description": "Indicates if the volume has a ransomware alert",
      "type": "boolean"
     },
     "sectorsPerTrack": {
      "description": "Sectors per track of the volume",
      "type": "integer",
      "format": "int32"
     },
     "sharedParentId": {
      "description": "Shared parent id of the volume",
      "type": "integer",
      "format": "int64"
     },
     "shortName": {
      "description": "Short name of the volume",
      "type": "string"
     },
     "sizeMiB": {
      "description": "Size of the volume",
      "type": "number",
      "format": "float64"
     },
     "snapshotAllocationSettings": {
      "type": "object",
      "properties": {
       "HA": {
        "type": "object",
        "properties": {
         "args": {
          "description": "Array of optional parameters to be used when formatting the text",
          "type": "array",
          "items": {
           "type": "AnyType"
          }
         },
         "default": {
          "description": "Text in the default language",
          "type": "string"
         },
         "key": {
          "description": "Key of the message in the i18n catalog",
          "type": "string"
         }
        },
        "description": "Current High Availability setting",
        "descriptionKey": "SCHEMA_LDALLOC_CURHA",
        "title": "*utils.I18nValue"
       },
       "RAIDType": {
        "description": "RAID type",
        "type": "string"
       },
       "deviceSpeed": {
        "type": "object",
        "properties": {
         "text": {
          "description": "Textual representation of the device speed",
          "type": "string"
         },
         "value": {
          "description": "Numeric value of the device speed",
          "type": "integer",
          "format": "int32"
         }
        },
        "description": "Device speed",
        "descriptionKey": "SCHEMA_LDALLOC_DEVSPEED",
        "title": "DeviceSpeed"
       },
       "deviceType": {
        "description": "Device type",
        "type": "string"
       },
       "diskFilter": {
        "description": "Disk filter",
        "type": "string"
       },
       "requestedHA": {
        "type": "object",
        "properties": {
         "args": {
          "description": "Array of optional parameters to be used when formatting the text",
          "type": "array",
          "items": {
           "type": "AnyType"
          }
         },
         "default": {
          "description": "Text in the default language",
          "type": "string"
         },
         "key": {
          "description": "Key of the message in the i18n catalog",
          "type": "string"
         }
        },
        "description": "Requested High Availability setting",
        "descriptionKey": "SCHEMA_LDALLOC_REQHA",
        "title": "*utils.I18nValue"
       },
       "setSize": {
        "description": "Set size",
        "type": "string"
       },
       "stepSize": {
        "description": "Step size",
        "type": "integer",
        "format": "int64"
       }
      },
      "description": "Snapshot allocation settings of the volume",
      "descriptionKey": "SCHEMA_VOLUME_SNAPSHOT_ALLOCATION_SETTINGS",
      "title": "*shared.LdAllocation"
     },
     "started": {
      "description": "Indicates if the volume has started",
      "type": "boolean"
     },
     "state": {
      "type": "object",
      "properties": {
       "detailed": {
        "description": "Array of the detailed states of the resource",
        "type": "array",
        "items": {
         "type": "object",
         "properties": {
          "args": {
           "description": "Array of optional parameters to be used when formatting the text",
           "type": "array",
           "items": {
            "type": "AnyType"
           }
          },
          "default": {
           "description": "Text in the default language",
           "type": "string"
          },
          "key": {
           "description": "Key of the message in the i18n catalog",
           "type": "string"
          }
         },
         "title": "utils.I18nValue"
        }
       },
       "overall": {
        "description": "Overall state of the resource",
        "title": "overallstate.Enum",
        "enum": [
         "STATE_UNKNOWN",
         "STATE_NORMAL",
         "STATE_WARNING",
         "STATE_DEGRADED",
         "STATE_FAILED",
         "STATE_NOT_APPLICABLE",
         "STATE_NEW"
        ],
        "type": "string"
       }
      },
      "description": "State of the volume",
      "descriptionKey": "SCHEMA_VOLUME_STATE",
      "title": "shared.ResourceState"
     },
     "systemWWN": {
      "description": "WWN of the array",
      "type": "string"
     },
     "taskTags": {
      "description": "A list of tags used to filter tasks from resource updates",
      "type": "string"
     },
     "thinProvisioned": {
      "description": "Indicates if the volume is thinly provisioned",
      "type": "boolean"
     },
     "type": {
      "description": "Type of the volume",
      "title": "vvtype.Enum",
      "enum": [
       "VVTYPE_BASE",
       "VVTYPE_CLONE",
       "VVTYPE_SNAPSHOT"
      ],
      "type": "string"
     },
     "uid": {
      "description": "Unique Identifier of the resource",
      "type": "string"
     },
     "uri": {
      "description": "URI of the resource",
      "type": "string"
     },
     "userAllocLimit": {
      "description": "User allocation limit of the volume",
      "type": "integer",
      "format": "int64"
     },
     "userAllocWarning": {
      "description": "User allocation warning setting of the volume",
      "type": "integer",
      "format": "int64"
     },
     "userAllocationSettings": {
      "type": "object",
      "properties": {
       "HA": {
        "type": "object",
        "properties": {
         "args": {
          "description": "Array of optional parameters to be used when formatting the text",
          "type": "array",
          "items": {
           "type": "AnyType"
          }
         },
         "default": {
          "description": "Text in the default language",
          "type": "string"
         },
         "key": {
          "description": "Key of the message in the i18n catalog",
          "type": "string"
         }
        },
        "description": "Current High Availability setting",
        "descriptionKey": "SCHEMA_LDALLOC_CURHA",
        "title": "*utils.I18nValue"
       },
       "RAIDType": {
        "description": "RAID type",
        "type": "string"
       },
       "deviceSpeed": {
        "type": "object",
        "properties": {
         "text": {
          "description": "Textual representation of the device speed",
          "type": "string"
         },
         "value": {
          "description": "Numeric value of the device speed",
          "type": "integer",
          "format": "int32"
         }
        },
        "description": "Device speed",
        "descriptionKey": "SCHEMA_LDALLOC_DEVSPEED",
        "title": "DeviceSpeed"
       },
       "deviceType": {
        "description": "Device type",
        "type": "string"
       },
       "diskFilter": {
        "description": "Disk filter",
        "type": "string"
       },
       "requestedHA": {
        "type": "object",
        "properties": {
         "args": {
          "description": "Array of optional parameters to be used when formatting the text",
          "type": "array",
          "items": {
           "type": "AnyType"
          }
         },
         "default": {
          "description": "Text in the default language",
          "type": "string"
         },
         "key": {
          "description": "Key of the message in the i18n catalog",
          "type": "string"
         }
        },
        "description": "Requested High Availability setting",
        "descriptionKey": "SCHEMA_LDALLOC_REQHA",
        "title": "*utils.I18nValue"
       },
       "setSize": {
        "description": "Set size",
        "type": "string"
       },
       "stepSize": {
        "description": "Step size",
        "type": "integer",
        "format": "int64"
       }
      },
      "description": "User allocation settings of the volume",
      "descriptionKey": "SCHEMA_VOLUME_USER_ALLOCATION_SETTINGS",
      "title": "*shared.LdAllocation"
     },
     "userCpgID": {
      "description": "User CPG ID of the volume",
      "type": "integer",
      "format": "int64"
     },
     "userCpgName": {
      "description": "User CPG name of the volume",
      "type": "string"
     },
     "usrCpgShortName": {
      "description": "Short name of the volume's user CPG",
      "type": "string"
     },
     "uuid": {
      "description": "UUID of the volume",
      "type": "string"
     },
     "vlunSectorSize": {
      "description": "VLUN sector size of the volume",
      "type": "integer",
      "format": "int32"
     },
     "wwn": {
      "description": "WWN of the volume",
      "type": "string"
     }
    }
   },
   "volume.VolumeBulkDelete": {
    "type": "object",
    "properties": {
     "cascade": {
      "description": "Cascade bool value for custom bulk delete action.  Any snapshots and clones of the volumes will be deleted before deleting the volume",
      "type": "boolean"
     },
     "uids": {
      "description": "UIDs for bulk action",
      "type": "array",
      "items": {
       "description": "",
       "type": "string"
      }
     },
     "unexport": {
      "description": "Unexport bool value for custom bulk delete action.  Any existing exports for the volumes will be removed before deleting the volume",
      "type": "boolean"
     }
    }
   },
   "volume_capacity.Volume_Capacity": {
    "type": "object",
    "properties": {
     "adminSpace": {
      "type": "object",
      "properties": {
       "freeMiB": {
        "description": "Free space in MiB",
        "type": "number",
        "format": "float64"
       },
       "grownMiB": {
        "description": "Grown space in MiB",
        "type": "number",
        "format": "float64"
       },
       "rawReservedMiB": {
        "description": "Raw reserved space in MiB",
        "type": "number",
        "format": "float64"
       },
       "reclaimedMiB": {
        "description": "Reclaimed space in MiB",
        "type": "number",
        "format": "float64"
       },
       "reservedMiB": {
        "description": "Volume space reserved in MiB",
        "type": "number",
        "format": "float64"
       },
       "totalMiB": {
        "description": "Total space in MiB",
        "type": "number",
        "format": "float64"
       },
       "usedMiB": {
        "description": "Used space in MiB",
        "type": "number",
        "format": "float64"
       }
      },
      "description": "Admin space details of the volume",
      "descriptionKey": "SCHEMA_VOLUME_ADMIN_SPACE",
      "title": "*volume_capacity.VolumeSpace"
     },
     "branchUsedBlocksMiB": {
      "description": "Used space for a branch of a volume tree",
      "type": "number",
      "format": "float64"
     },
     "branchVSizeMiB": {
      "description": "Branch vsize",
      "type": "number",
      "format": "float64"
     },
     "compactRatio": {
      "description": "Compaction ratio",
      "type": "number",
      "format": "float64"
     },
     "compactionEfficiency": {
      "description": "Compact efficiency",
      "type": "number",
      "format": "float64"
     },
     "compressRatio": {
      "description": "Compression ratio",
      "type": "number",
      "format": "float64"
     },
     "compressSaveMb": {
      "description": "Savings from compression in MiB",
      "type": "integer",
      "format": "int64"
     },
     "compressionEfficiency": {
      "description": "Compression efficiency of the volume",
      "type": "number",
      "format": "float64"
     },
     "conversionType": {
      "description": "Conversion type of the volume",
      "title": "conversiontype.Enum",
      "enum": [
       "CONVERSIONTYPE_THIN",
       "CONVERSIONTYPE_V1",
       "CONVERSIONTYPE_V2"
      ],
      "type": "string"
     },
     "copiedMB": {
      "description": "Copied size in MiB",
      "type": "number",
      "format": "float64"
     },
     "copiedPerc": {
      "description": "Copied percent",
      "type": "number",
      "format": "float32"
     },
     "displayname": {
      "type": "object",
      "properties": {
       "args": {
        "description": "Array of optional parameters to be used when formatting the text",
        "type": "array",
        "items": {
         "type": "AnyType"
        }
       },
       "default": {
        "description": "Text in the default language",
        "type": "string"
       },
       "key": {
        "description": "Key of the message in the i18n catalog",
        "type": "string"
       }
      },
      "description": "Name to be used for display purposes",
      "descriptionKey": "SCHEMA_DISPLAYNAME",
      "title": "*utils.I18nValue"
     },
     "domain": {
      "description": "Domain that the resource belongs to",
      "type": "string"
     },
     "hostWrittenMiB": {
      "description": "Host written value in MiB of the volume",
      "type": "number",
      "format": "float64"
     },
     "hostWrittenToVirtualPercent": {
      "description": "Percentage of host written value to virtual size of the volume",
      "type": "number",
      "format": "float32"
     },
     "name": {
      "description": "Name of the volume",
      "type": "string"
     },
     "nonReducibleMb": {
      "description": "Amount of data that could not be reduced",
      "type": "integer",
      "format": "int64"
     },
     "provType": {
      "description": "Provisioning type of the volume",
      "type": "string"
     },
     "reduceRatio": {
      "description": "Reduce ratio",
      "type": "number",
      "format": "float64"
     },
     "reduceSaveMb": {
      "description": "Reduction savings in Mb",
      "type": "integer",
      "format": "int64"
     },
     "reducibleReduceRatio": {
      "description": "Reducible reduction ratio",
      "type": "number",
      "format": "float64"
     },
     "reducibleReduceSaveMb": {
      "description": "Reducible reductions savings in Mb",
      "type": "integer",
      "format": "int64"
     },
     "sizeMiB": {
      "description": "Size of the volume",
      "type": "number",
      "format": "float64"
     },
     "snapshotTdvvSize": {
      "type": "object",
      "properties": {
       "ddcSizeMiB": {
        "description": "DDC size in MiB of the TDVV snapshot",
        "type": "number",
        "format": "float64"
       },
       "ddsSizeMiB": {
        "description": "DDS size in MiB of the TDVV snapshot",
        "type": "number",
        "format": "float64"
       },
       "virtualSizeMiB": {
        "description": "Virtual size in MiB of the TDVV snapshot",
        "type": "number",
        "format": "float64"
       },
       "writtenSizeMiB": {
        "description": "Written size in MiB of the TDVV snapshot",
        "type": "number",
        "format": "float64"
       }
      },
      "description": "Snapshot TDVV size",
      "descriptionKey": "SCHEMA_VOLUME_SNAP_TDVV_SIZE",
      "title": "*volume_capacity.SnapshotTdvvSize"
     },
     "snapshotUsedToVirtualPercent": {
      "description": "Percentage of snapshot used value to virtual size of the volume",
      "type": "number",
      "format": "float32"
     },
     "spaceCalculationTime": {
      "type": "object",
      "properties": {
       "ms": {
        "description": "Epoch time in milliseconds",
        "type": "integer",
        "format": "int64"
       },
       "tz": {
        "description": "Time zone name",
        "type": "string"
       }
      },
      "description": "Space calculation time of the volume",
      "descriptionKey": "SCHEMA_VOLUME_SPACE_CALC_TIME",
      "title": "*shared.Calendar"
     },
     "systemWWN": {
      "description": "WWN of the array",
      "type": "string"
     },
     "thinRatio": {
      "description": "Space savings from a fully allocated VV (CPVV) to a thinly allocated VV (TPVV)",
      "type": "number",
      "format": "float64"
     },
     "thinSaveMb": {
      "description": "Thin savings in MiB",
      "type": "integer",
      "format": "int64"
     },
     "totalRatio": {
      "description": "Total space savings from a fully allocated VV (CPVV) to a thinly allocated VV (TPVV), including thin, compression, dedup, clone, zero packing, and snaps, in MiB",
      "type": "number",
      "format": "float64"
     },
     "totalRawReservedMiB": {
      "description": "Total raw reserved space of the volume",
      "type": "number",
      "format": "float64"
     },
     "totalReservedMiB": {
      "description": "Total reserved space of the volume",
      "type": "number",
      "format": "float64"
     },
     "totalSaveMb": {
      "description": "Total space savings, including thin, compression, dedup, clone, zero packing, and snaps, in MiB",
      "type": "integer",
      "format": "int64"
     },
     "totalSpaceMiB": {
      "description": "Total space of the volume",
      "type": "number",
      "format": "float64"
     },
     "treePhysicalUsed": {
      "description": "Physical used space of the volume tree",
      "type": "integer",
      "format": "int64"
     },
     "treeVirtualSizeMiB": {
      "description": "Virtual size of volume tree",
      "type": "number",
      "format": "float64"
     },
     "type": {
      "description": "Type of the volume",
      "type": "string"
     },
     "uid": {
      "description": "Unique Identifier of the resource",
      "type": "string"
     },
     "uri": {
      "description": "URI of the resource",
      "type": "string"
     },
     "usedBlocksMiB": {
      "description": "Used space from blocks",
      "type": "number",
      "format": "float64"
     },
     "usedSizeMiB": {
      "description": "Used size of the volume",
      "type": "number",
      "format": "float64"
     },
     "userReservedToVirtualPercent": {
      "description": "Percentage of user reserved value to virtual size of the volume",
      "type": "number",
      "format": "float32"
     },
     "userSpace": {
      "type": "object",
      "properties": {
       "freeMiB": {
        "description": "Free space in MiB",
        "type": "number",
        "format": "float64"
       },
       "grownMiB": {
        "description": "Grown space in MiB",
        "type": "number",
        "format": "float64"
       },
       "rawReservedMiB": {
        "description": "Raw reserved space in MiB",
        "type": "number",
        "format": "float64"
       },
       "reclaimedMiB": {
        "description": "Reclaimed space in MiB",
        "type": "number",
        "format": "float64"
       },
       "reservedMiB": {
        "description": "Volume space reserved in MiB",
        "type": "number",
        "format": "float64"
       },
       "totalMiB": {
        "description": "Total space in MiB",
        "type": "number",
        "format": "float64"
       },
       "usedMiB": {
        "description": "Used space in MiB",
        "type": "number",
        "format": "float64"
       }
      },
      "description": "User space details of the volume",
      "descriptionKey": "SCHEMA_VOLUME_USER_SPACE",
      "title": "*volume_capacity.VolumeSpace"
     },
     "userUsedToVirtualPercent": {
      "description": "Percentage of user used value to virtual size of the volume",
      "type": "number",
      "format": "float32"
     },
     "vvtreeHostWrtMb": {
      "description": "Total data written to volume family tree by the host",
      "type": "integer",
      "format": "int64"
     },
     "wwn": {
      "description": "Volume WWN",
      "type": "string"
     }
    }
   },
   "vvcpy.CreateVvcopy": {
    "type": "object",
    "required": [
     "destination"
    ],
    "properties": {
     "addToSet": {
      "description": "Adds the volume copies to the specified volume set. The set will be created if it does not exist and will inherit attributes from the parent set unless specifically overridden. Can only be used with online option",
      "type": "string"
     },
     "appSetBusinessUnit": {
      "description": "Business unit for an application that is using this set",
      "type": "string"
     },
     "appSetComments": {
      "description": "Free-form comments about virtual volume set",
      "type": "string"
     },
     "appSetExcludeAIQoS": {
      "description": "Indicates if to exclude the virtual volume set from aiqos or not.",
      "title": "excludeaiqos.Enum",
      "enum": [
       "yes",
       "no"
      ],
      "type": "string"
     },
     "appSetImportance": {
      "description": "Virtual volume set importance",
      "type": "string"
     },
     "appSetType": {
      "description": "Type of the application using this set",
      "type": "string"
     },
     "bulkvv": {
      "description": "Make the new created target volume VMware specific",
      "type": "boolean"
     },
     "destination": {
      "description": "Specifies the destination volume name or volume set name for the copy operation. The volume set name must start with 'set:'",
      "type": "string"
     },
     "destinationCpg": {
      "description": "Specifies the destination CPG to use for the destination volume. Mandatory if online option is specified",
      "type": "string"
     },
     "enableResync": {
      "description": "Specifies that the destination volume be re-synchronized with its parent volume using a saved snapshot so that only the changes need to be copied",
      "type": "boolean"
     },
     "expireSecs": {
      "description": "Expiration value specified for volume snapshot",
      "type": "integer",
      "format": "uint64"
     },
     "online": {
      "description": "With this option the destination can be immediately exported and is automatically created. This option requires the destinationCpg parameter",
      "type": "boolean"
     },
     "priority": {
      "description": "Specifies the priority of the copy operation when it is started",
      "title": "prioritytype.Enum",
      "enum": [
       "PRIORITYTYPE_HIGH",
       "PRIORITYTYPE_MED",
       "PRIORITYTYPE_LOW"
      ],
      "type": "string"
     },
     "reduce": {
      "description": "Indicates that the volume the online copy creates should be a volume using both the dedup and compression technologies. Without this option a thinly provisioned volume is created",
      "type": "boolean"
     },
     "retainSecs": {
      "description": "Retention value specified for volume snapshot",
      "type": "integer",
      "format": "uint64"
     },
     "selectionType": {
      "description": "Specifies how volumes are selected from destination virtual volume set. This is applicable only for non-online virtual volume set clones where destination is a set.",
      "title": "selectiontype.Enum",
      "enum": [
       "PARENTVV_INDEX",
       "PARENTVV_PREFIX"
      ],
      "type": "string"
     },
     "skipZero": {
      "description": "When copying from a thin provisioned source, only copy allocated portions of the source volume",
      "type": "boolean"
     }
    }
   },
   "vvcpy.HaltVvcopy": {
    "type": "object"
   },
   "vvcpy.PromoteVvcopy": {
    "type": "object"
   },
   "vvcpy.ResyncVvcopy": {
    "type": "object",
    "properties": {
     "priority": {
      "description": "Specifies the priority of the copy operation when it is started",
      "title": "prioritytype.Enum",
      "enum": [
       "PRIORITYTYPE_HIGH",
       "PRIORITYTYPE_MED",
       "PRIORITYTYPE_LOW"
      ],
      "default": "PRIORITYTYPE_MED",
      "type": "string"
     }
    }
   },
   "vvolsc.AttachDetachvVolSC": {
    "type": "object",
    "required": [
     "hostName",
     "action"
    ],
    "properties": {
     "action": {
      "description": "Attach or Detach vVolsc action ATTACH_VVOLSC, DETACH_VVOLSC",
      "type": "string"
     },
     "hostName": {
      "description": "Attach or Detach vVolsc host",
      "type": "string"
     }
    }
   },
   "vvolsc.CreateVvolSC": {
    "type": "object",
    "required": [
     "name",
     "hostNames"
    ],
    "properties": {
     "comment": {
      "description": "Create vVol storage container comment",
      "type": "string"
     },
     "domain": {
      "description": "Create vVolsc domain of the storage container",
      "type": "string"
     },
     "hostNames": {
      "description": "Create vVol storage container host list",
      "type": "array",
      "items": {
       "description": "",
       "type": "string"
      }
     },
     "name": {
      "description": "Create vVolsc name of the storage container",
      "type": "string"
     },
     "scType": {
      "description": "Create vVol storage container type",
      "title": "sctype.Enum",
      "enum": [
       "UNKNOWN",
       "SCSI",
       "NVMe"
      ],
      "type": "string"
     }
    }
   },
   "vvolsc.EditVvolSC": {
    "type": "object",
    "required": [
     "name"
    ],
    "properties": {
     "comment": {
      "description": "Update comment of the storage container",
      "type": "string"
     },
     "growthLimitMiB": {
      "description": "Limit size in MiB beyond which the admin/data space will not grow",
      "type": "integer",
      "format": "uint64"
     },
     "growthSizeMiB": {
      "description": "Size in MiB of the admin/data space at which a warning alert is generated",
      "type": "integer",
      "format": "uint64"
     },
     "growthWarnMiB": {
      "description": "Size in MiB of the admin/data space at which a warning alert is generated",
      "type": "integer",
      "format": "uint64"
     },
     "hostNames": {
      "description": "Update host of the storage container",
      "type": "array",
      "items": {
       "description": "",
       "type": "string"
      }
     },
     "name": {
      "description": "Edit name of the storage container",
      "type": "string"
     }
    }
   }
  }
 }
}
